// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

NHSTUB(AllocateMemory, 0xff811ac4)
NHSTUB(AllocateUncacheableMemory, 0xff814c2c)
NHSTUB(Close, 0xff86f6a0)
NHSTUB(CreatePhysicalVram, 0xff9354a4)
NHSTUB(CreateTask, 0xff821598)
NHSTUB(CreateTaskStrict, 0xff822638)
NHSTUB(DeleteFile_Fut, 0xff86883c)
NHSTUB(DisableDispatch, 0xff8213bc)
// Best match: 96%
NHSTUB(DisplayImagePhysicalScreen, 0xff9347d8)
// Best match: 56%
//NHSTUB(DoAFLock, 0xff95c3d8) -- stubs_entry_2.S = 0xff95c3e0
NHSTUB(EnableDispatch, 0xff821448)
// ERROR: EnterToCompensationEVF is not found!
NHSTUB(ExecuteEventProcedure, 0xff816b44)
// Best match: 73%
//NHSTUB(ExitFromCompensationEVF, 0xff95e464) -- stubs_entry_2.S = 0x00000000
NHSTUB(ExitTask, 0xff821958)
NHSTUB(Fclose_Fut, 0xff86897c)
NHSTUB(Feof_Fut, 0xff868b90)
NHSTUB(Fflush_Fut, 0xff868bc8)
NHSTUB(Fgets_Fut, 0xff868b00)
NHSTUB(Fopen_Fut, 0xff868940)
NHSTUB(Fread_Fut, 0xff868a60)
NHSTUB(FreeMemory, 0xff811ad0)
NHSTUB(FreeUncacheableMemory, 0xff814c60)
NHSTUB(Fseek_Fut, 0xff868b48)
NHSTUB(Fwrite_Fut, 0xff868ab0)
// Best match: 78%
NHSTUB(GetBatteryTemperature, 0xff82d270)
// Best match: 79%
NHSTUB(GetCCDTemperature, 0xff82d25c)
NHSTUB(GetCurrentAvValue, 0xffac4178)
NHSTUB(GetCurrentTargetDistance, 0xffac4120)
// Best match: 80%
//NHSTUB(GetDrive_ClusterSize, 0xff86eef0) -- stubs_entry_2.S = 0xff86ee78
// Best match: 80%
//NHSTUB(GetDrive_FreeClusters, 0xff86eef0) -- stubs_entry_2.S = 0xff867c04
// Best match: 80%
//NHSTUB(GetDrive_TotalClusters, 0xff86ee78) -- stubs_entry_2.S = 0xff86eeb4
// ALT: NHSTUB(GetDrive_TotalClusters, 0xff86eeb4) // 20/5
// Best match: 96%
NHSTUB(GetFocusLensSubjectDistance, 0xffab6354)
// Best match: 92%
NHSTUB(GetFocusLensSubjectDistanceFromLens, 0xffab68f4)
// Best match: 79%
NHSTUB(GetOpticalTemperature, 0xff82d248)
// Best match: 86%
NHSTUB(GetParameterData, 0xff977cd8)
NHSTUB(GetPropertyCase, 0xff82487c)
// Best match: 96%
NHSTUB(GetSystemTime, 0xff814e64)
// ALT: NHSTUB(GetSystemTime, 0xff814e64) // 26/1
// Best match: 93%
NHSTUB(GetZoomLensCurrentPoint, 0xffaa6fcc)
// ALT: NHSTUB(GetZoomLensCurrentPoint, 0xffaa6fcc) // 27/2
// Best match: 93%
NHSTUB(GetZoomLensCurrentPosition, 0xffaa6fe0)
// ALT: NHSTUB(GetZoomLensCurrentPosition, 0xffaa6fe0) // 27/2
NHSTUB(IsStrobeChargeCompleted, 0xff91053c)
NHSTUB(LockMainPower, 0xff972eac)
// ERROR: MakeAFScan is not found!
NHSTUB(MakeDirectory, 0xff86f944)
NHSTUB(MakeDirectory_Fut, 0xff8688c8)
// Best match: 90%
NHSTUB(Mount_FileSystem, 0xff86e940)
// ALT: NHSTUB(Mount_FileSystem, 0xff86e940) // 27/3
// Best match: 96%
NHSTUB(MoveFocusLensToDistance, 0xffac43c0)
NHSTUB(MoveZoomLensWithPoint, 0xffaa6eac)
// ALT: NHSTUB(MoveZoomLensWithPoint, 0xffaa6eac) // 25/0
NHSTUB(Open, 0xff86f678)
NHSTUB(PT_PlaySound, 0xff96a36c)
// Best match: 89%
NHSTUB(PhySw_testgpio, 0xff827f08)
NHSTUB(PostLogicalEventForNotPowerType, 0xff96ee68)
NHSTUB(PostLogicalEventToUI, 0xff96eee4)
// ALT: NHSTUB(PostLogicalEventToUI, 0xff96ef6c) // 21/0
NHSTUB(ProtectFile, 0xff867fa8)
// Best match: 92%
NHSTUB(PutInNdFilter, 0xffac2194)
// ALT: NHSTUB(PutInNdFilter, 0xffac2194) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffac3d24) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffac3d24) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffac3d6c) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffac3d6c) // 25/2
// Best match: 94%
NHSTUB(PutOutNdFilter, 0xffac21dc)
// ALT: NHSTUB(PutOutNdFilter, 0xffac21dc) // 16/1
NHSTUB(Read, 0xff86f734)
NHSTUB(RefreshPhysicalScreen, 0xff989c68)
NHSTUB(Remove, 0xff86f6c0)
NHSTUB(RenameFile_Fut, 0xff8687bc)
NHSTUB(Restart, 0xff822ab0)
// Best match: 95%
NHSTUB(SetAE_ShutterSpeed, 0xffac7c68)
NHSTUB(SetAutoShutdownTime, 0xff972db0)
NHSTUB(SetCurrentCaptureModeType, 0xff9a3fa8)
NHSTUB(SetFileAttributes, 0xff86f858)
// Best match: 88%
NHSTUB(SetLogicalEventActive, 0xff970c30)
// Best match: 86%
NHSTUB(SetParameterData, 0xff977bf8)
NHSTUB(SetPropertyCase, 0xff824750)
NHSTUB(SleepTask, 0xff8214ac)
NHSTUB(TakeSemaphore, 0xff820fa8)
NHSTUB(TurnOffBackLight, 0xff9bbc6c)
NHSTUB(TurnOnBackLight, 0xff9bbc3c)
// Best match: 78%
//NHSTUB(UnlockAF, 0xff903a5c) -- stubs_entry_2.S = 0xff95c424
// ALT: NHSTUB(UnlockAF, 0xff95c428) // 11/3
NHSTUB(UnlockMainPower, 0xff972f44)
NHSTUB(Unmount_FileSystem, 0xff86ea58)
// Best match: 89%
NHSTUB(UnsetZoomForMovie, 0xff9aef90)
NHSTUB(UpdateMBROnFlash, 0xff86ebac)
// ERROR: VbattGet is not found!
NHSTUB(Write, 0xff86f740)
// Best match: 64%
NHSTUB(WriteSDCard, 0xff87e128)
NHSTUB(_log, 0xffafef88)
// ALT: NHSTUB(_log, 0xffafef88) // 27/0
NHSTUB(_log10, 0xffafb328)
// ALT: NHSTUB(_log10, 0xffafb328) // 27/0
NHSTUB(_pow, 0xffafb4b0)
// ALT: NHSTUB(_pow, 0xffafb4b0) // 25/0
NHSTUB(_sqrt, 0xffafd384)
// ALT: NHSTUB(_sqrt, 0xffafd384) // 24/0
// Best match: 96%
NHSTUB(add_ptp_handler, 0xffa75b94)
NHSTUB(apex2us, 0xff8b1f04)
NHSTUB(chdir, 0xffb09aac)
// ALT: NHSTUB(chdir, 0xffb09aac) // 27/0
NHSTUB(close, 0xffb093ec)
NHSTUB(closedir, 0xffb06874)
NHSTUB(errnoOfTaskGet, 0xffb07040)
// Best match: 93%
NHSTUB(exmem_alloc, 0xff81282c)
// ERROR: free is not found!
NHSTUB(ints_disable, 0xff81da18)
NHSTUB(ints_enable, 0xff81da24)
NHSTUB(ioctl, 0xffb0952c)
NHSTUB(iosDevAdd, 0xffb0a60c)
NHSTUB(iosDevDelete, 0xffb0a5e4)
NHSTUB(iosDevFind, 0xffb0a598)
NHSTUB(iosDrvInstall, 0xffb0a8d0)
NHSTUB(isalpha, 0xffb00918)
NHSTUB(isdigit, 0xffb00948)
NHSTUB(islower, 0xffb00978)
NHSTUB(ispunct, 0xffb009a8)
NHSTUB(isspace, 0xffb009c0)
NHSTUB(isupper, 0xffb009d8)
NHSTUB(isxdigit, 0xffb009f0)
NHSTUB(kbd_p1_f, 0xff826c64)
NHSTUB(kbd_p1_f_cont, 0xff826c70)
NHSTUB(kbd_p2_f, 0xff827048)
// Best match: 83%
NHSTUB(kbd_pwr_off, 0xff827ec4)
// ALT: NHSTUB(kbd_pwr_off, 0xff827ec4) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff827ee0) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff827ee0) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff828ee0) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff828efc) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff828fe8) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829004) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff8290d4) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff8290f0) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829238) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829254) // 5/1
// ERROR: kbd_pwr_on is not found!
NHSTUB(kbd_read_keys_r2, 0xff8279b0)
// Best match: 93%
NHSTUB(localtime, 0xffb05068)
NHSTUB(lseek, 0xffb09530)
// Best match: 53%
NHSTUB(malloc, 0xffb0c42c)
// ALT: NHSTUB(malloc, 0xffb0c42c) // 15/13
NHSTUB(memPartInfoGet, 0xffb0c84c)
NHSTUB(memchr, 0xffb04414)
NHSTUB(memcmp, 0xffb04448)
// ALT: NHSTUB(memcmp, 0xffb1100c) // 9/0
NHSTUB(memcpy, 0xffb04484)
NHSTUB(memset, 0xffb044fc)
NHSTUB(mkdir, 0xff86f888)
NHSTUB(mktime, 0xffb05230)
NHSTUB(open, 0xffb09a30)
NHSTUB(opendir, 0xffb068a8)
NHSTUB(qsort, 0xffb03ca8)
NHSTUB(rand, 0xffb03ccc)
// ALT: NHSTUB(rand, 0xffb03ccc) // 8/0
NHSTUB(read, 0xffb0944c)
NHSTUB(readdir, 0xffb06840)
NHSTUB(rename, 0xffb09a38)
// ALT: NHSTUB(rename, 0xffb09a38) // 26/0
NHSTUB(rewinddir, 0xffb06868)
NHSTUB(srand, 0xffb03cf0)
// ALT: NHSTUB(srand, 0xffb03cf0) // 4/0
NHSTUB(stat, 0xffb0693c)
NHSTUB(strcat, 0xffb0451c)
NHSTUB(strchr, 0xffb04548)
NHSTUB(strcmp, 0xffb0456c)
NHSTUB(strcpy, 0xffb04700)
NHSTUB(strftime, 0xffb05d88)
NHSTUB(strlen, 0xffb04864)
NHSTUB(strncmp, 0xffb048c8)
NHSTUB(strncpy, 0xffb0490c)
// ALT: NHSTUB(strncpy, 0xffb0490c) // 24/0
NHSTUB(strpbrk, 0xffb04954)
NHSTUB(strrchr, 0xffb04990)
// ALT: NHSTUB(strrchr, 0xffb04990) // 8/0
NHSTUB(strtol, 0xffb040e4)
NHSTUB(strtoul, 0xffb0428c)
NHSTUB(taskCreateHookAdd, 0xffb0faac)
NHSTUB(taskDeleteHookAdd, 0xffb0f9e8)
// Best match: 82%
NHSTUB(taskIdListGet, 0xffb19a74)
NHSTUB(taskLock, 0xffb1a130)
NHSTUB(taskName, 0xffb1996c)
NHSTUB(taskResume, 0xffb19d50)
NHSTUB(taskSuspend, 0xffb19b7c)
NHSTUB(taskUnlock, 0xffb1a1d8)
NHSTUB(time, 0xffb05db4)
// ALT: NHSTUB(time, 0xffb05db4) // 25/0
NHSTUB(tolower, 0xffb00a08)
NHSTUB(toupper, 0xffb00a18)
NHSTUB(utime, 0xffb069d0)
// ALT: NHSTUB(utime, 0xffb069d0) // 26/0
NHSTUB(vsprintf, 0xffb08194)
NHSTUB(write, 0xffb094bc)
