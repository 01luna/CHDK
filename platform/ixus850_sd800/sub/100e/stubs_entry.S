// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

//NHSTUB(AllocateMemory, 0xff811ab0) -- stubs_entry_2.S = 0xff81ad84
NHSTUB(AllocateUncacheableMemory, 0xff814fb4)
NHSTUB(Close, 0xff87a40c)
NHSTUB(CreatePhysicalVram, 0xff960d4c)
NHSTUB(CreateTask, 0xff8226e0)
NHSTUB(CreateTaskStrict, 0xff823780)
NHSTUB(DeleteFile_Fut, 0xff8732cc)
NHSTUB(DisableDispatch, 0xff822504)
// Best match: 93%
NHSTUB(DisplayImagePhysicalScreen, 0xff95ffdc)
// ALT: NHSTUB(DisplayImagePhysicalScreen, 0xff95ffdc) // 29/2
// Best match: 78%
NHSTUB(DoAFLock, 0xff995318)
NHSTUB(EnableDispatch, 0xff822590)
// Best match: 90%
NHSTUB(EnterToCompensationEVF, 0xff9954ec)
NHSTUB(ExecuteEventProcedure, 0xff816e50)
// Best match: 66%
//NHSTUB(ExitFromCompensationEVF, 0xff998b8c) -- stubs_entry_2.S = 0xff99552c
// ALT: NHSTUB(ExitFromCompensationEVF, 0xff998be8) // 20/10
// ALT: NHSTUB(ExitFromCompensationEVF, 0xff998ca4) // 20/10
NHSTUB(ExitTask, 0xff822aa0)
NHSTUB(Fclose_Fut, 0xff873440)
NHSTUB(Feof_Fut, 0xff87363c)
NHSTUB(Fflush_Fut, 0xff873678)
NHSTUB(Fgets_Fut, 0xff8735a4)
NHSTUB(Fopen_Fut, 0xff873400)
NHSTUB(Fread_Fut, 0xff8734fc)
//NHSTUB(FreeMemory, 0xff811abc) -- stubs_entry_2.S = 0xff81ad70
NHSTUB(FreeUncacheableMemory, 0xff814fe8)
NHSTUB(Fseek_Fut, 0xff8735f0)
NHSTUB(Fwrite_Fut, 0xff873550)
// Best match: 85%
NHSTUB(GetBatteryTemperature, 0xff82e4f0)
// Best match: 86%
NHSTUB(GetCCDTemperature, 0xff82e4dc)
NHSTUB(GetCurrentAvValue, 0xffb132b0)
// ALT: NHSTUB(GetCurrentAvValue, 0xffb15558) // 13/0
NHSTUB(GetCurrentTargetDistance, 0xffb15500)
// Best match: 76%
//NHSTUB(GetDrive_ClusterSize, 0xff879cac) -- stubs_entry_2.S = 0xff879bf8
// Best match: 72%
//NHSTUB(GetDrive_FreeClusters, 0xff879bf8) -- stubs_entry_2.S = 0xff879c70
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff879bf8) // 18/7
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff879c34) // 18/7
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff879c34) // 18/7
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff879c70) // 18/7
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff879c70) // 18/7
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff879cac) // 18/7
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff879cac) // 18/7
// Best match: 92%
NHSTUB(GetDrive_TotalClusters, 0xff879c34)
// Best match: 83%
NHSTUB(GetFocusLensSubjectDistance, 0xffb021e8)
// ALT: NHSTUB(GetFocusLensSubjectDistance, 0xffb021e8) // 26/5
// Best match: 92%
NHSTUB(GetFocusLensSubjectDistanceFromLens, 0xffb02754)
// Best match: 86%
NHSTUB(GetOpticalTemperature, 0xff82e4c8)
NHSTUB(GetParameterData, 0xff9b2e94)
// Best match: 92%
NHSTUB(GetPropertyCase, 0xff825a14)
// Best match: 96%
NHSTUB(GetSystemTime, 0xff8151ec)
// ALT: NHSTUB(GetSystemTime, 0xff8151ec) // 26/1
// Best match: 93%
NHSTUB(GetZoomLensCurrentPoint, 0xffaf30e4)
// ALT: NHSTUB(GetZoomLensCurrentPoint, 0xffaf30e4) // 27/2
// Best match: 93%
NHSTUB(GetZoomLensCurrentPosition, 0xffaf30f8)
// ALT: NHSTUB(GetZoomLensCurrentPosition, 0xffaf30f8) // 27/2
NHSTUB(IsStrobeChargeCompleted, 0xff938088)
NHSTUB(LockMainPower, 0xff9ae080)
// Best match: 79%
NHSTUB(MakeAFScan, 0xff999cf8)
NHSTUB(MakeDirectory, 0xff87a720)
NHSTUB(MakeDirectory_Fut, 0xff873380)
// Best match: 90%
NHSTUB(Mount_FileSystem, 0xff879734)
// ALT: NHSTUB(Mount_FileSystem, 0xff879734) // 27/3
// Best match: 96%
NHSTUB(MoveFocusLensToDistance, 0xffb157a0)
NHSTUB(MoveZoomLensWithPoint, 0xffaf2fc4)
// ALT: NHSTUB(MoveZoomLensWithPoint, 0xffaf2fc4) // 25/0
NHSTUB(Open, 0xff87a3e4)
NHSTUB(PT_PlaySound, 0xff9a4ee8)
// Best match: 96%
NHSTUB(PhySw_testgpio, 0xff829398)
NHSTUB(PostLogicalEventForNotPowerType, 0xff9a9df8)
NHSTUB(PostLogicalEventToUI, 0xff9a9e74)
// ALT: NHSTUB(PostLogicalEventToUI, 0xff9a9efc) // 21/0
NHSTUB(ProtectFile, 0xff8729f0)
// Best match: 92%
NHSTUB(PutInNdFilter, 0xffb134a4)
// ALT: NHSTUB(PutInNdFilter, 0xffb134a4) // 25/2
// Best match: 94%
NHSTUB(PutOutNdFilter, 0xffb134ec)
// ALT: NHSTUB(PutOutNdFilter, 0xffb134ec) // 16/1
NHSTUB(Read, 0xff87a4a0)
NHSTUB(RefreshPhysicalScreen, 0xff9c3e2c)
NHSTUB(Remove, 0xff87a42c)
NHSTUB(RenameFile_Fut, 0xff873224)
// Best match: 96%
NHSTUB(Restart, 0xff823c00)
// Best match: 95%
NHSTUB(SetAE_ShutterSpeed, 0xffb18474)
NHSTUB(SetAutoShutdownTime, 0xff9adf84)
NHSTUB(SetCurrentCaptureModeType, 0xff9dd8b4)
NHSTUB(SetFileAttributes, 0xff87a634)
// Best match: 88%
NHSTUB(SetLogicalEventActive, 0xff9abbe0)
NHSTUB(SetParameterData, 0xff9b2db4)
NHSTUB(SetPropertyCase, 0xff8258c4)
NHSTUB(SleepTask, 0xff8225f4)
NHSTUB(TakeSemaphore, 0xff8220f0)
NHSTUB(TurnOffBackLight, 0xff9f8d80)
NHSTUB(TurnOnBackLight, 0xff9f8d50)
// Best match: 78%
//NHSTUB(UnlockAF, 0xff9955a4) -- stubs_entry_2.S = 0xff995364
NHSTUB(UnlockMainPower, 0xff9ae118)
NHSTUB(Unmount_FileSystem, 0xff8797d8)
// Best match: 89%
NHSTUB(UnsetZoomForMovie, 0xff9e9470)
NHSTUB(UpdateMBROnFlash, 0xff87992c)
// Best match: 96%
NHSTUB(VbattGet, 0xff82d38c)
NHSTUB(Write, 0xff87a4ac)
// Best match: 93%
//NHSTUB(WriteSDCard, 0xff889560) -- stubs_entry_2.S = 0xff8896fc
NHSTUB(_log, 0xffb53b6c)
// ALT: NHSTUB(_log, 0xffb53b6c) // 27/0
NHSTUB(_log10, 0xffb4fbf0)
// ALT: NHSTUB(_log10, 0xffb4fbf0) // 27/0
NHSTUB(_pow, 0xffb4fd78)
// ALT: NHSTUB(_pow, 0xffb4fd78) // 25/0
NHSTUB(_sqrt, 0xffb51f68)
// ALT: NHSTUB(_sqrt, 0xffb51f68) // 24/0
// Best match: 96%
NHSTUB(add_ptp_handler, 0xffabd06c)
NHSTUB(apex2us, 0xff8c7eb8)
NHSTUB(chdir, 0xffb5ee34)
// ALT: NHSTUB(chdir, 0xffb5ee34) // 27/0
NHSTUB(close, 0xffb5e774)
NHSTUB(closedir, 0xffb5bbfc)
NHSTUB(errnoOfTaskGet, 0xffb5c3c8)
NHSTUB(exmem_alloc, 0xff812834)
// ERROR: free is not found!
NHSTUB(ints_disable, 0xff81e3e4)
NHSTUB(ints_enable, 0xff81e3f0)
NHSTUB(ioctl, 0xffb5e8b4)
NHSTUB(iosDevAdd, 0xffb5f994)
NHSTUB(iosDevDelete, 0xffb5f96c)
NHSTUB(iosDevFind, 0xffb5f920)
NHSTUB(iosDrvInstall, 0xffb5fc58)
NHSTUB(isalpha, 0xffb55b70)
NHSTUB(isdigit, 0xffb55ba0)
NHSTUB(islower, 0xffb55bd0)
NHSTUB(ispunct, 0xffb55c00)
NHSTUB(isspace, 0xffb55c18)
NHSTUB(isupper, 0xffb55c30)
NHSTUB(isxdigit, 0xffb55c48)
NHSTUB(kbd_p1_f, 0xff8280bc)
NHSTUB(kbd_p1_f_cont, 0xff8280c8)
NHSTUB(kbd_p2_f, 0xff8284a0)
// Best match: 83%
//NHSTUB(kbd_pwr_off, 0xff829354) -- stubs_entry_2.S = 0xff82930c
// ALT: NHSTUB(kbd_pwr_off, 0xff829354) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829370) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829370) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff82a4e8) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff82a504) // 5/1
// Best match: 55%
//NHSTUB(kbd_pwr_on, 0xff961d24) -- stubs_entry_2.S = 0xff8292cc
// ALT: NHSTUB(kbd_pwr_on, 0xff961d50) // 5/4
NHSTUB(kbd_read_keys_r2, 0xff828e30)
// Best match: 93%
NHSTUB(localtime, 0xffb5a3f0)
NHSTUB(lseek, 0xffb5e8b8)
// Best match: 53%
NHSTUB(malloc, 0xffb617b4)
// ALT: NHSTUB(malloc, 0xffb617b4) // 15/13
NHSTUB(memPartInfoGet, 0xffb61bd4)
NHSTUB(memchr, 0xffb5979c)
NHSTUB(memcmp, 0xffb597d0)
// ALT: NHSTUB(memcmp, 0xffb65974) // 9/0
NHSTUB(memcpy, 0xffb5980c)
NHSTUB(memset, 0xffb59884)
NHSTUB(mkdir, 0xff87a664)
NHSTUB(mktime, 0xffb5a5b8)
NHSTUB(open, 0xffb5edb8)
NHSTUB(opendir, 0xffb5bc30)
NHSTUB(qsort, 0xffb59030)
NHSTUB(rand, 0xffb59054)
// ALT: NHSTUB(rand, 0xffb59054) // 8/0
NHSTUB(read, 0xffb5e7d4)
NHSTUB(readdir, 0xffb5bbc8)
NHSTUB(rename, 0xffb5edc0)
// ALT: NHSTUB(rename, 0xffb5edc0) // 26/0
NHSTUB(rewinddir, 0xffb5bbf0)
NHSTUB(srand, 0xffb59078)
// ALT: NHSTUB(srand, 0xffb59078) // 4/0
NHSTUB(stat, 0xffb5bcc4)
NHSTUB(strcat, 0xffb598a4)
NHSTUB(strchr, 0xffb598d0)
NHSTUB(strcmp, 0xffb598f4)
NHSTUB(strcpy, 0xffb59a88)
NHSTUB(strftime, 0xffb5b110)
NHSTUB(strlen, 0xffb59bec)
NHSTUB(strncmp, 0xffb59c50)
NHSTUB(strncpy, 0xffb59c94)
// ALT: NHSTUB(strncpy, 0xffb59c94) // 24/0
NHSTUB(strpbrk, 0xffb59cdc)
NHSTUB(strrchr, 0xffb59d18)
// ALT: NHSTUB(strrchr, 0xffb59d18) // 8/0
NHSTUB(strtol, 0xffb5946c)
NHSTUB(strtoul, 0xffb59614)
NHSTUB(taskCreateHookAdd, 0xffb64414)
NHSTUB(taskDeleteHookAdd, 0xffb64350)
// Best match: 82%
NHSTUB(taskIdListGet, 0xffb6e3dc)
NHSTUB(taskLock, 0xffb6ea98)
NHSTUB(taskName, 0xffb6e2d4)
NHSTUB(taskResume, 0xffb6e6b8)
NHSTUB(taskSuspend, 0xffb6e4e4)
NHSTUB(taskUnlock, 0xffb6eb40)
NHSTUB(time, 0xffb5b13c)
// ALT: NHSTUB(time, 0xffb5b13c) // 25/0
NHSTUB(tolower, 0xffb55c60)
NHSTUB(toupper, 0xffb55c70)
NHSTUB(utime, 0xffb5bd58)
// ALT: NHSTUB(utime, 0xffb5bd58) // 26/0
NHSTUB(vsprintf, 0xffb5d51c)
NHSTUB(write, 0xffb5e844)
