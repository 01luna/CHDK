// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

NHSTUB(AllocateMemory, 0xffc01ab0)
NHSTUB(AllocateUncacheableMemory, 0xffc048f0)
NHSTUB(Close, 0xffc5e4b0)
NHSTUB(CreatePhysicalVram, 0xffd129f0)
NHSTUB(CreateTask, 0xffc1125c)
NHSTUB(CreateTaskStrict, 0xffc122fc)
NHSTUB(DeleteFile_Fut, 0xffc57620)
NHSTUB(DisableDispatch, 0xffc11080)
// Best match: 96%
NHSTUB(DisplayImagePhysicalScreen, 0xffd11c9c)
// Best match: 56%
//NHSTUB(DoAFLock, 0xffd312dc) -- stubs_entry_2.S = 0xffd312e4
NHSTUB(EnableDispatch, 0xffc1110c)
// ERROR: EnterToCompensationEVF is not found!
NHSTUB(ExecuteEventProcedure, 0xffc06808)
// Best match: 73%
//NHSTUB(ExitFromCompensationEVF, 0xffd331e0) -- stubs_entry_2.S = 0xffd331a8
NHSTUB(ExitTask, 0xffc1161c)
NHSTUB(Fclose_Fut, 0xffc57760)
NHSTUB(Feof_Fut, 0xffc57974)
NHSTUB(Fflush_Fut, 0xffc579ac)
NHSTUB(Fgets_Fut, 0xffc578e4)
NHSTUB(Fopen_Fut, 0xffc57724)
NHSTUB(Fread_Fut, 0xffc57844)
NHSTUB(FreeMemory, 0xffc01abc)
NHSTUB(FreeUncacheableMemory, 0xffc04924)
NHSTUB(Fseek_Fut, 0xffc5792c)
NHSTUB(Fwrite_Fut, 0xffc57894)
// Best match: 96%
NHSTUB(GetBatteryTemperature, 0xffc1d030)
// Best match: 96%
NHSTUB(GetCCDTemperature, 0xffc1d01c)
NHSTUB(GetCurrentAvValue, 0xffe83c88)
NHSTUB(GetCurrentTargetDistance, 0xffe83c30)
// Best match: 80%
//NHSTUB(GetDrive_ClusterSize, 0xffc5dd00) -- stubs_entry_2.S = 0xffc5dc88
// Best match: 80%
//NHSTUB(GetDrive_FreeClusters, 0xffc5dcc4) -- stubs_entry_2.S = 0xffc5dd00
// Best match: 84%
//NHSTUB(GetDrive_TotalClusters, 0xffc5dc88) -- stubs_entry_2.S = 0xffc5dcc4
// Best match: 54%
NHSTUB(GetFocusLensSubjectDistance, 0xffe76038)
// ALT: NHSTUB(GetFocusLensSubjectDistance, 0xffe76038) // 17/14
// Best match: 92%
NHSTUB(GetFocusLensSubjectDistanceFromLens, 0xffe765d4)
// Best match: 96%
NHSTUB(GetOpticalTemperature, 0xffc1d008)
// Best match: 86%
NHSTUB(GetParameterData, 0xffd4cce4)
NHSTUB(GetPropertyCase, 0xffc144f0)
// Best match: 96%
NHSTUB(GetSystemTime, 0xffc04b28)
// ALT: NHSTUB(GetSystemTime, 0xffc04b28) // 26/1
// Best match: 93%
NHSTUB(GetZoomLensCurrentPoint, 0xffe6709c)
// ALT: NHSTUB(GetZoomLensCurrentPoint, 0xffe6709c) // 27/2
// Best match: 93%
NHSTUB(GetZoomLensCurrentPosition, 0xffe670b0)
// ALT: NHSTUB(GetZoomLensCurrentPosition, 0xffe670b0) // 27/2
NHSTUB(IsStrobeChargeCompleted, 0xffced918)
NHSTUB(LockMainPower, 0xffd47d64)
// ERROR: MakeAFScan is not found!
NHSTUB(MakeDirectory, 0xffc5e754)
NHSTUB(MakeDirectory_Fut, 0xffc576ac)
// Best match: 90%
NHSTUB(Mount_FileSystem, 0xffc5d754)
// ALT: NHSTUB(Mount_FileSystem, 0xffc5d754) // 27/3
// Best match: 96%
NHSTUB(MoveFocusLensToDistance, 0xffe83ed0)
NHSTUB(MoveZoomLensWithPoint, 0xffe66f7c)
// ALT: NHSTUB(MoveZoomLensWithPoint, 0xffe66f7c) // 25/0
NHSTUB(Open, 0xffc5e488)
NHSTUB(PT_PlaySound, 0xffd3f224)
// Best match: 89%
NHSTUB(PhySw_testgpio, 0xffc17d48)
NHSTUB(PostLogicalEventForNotPowerType, 0xffd43d20)
NHSTUB(PostLogicalEventToUI, 0xffd43d9c)
// ALT: NHSTUB(PostLogicalEventToUI, 0xffd43e24) // 21/0
NHSTUB(ProtectFile, 0xffc56d8c)
// Best match: 92%
NHSTUB(PutInNdFilter, 0xffe81ca0)
// ALT: NHSTUB(PutInNdFilter, 0xffe81ca0) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffe83830) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffe83830) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffe83878) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffe83878) // 25/2
// Best match: 94%
NHSTUB(PutOutNdFilter, 0xffe81ce8)
// ALT: NHSTUB(PutOutNdFilter, 0xffe81ce8) // 16/1
NHSTUB(Read, 0xffc5e544)
NHSTUB(RefreshPhysicalScreen, 0xffd5e944)
NHSTUB(Remove, 0xffc5e4d0)
NHSTUB(RenameFile_Fut, 0xffc575a0)
NHSTUB(Restart, 0xffc12774)
// Best match: 95%
NHSTUB(SetAE_ShutterSpeed, 0xffe87778)
NHSTUB(SetAutoShutdownTime, 0xffd47c68)
NHSTUB(SetCurrentCaptureModeType, 0xffd77c3c)
NHSTUB(SetFileAttributes, 0xffc5e668)
// Best match: 88%
NHSTUB(SetLogicalEventActive, 0xffd45ae8)
// Best match: 86%
NHSTUB(SetParameterData, 0xffd4cc04)
NHSTUB(SetPropertyCase, 0xffc143d4)
NHSTUB(SleepTask, 0xffc11170)
NHSTUB(TakeSemaphore, 0xffc10c6c)
NHSTUB(TurnOffBackLight, 0xffd93808)
NHSTUB(TurnOnBackLight, 0xffd937d8)
// Best match: 78%
//NHSTUB(UnlockAF, 0xffce0f60) -- stubs_entry_2.S = 0xffd31328
// ALT: NHSTUB(UnlockAF, 0xffd3132c) // 11/3
NHSTUB(UnlockMainPower, 0xffd47dfc)
NHSTUB(Unmount_FileSystem, 0xffc5d86c)
// Best match: 89%
NHSTUB(UnsetZoomForMovie, 0xffd82d00)
NHSTUB(UpdateMBROnFlash, 0xffc5d9c0)
// ERROR: VbattGet is not found!
NHSTUB(Write, 0xffc5e550)
// Best match: 64%
//NHSTUB(WriteSDCard, 0xffc6cf24) -- stubs_entry_2.S = 0xffc6d0cc
NHSTUB(_log, 0xffebd934)
// ALT: NHSTUB(_log, 0xffebd934) // 27/0
NHSTUB(_log10, 0xffeb9e0c)
// ALT: NHSTUB(_log10, 0xffeb9e0c) // 27/0
NHSTUB(_pow, 0xffeb9f94)
// ALT: NHSTUB(_pow, 0xffeb9f94) // 25/0
NHSTUB(_sqrt, 0xffebbd30)
// ALT: NHSTUB(_sqrt, 0xffebbd30) // 24/0
// Best match: 96%
NHSTUB(add_ptp_handler, 0xffe35eac)
NHSTUB(apex2us, 0xffc985ec)
NHSTUB(chdir, 0xffec8bb0)
// ALT: NHSTUB(chdir, 0xffec8bb0) // 27/0
NHSTUB(close, 0xffec84f0)
NHSTUB(closedir, 0xffec5978)
NHSTUB(errnoOfTaskGet, 0xffec6144)
// Best match: 93%
NHSTUB(exmem_alloc, 0xffc02818)
// ERROR: free is not found!
NHSTUB(ints_disable, 0xffc0d6dc)
NHSTUB(ints_enable, 0xffc0d6e8)
NHSTUB(ioctl, 0xffec8630)
NHSTUB(iosDevAdd, 0xffec9710)
NHSTUB(iosDevDelete, 0xffec96e8)
NHSTUB(iosDevFind, 0xffec969c)
NHSTUB(iosDrvInstall, 0xffec99d4)
NHSTUB(isalpha, 0xffebf8ec)
NHSTUB(isdigit, 0xffebf91c)
NHSTUB(islower, 0xffebf94c)
NHSTUB(ispunct, 0xffebf97c)
NHSTUB(isspace, 0xffebf994)
NHSTUB(isupper, 0xffebf9ac)
NHSTUB(isxdigit, 0xffebf9c4)
NHSTUB(kbd_p1_f, 0xffc16918)
NHSTUB(kbd_p1_f_cont, 0xffc16924)
NHSTUB(kbd_p2_f, 0xffc16cfc)
NHSTUB(kbd_pwr_off, 0xffc17cd4)
// ALT: NHSTUB(kbd_pwr_off, 0xffc17d04) // 6/0
// ALT: NHSTUB(kbd_pwr_off, 0xffc17d20) // 6/0
NHSTUB(kbd_pwr_on, 0xffc17cac)
NHSTUB(kbd_read_keys_r2, 0xffc1771c)
// Best match: 93%
NHSTUB(localtime, 0xffec416c)
NHSTUB(lseek, 0xffec8634)
// Best match: 53%
NHSTUB(malloc, 0xffecb530)
// ALT: NHSTUB(malloc, 0xffecb530) // 15/13
NHSTUB(memPartInfoGet, 0xffecb950)
NHSTUB(memchr, 0xffec3518)
NHSTUB(memcmp, 0xffec354c)
// ALT: NHSTUB(memcmp, 0xffecf6f0) // 9/0
NHSTUB(memcpy, 0xffec3588)
NHSTUB(memset, 0xffec3600)
NHSTUB(mkdir, 0xffc5e698)
NHSTUB(mktime, 0xffec4334)
NHSTUB(open, 0xffec8b34)
NHSTUB(opendir, 0xffec59ac)
NHSTUB(qsort, 0xffec2dac)
NHSTUB(rand, 0xffec2dd0)
// ALT: NHSTUB(rand, 0xffec2dd0) // 8/0
NHSTUB(read, 0xffec8550)
NHSTUB(readdir, 0xffec5944)
NHSTUB(rename, 0xffec8b3c)
// ALT: NHSTUB(rename, 0xffec8b3c) // 26/0
NHSTUB(rewinddir, 0xffec596c)
NHSTUB(srand, 0xffec2df4)
// ALT: NHSTUB(srand, 0xffec2df4) // 4/0
NHSTUB(stat, 0xffec5a40)
NHSTUB(strcat, 0xffec3620)
NHSTUB(strchr, 0xffec364c)
NHSTUB(strcmp, 0xffec3670)
NHSTUB(strcpy, 0xffec3804)
NHSTUB(strftime, 0xffec4e8c)
NHSTUB(strlen, 0xffec3968)
NHSTUB(strncmp, 0xffec39cc)
NHSTUB(strncpy, 0xffec3a10)
// ALT: NHSTUB(strncpy, 0xffec3a10) // 24/0
NHSTUB(strpbrk, 0xffec3a58)
NHSTUB(strrchr, 0xffec3a94)
// ALT: NHSTUB(strrchr, 0xffec3a94) // 8/0
NHSTUB(strtol, 0xffec31e8)
NHSTUB(strtoul, 0xffec3390)
NHSTUB(taskCreateHookAdd, 0xffece190)
NHSTUB(taskDeleteHookAdd, 0xffece0cc)
// Best match: 82%
NHSTUB(taskIdListGet, 0xffed8158)
NHSTUB(taskLock, 0xffed8814)
NHSTUB(taskName, 0xffed8050)
NHSTUB(taskResume, 0xffed8434)
NHSTUB(taskSuspend, 0xffed8260)
NHSTUB(taskUnlock, 0xffed88bc)
NHSTUB(time, 0xffec4eb8)
// ALT: NHSTUB(time, 0xffec4eb8) // 25/0
NHSTUB(tolower, 0xffebf9dc)
NHSTUB(toupper, 0xffebf9ec)
NHSTUB(utime, 0xffec5ad4)
// ALT: NHSTUB(utime, 0xffec5ad4) // 26/0
NHSTUB(vsprintf, 0xffec7298)
NHSTUB(write, 0xffec85c0)
