// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

NHSTUB(AllocateMemory, 0xffc01ab4)
NHSTUB(AllocateUncacheableMemory, 0xffc048f4)
NHSTUB(Close, 0xffc5d7a8)
NHSTUB(CreatePhysicalVram, 0xffd0c9f4)
NHSTUB(CreateTask, 0xffc11260)
NHSTUB(CreateTaskStrict, 0xffc12300)
NHSTUB(DeleteFile_Fut, 0xffc56944)
NHSTUB(DisableDispatch, 0xffc11084)
// Best match: 96%
NHSTUB(DisplayImagePhysicalScreen, 0xffd0bca0)
// Best match: 56%
//NHSTUB(DoAFLock, 0xffd26474) -- stubs_entry_2.S = 0xffd2647c
NHSTUB(EnableDispatch, 0xffc11110)
// ERROR: EnterToCompensationEVF is not found!
NHSTUB(ExecuteEventProcedure, 0xffc0680c)
// Best match: 76%
//NHSTUB(ExitFromCompensationEVF, 0xffd2832c) -- stubs_entry_2.S = 0xffd282c4
NHSTUB(ExitTask, 0xffc11620)
NHSTUB(Fclose_Fut, 0xffc56a84)
NHSTUB(Feof_Fut, 0xffc56c98)
NHSTUB(Fflush_Fut, 0xffc56cd0)
NHSTUB(Fgets_Fut, 0xffc56c08)
NHSTUB(Fopen_Fut, 0xffc56a48)
NHSTUB(Fread_Fut, 0xffc56b68)
NHSTUB(FreeMemory, 0xffc01ac0)
NHSTUB(FreeUncacheableMemory, 0xffc04928)
NHSTUB(Fseek_Fut, 0xffc56c50)
NHSTUB(Fwrite_Fut, 0xffc56bb8)
// Best match: 82%
NHSTUB(GetBatteryTemperature, 0xffc1ccd0)
// Best match: 82%
NHSTUB(GetCCDTemperature, 0xffc1ccbc)
NHSTUB(GetCurrentAvValue, 0xffe694a0)
NHSTUB(GetCurrentTargetDistance, 0xffe69448)
// Best match: 80%
//NHSTUB(GetDrive_ClusterSize, 0xffc5cff8) -- stubs_entry_2.S = 0xffc5cf80
// Best match: 80%
NHSTUB(GetDrive_FreeClusters, 0xffc5cff8)
// Best match: 80%
//NHSTUB(GetDrive_TotalClusters, 0xffc5cf80) -- stubs_entry_2.S = 0xffc5cfbc
// ALT: NHSTUB(GetDrive_TotalClusters, 0xffc5cfbc) // 20/5
// Best match: 96%
NHSTUB(GetFocusLensSubjectDistance, 0xffe5bc90)
// Best match: 52%
NHSTUB(GetFocusLensSubjectDistanceFromLens, 0xffe5c230)
// Best match: 82%
NHSTUB(GetOpticalTemperature, 0xffc1cca8)
// Best match: 86%
NHSTUB(GetParameterData, 0xffd40e2c)
NHSTUB(GetPropertyCase, 0xffc14518)
// Best match: 96%
NHSTUB(GetSystemTime, 0xffc04b2c)
// ALT: NHSTUB(GetSystemTime, 0xffc04b2c) // 26/1
// Best match: 93%
NHSTUB(GetZoomLensCurrentPoint, 0xffe4c738)
// ALT: NHSTUB(GetZoomLensCurrentPoint, 0xffe4c738) // 27/2
// Best match: 93%
NHSTUB(GetZoomLensCurrentPosition, 0xffe4c74c)
// ALT: NHSTUB(GetZoomLensCurrentPosition, 0xffe4c74c) // 27/2
NHSTUB(IsStrobeChargeCompleted, 0xffce7fac)
NHSTUB(LockMainPower, 0xffd3c1f4)
// ERROR: MakeAFScan is not found!
NHSTUB(MakeDirectory, 0xffc5da4c)
NHSTUB(MakeDirectory_Fut, 0xffc569d0)
// Best match: 90%
NHSTUB(Mount_FileSystem, 0xffc5ca48)
// ALT: NHSTUB(Mount_FileSystem, 0xffc5ca48) // 27/3
// Best match: 96%
NHSTUB(MoveFocusLensToDistance, 0xffe696e8)
NHSTUB(MoveZoomLensWithPoint, 0xffe4c618)
// ALT: NHSTUB(MoveZoomLensWithPoint, 0xffe4c618) // 25/0
NHSTUB(Open, 0xffc5d780)
NHSTUB(PT_PlaySound, 0xffd33988)
// Best match: 96%
NHSTUB(PhySw_testgpio, 0xffc17bc8)
NHSTUB(PostLogicalEventForNotPowerType, 0xffd382ec)
NHSTUB(PostLogicalEventToUI, 0xffd38368)
// ALT: NHSTUB(PostLogicalEventToUI, 0xffd383f0) // 21/0
NHSTUB(ProtectFile, 0xffc560b0)
// Best match: 92%
NHSTUB(PutInNdFilter, 0xffe674bc)
// ALT: NHSTUB(PutInNdFilter, 0xffe674bc) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffe6904c) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffe6904c) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffe69094) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffe69094) // 25/2
// Best match: 94%
NHSTUB(PutOutNdFilter, 0xffe67504)
// ALT: NHSTUB(PutOutNdFilter, 0xffe67504) // 16/1
NHSTUB(Read, 0xffc5d83c)
NHSTUB(RefreshPhysicalScreen, 0xffd52390)
NHSTUB(Remove, 0xffc5d7c8)
NHSTUB(RenameFile_Fut, 0xffc568c4)
NHSTUB(Restart, 0xffc1277c)
// Best match: 95%
NHSTUB(SetAE_ShutterSpeed, 0xffe6cb9c)
NHSTUB(SetAutoShutdownTime, 0xffd3c0ec)
NHSTUB(SetCurrentCaptureModeType, 0xffd6b100)
NHSTUB(SetFileAttributes, 0xffc5d960)
// Best match: 88%
NHSTUB(SetLogicalEventActive, 0xffd3a0c4)
// Best match: 86%
NHSTUB(SetParameterData, 0xffd40d4c)
NHSTUB(SetPropertyCase, 0xffc143ec)
NHSTUB(SleepTask, 0xffc11174)
NHSTUB(TakeSemaphore, 0xffc10c70)
NHSTUB(TurnOffBackLight, 0xffd81e3c)
NHSTUB(TurnOnBackLight, 0xffd81e0c)
// Best match: 78%
//NHSTUB(UnlockAF, 0xffcdc024) -- stubs_entry_2.S = 0xffd264c0
// ALT: NHSTUB(UnlockAF, 0xffd264c4) // 11/3
NHSTUB(UnlockMainPower, 0xffd3c2a8)
NHSTUB(Unmount_FileSystem, 0xffc5cb60)
// Best match: 89%
NHSTUB(UnsetZoomForMovie, 0xffd76190)
NHSTUB(UpdateMBROnFlash, 0xffc5ccb4)
// ERROR: VbattGet is not found!
NHSTUB(Write, 0xffc5d848)
// Best match: 64%
//NHSTUB(WriteSDCard, 0xffc6c234) -- stubs_entry_2.S = 0xffc6c3dc
NHSTUB(_log, 0xffea2c50)
// ALT: NHSTUB(_log, 0xffea2c50) // 27/0
NHSTUB(_log10, 0xffe9f128)
// ALT: NHSTUB(_log10, 0xffe9f128) // 27/0
NHSTUB(_pow, 0xffe9f2b0)
// ALT: NHSTUB(_pow, 0xffe9f2b0) // 25/0
NHSTUB(_sqrt, 0xffea104c)
// ALT: NHSTUB(_sqrt, 0xffea104c) // 24/0
// Best match: 96%
NHSTUB(add_ptp_handler, 0xffe1bc34)
NHSTUB(apex2us, 0xffc96f4c)
NHSTUB(chdir, 0xffeaf524)
// ALT: NHSTUB(chdir, 0xffeaf524) // 27/0
NHSTUB(close, 0xffeaee64)
NHSTUB(closedir, 0xffeac2ec)
NHSTUB(errnoOfTaskGet, 0xffeacab8)
// Best match: 93%
NHSTUB(exmem_alloc, 0xffc0281c)
// ERROR: free is not found!
NHSTUB(ints_disable, 0xffc0d6e0)
NHSTUB(ints_enable, 0xffc0d6ec)
NHSTUB(ioctl, 0xffeaefa4)
NHSTUB(iosDevAdd, 0xffeb0084)
NHSTUB(iosDevDelete, 0xffeb005c)
NHSTUB(iosDevFind, 0xffeb0010)
NHSTUB(iosDrvInstall, 0xffeb0348)
NHSTUB(isalpha, 0xffea6390)
NHSTUB(isdigit, 0xffea63c0)
NHSTUB(islower, 0xffea63f0)
NHSTUB(ispunct, 0xffea6420)
NHSTUB(isspace, 0xffea6438)
NHSTUB(isupper, 0xffea6450)
NHSTUB(isxdigit, 0xffea6468)
NHSTUB(kbd_p1_f, 0xffc16914)
NHSTUB(kbd_p1_f_cont, 0xffc16920)
NHSTUB(kbd_p2_f, 0xffc16cf0)
// Best match: 83%
//NHSTUB(kbd_pwr_off, 0xffc18b40) -- stubs_entry_2.S = 0x00000000
// ALT: NHSTUB(kbd_pwr_off, 0xffc18b5c) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffc18c48) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffc18c64) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffc18d34) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffc18d50) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffc18e98) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffc18eb4) // 5/1
// ERROR: kbd_pwr_on is not found!
NHSTUB(kbd_read_keys_r2, 0xffc17678)
// Best match: 93%
NHSTUB(localtime, 0xffeaaae0)
NHSTUB(lseek, 0xffeaefa8)
// Best match: 53%
NHSTUB(malloc, 0xffeb1ea4)
// ALT: NHSTUB(malloc, 0xffeb1ea4) // 15/13
NHSTUB(memPartInfoGet, 0xffeb22c4)
NHSTUB(memchr, 0xffea9e8c)
NHSTUB(memcmp, 0xffea9ec0)
// ALT: NHSTUB(memcmp, 0xffeb6064) // 9/0
NHSTUB(memcpy, 0xffea9efc)
NHSTUB(memset, 0xffea9f74)
NHSTUB(mkdir, 0xffc5d990)
NHSTUB(mktime, 0xffeaaca8)
NHSTUB(open, 0xffeaf4a8)
NHSTUB(opendir, 0xffeac320)
NHSTUB(qsort, 0xffea9720)
NHSTUB(rand, 0xffea9744)
// ALT: NHSTUB(rand, 0xffea9744) // 8/0
NHSTUB(read, 0xffeaeec4)
NHSTUB(readdir, 0xffeac2b8)
NHSTUB(rename, 0xffeaf4b0)
// ALT: NHSTUB(rename, 0xffeaf4b0) // 26/0
NHSTUB(rewinddir, 0xffeac2e0)
NHSTUB(srand, 0xffea9768)
// ALT: NHSTUB(srand, 0xffea9768) // 4/0
NHSTUB(stat, 0xffeac3b4)
NHSTUB(strcat, 0xffea9f94)
NHSTUB(strchr, 0xffea9fc0)
NHSTUB(strcmp, 0xffea9fe4)
NHSTUB(strcpy, 0xffeaa178)
NHSTUB(strftime, 0xffeab800)
NHSTUB(strlen, 0xffeaa2dc)
NHSTUB(strncmp, 0xffeaa340)
NHSTUB(strncpy, 0xffeaa384)
// ALT: NHSTUB(strncpy, 0xffeaa384) // 24/0
NHSTUB(strpbrk, 0xffeaa3cc)
NHSTUB(strrchr, 0xffeaa408)
// ALT: NHSTUB(strrchr, 0xffeaa408) // 8/0
NHSTUB(strtol, 0xffea9b5c)
NHSTUB(strtoul, 0xffea9d04)
NHSTUB(taskCreateHookAdd, 0xffeb4b04)
NHSTUB(taskDeleteHookAdd, 0xffeb4a40)
// Best match: 82%
NHSTUB(taskIdListGet, 0xffebeacc)
NHSTUB(taskLock, 0xffebf188)
NHSTUB(taskName, 0xffebe9c4)
NHSTUB(taskResume, 0xffebeda8)
NHSTUB(taskSuspend, 0xffebebd4)
NHSTUB(taskUnlock, 0xffebf230)
NHSTUB(time, 0xffeab82c)
// ALT: NHSTUB(time, 0xffeab82c) // 25/0
NHSTUB(tolower, 0xffea6480)
NHSTUB(toupper, 0xffea6490)
NHSTUB(utime, 0xffeac448)
// ALT: NHSTUB(utime, 0xffeac448) // 26/0
NHSTUB(vsprintf, 0xffeadc0c)
NHSTUB(write, 0xffeaef34)
