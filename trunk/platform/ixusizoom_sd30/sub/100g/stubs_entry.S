// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Best match: 79%
NHSTUB(AllocateMemory, 0xff811ba0)
NHSTUB(AllocateUncacheableMemory, 0xff814d0c)
NHSTUB(Close, 0xff870628)
NHSTUB(CreatePhysicalVram, 0xff922ba8)
NHSTUB(CreateTask, 0xff8228ac)
NHSTUB(CreateTaskStrict, 0xff823cb0)
NHSTUB(DeleteFile_Fut, 0xff86950c)
NHSTUB(DisableDispatch, 0xff82261c)
// Best match: 51%
//NHSTUB(DisplayImagePhysicalScreen, 0xff921f60) -- stubs_entry_2.S = 0xff921f58
NHSTUB(DoAFLock, 0xff948b74)
NHSTUB(EnableDispatch, 0xff8226a8)
// Best match: 64%
//NHSTUB(EnterToCompensationEVF, 0xff94a9c0) -- stubs_entry_2.S = 0xff948c84
NHSTUB(ExecuteEventProcedure, 0xff816fac)
// Best match: 73%
//NHSTUB(ExitFromCompensationEVF, 0xff94aac0) -- stubs_entry_2.S = 0xff948c94
NHSTUB(ExitTask, 0xff822c6c)
NHSTUB(Fclose_Fut, 0xff86964c)
NHSTUB(Feof_Fut, 0xff869860)
NHSTUB(Fflush_Fut, 0xff869898)
NHSTUB(Fgets_Fut, 0xff8697d0)
NHSTUB(Fopen_Fut, 0xff869610)
NHSTUB(Fread_Fut, 0xff869730)
// Best match: 66%
NHSTUB(FreeMemory, 0xff811bac)
NHSTUB(FreeUncacheableMemory, 0xff814d40)
NHSTUB(Fseek_Fut, 0xff869818)
NHSTUB(Fwrite_Fut, 0xff869780)
// Best match: 85%
NHSTUB(GetBatteryTemperature, 0xff82dec8)
// Best match: 86%
NHSTUB(GetCCDTemperature, 0xff82deb4)
NHSTUB(GetCurrentAvValue, 0xffa874ac)
NHSTUB(GetCurrentTargetDistance, 0xffa87454)
// Best match: 92%
NHSTUB(GetDrive_ClusterSize, 0xff86fe04)
// Best match: 92%
NHSTUB(GetDrive_FreeClusters, 0xff86fe7c)
// Best match: 92%
NHSTUB(GetDrive_TotalClusters, 0xff86fe40)
// Best match: 90%
NHSTUB(GetFocusLensSubjectDistance, 0xffa7a8b0)
// ALT: NHSTUB(GetFocusLensSubjectDistance, 0xffa7a8b0) // 28/3
// Best match: 52%
NHSTUB(GetFocusLensSubjectDistanceFromLens, 0xffa7ae50)
// Best match: 86%
NHSTUB(GetOpticalTemperature, 0xff82dea0)
NHSTUB(GetParameterData, 0xff962ba0)
NHSTUB(GetPropertyCase, 0xff825bb0)
// Best match: 96%
NHSTUB(GetSystemTime, 0xff815094)
// ALT: NHSTUB(GetSystemTime, 0xff815094) // 26/1
// Best match: 93%
NHSTUB(GetZoomLensCurrentPoint, 0xffa6b7cc)
// ALT: NHSTUB(GetZoomLensCurrentPoint, 0xffa6b7cc) // 27/2
// Best match: 93%
NHSTUB(GetZoomLensCurrentPosition, 0xffa6b7e0)
// ALT: NHSTUB(GetZoomLensCurrentPosition, 0xffa6b7e0) // 27/2
NHSTUB(IsStrobeChargeCompleted, 0xff8fc68c)
// Best match: 96%
NHSTUB(LockMainPower, 0xff95e0f4)
// Best match: 89%
NHSTUB(MakeAFScan, 0xff94cf90)
NHSTUB(MakeDirectory, 0xff870900)
NHSTUB(MakeDirectory_Fut, 0xff869598)
// Best match: 90%
NHSTUB(Mount_FileSystem, 0xff86f8dc)
// ALT: NHSTUB(Mount_FileSystem, 0xff86f8dc) // 27/3
// Best match: 96%
NHSTUB(MoveFocusLensToDistance, 0xffa876e4)
NHSTUB(MoveZoomLensWithPoint, 0xffa6b6ac)
// ALT: NHSTUB(MoveZoomLensWithPoint, 0xffa6b6ac) // 25/0
NHSTUB(Open, 0xff870600)
NHSTUB(PT_PlaySound, 0xff955ab4)
// Best match: 96%
NHSTUB(PhySw_testgpio, 0xff828f68)
NHSTUB(PostLogicalEventForNotPowerType, 0xff95a1e8)
NHSTUB(PostLogicalEventToUI, 0xff95a274)
// ALT: NHSTUB(PostLogicalEventToUI, 0xff95a30c) // 25/0
NHSTUB(ProtectFile, 0xff868c78)
// Best match: 92%
NHSTUB(PutInNdFilter, 0xffa854cc)
// ALT: NHSTUB(PutInNdFilter, 0xffa854cc) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa87058) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa87058) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa870a0) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa870a0) // 25/2
// Best match: 94%
NHSTUB(PutOutNdFilter, 0xffa85514)
// ALT: NHSTUB(PutOutNdFilter, 0xffa85514) // 16/1
NHSTUB(Read, 0xff8706bc)
NHSTUB(RefreshPhysicalScreen, 0xff97352c)
NHSTUB(Remove, 0xff870648)
NHSTUB(RenameFile_Fut, 0xff86948c)
NHSTUB(Restart, 0xff824140)
// Best match: 95%
NHSTUB(SetAE_ShutterSpeed, 0xffa8a798)
// Best match: 96%
NHSTUB(SetAutoShutdownTime, 0xff95dfec)
NHSTUB(SetCurrentCaptureModeType, 0xff98a540)
NHSTUB(SetFileAttributes, 0xff870814)
// Best match: 87%
NHSTUB(SetLogicalEventActive, 0xff95c1a4)
NHSTUB(SetParameterData, 0xff962ac0)
NHSTUB(SetPropertyCase, 0xff825a94)
NHSTUB(SleepTask, 0xff82270c)
// ALT: NHSTUB(SleepTask, 0xff8227c0) // 31/0
NHSTUB(TakeSemaphore, 0xff8220c8)
NHSTUB(TurnOffBackLight, 0xff9a013c)
NHSTUB(TurnOnBackLight, 0xff9a0110)
NHSTUB(UnlockAF, 0xff948bb4)
// Best match: 96%
NHSTUB(UnlockMainPower, 0xff95e1a8)
NHSTUB(Unmount_FileSystem, 0xff86f9e4)
// Best match: 89%
NHSTUB(UnsetZoomForMovie, 0xff995220)
// Best match: 96%
NHSTUB(UpdateMBROnFlash, 0xff86fb3c)
// ERROR: VbattGet is not found!
NHSTUB(Write, 0xff8706c8)
// Best match: 93%
NHSTUB(WriteSDCard, 0xff87f694)
// ALT: NHSTUB(WriteSDCard, 0xff87f86c) // 29/2
NHSTUB(_log, 0xffabcba0)
// ALT: NHSTUB(_log, 0xffabcba0) // 27/0
NHSTUB(_log10, 0xffabd248)
// ALT: NHSTUB(_log10, 0xffabd248) // 27/0
NHSTUB(_pow, 0xffabd738)
// ALT: NHSTUB(_pow, 0xffabd738) // 25/0
NHSTUB(_sqrt, 0xffac1a84)
// ALT: NHSTUB(_sqrt, 0xffac1a84) // 24/0
// Best match: 96%
NHSTUB(add_ptp_handler, 0xffa3990c)
NHSTUB(apex2us, 0xff8aba18)
NHSTUB(chdir, 0xffad0ce0)
// ALT: NHSTUB(chdir, 0xffad0ce0) // 27/0
NHSTUB(close, 0xffad0620)
NHSTUB(closedir, 0xffacc5c0)
NHSTUB(errnoOfTaskGet, 0xffaccd8c)
// Best match: 92%
NHSTUB(exmem_alloc, 0xff81293c)
// ERROR: free is not found!
NHSTUB(ints_disable, 0xff81e7ec)
NHSTUB(ints_enable, 0xff81e7f8)
NHSTUB(ioctl, 0xffad0760)
NHSTUB(iosDevAdd, 0xffad1840)
NHSTUB(iosDevDelete, 0xffad1818)
NHSTUB(iosDevFind, 0xffad17cc)
NHSTUB(iosDrvInstall, 0xffad1b04)
NHSTUB(isalpha, 0xffac6534)
NHSTUB(isdigit, 0xffac6564)
NHSTUB(islower, 0xffac6594)
NHSTUB(ispunct, 0xffac65c4)
NHSTUB(isspace, 0xffac65dc)
NHSTUB(isupper, 0xffac65f4)
NHSTUB(isxdigit, 0xffac660c)
NHSTUB(kbd_p1_f, 0xff827bec)
NHSTUB(kbd_p1_f_cont, 0xff827bf8)
NHSTUB(kbd_p2_f, 0xff827fd0)
// Best match: 83%
//NHSTUB(kbd_pwr_off, 0xff828f30) -- stubs_entry_2.S = 0xff828f4c
// ALT: NHSTUB(kbd_pwr_off, 0xff828f30) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff828f4c) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff828f4c) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829bcc) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829be8) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829cd4) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829cf0) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829dc0) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829ddc) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829f24) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829f40) // 5/1
// Best match: 55%
//NHSTUB(kbd_pwr_on, 0xff921148) -- stubs_entry_2.S = 0xff828f30
// ALT: NHSTUB(kbd_pwr_on, 0xff921174) // 5/4
// ERROR: kbd_read_keys_r2 is not found!
// Best match: 93%
NHSTUB(localtime, 0xffacadb4)
NHSTUB(lseek, 0xffad0764)
// Best match: 53%
NHSTUB(malloc, 0xffad3660)
// ALT: NHSTUB(malloc, 0xffad3660) // 15/13
NHSTUB(memPartInfoGet, 0xffad3a80)
NHSTUB(memchr, 0xffaca160)
NHSTUB(memcmp, 0xffaca194)
// ALT: NHSTUB(memcmp, 0xffad857c) // 9/0
NHSTUB(memcpy, 0xffaca1d0)
NHSTUB(memset, 0xffaca248)
NHSTUB(mkdir, 0xff870844)
NHSTUB(mktime, 0xffacaf7c)
NHSTUB(open, 0xffad0c64)
NHSTUB(opendir, 0xffacc5f4)
NHSTUB(qsort, 0xffac99f4)
NHSTUB(rand, 0xffac9a18)
// ALT: NHSTUB(rand, 0xffac9a18) // 8/0
NHSTUB(read, 0xffad0680)
NHSTUB(readdir, 0xffacc58c)
NHSTUB(rename, 0xffad0c6c)
// ALT: NHSTUB(rename, 0xffad0c6c) // 26/0
NHSTUB(rewinddir, 0xffacc5b4)
NHSTUB(srand, 0xffac9a3c)
// ALT: NHSTUB(srand, 0xffac9a3c) // 4/0
NHSTUB(stat, 0xffacc688)
NHSTUB(strcat, 0xffaca268)
NHSTUB(strchr, 0xffaca294)
NHSTUB(strcmp, 0xffaca2b8)
NHSTUB(strcpy, 0xffaca44c)
NHSTUB(strftime, 0xffacbad4)
NHSTUB(strlen, 0xffaca5b0)
NHSTUB(strncmp, 0xffaca614)
NHSTUB(strncpy, 0xffaca658)
// ALT: NHSTUB(strncpy, 0xffaca658) // 24/0
NHSTUB(strpbrk, 0xffaca6a0)
NHSTUB(strrchr, 0xffaca6dc)
// ALT: NHSTUB(strrchr, 0xffaca6dc) // 8/0
NHSTUB(strtol, 0xffac9e30)
NHSTUB(strtoul, 0xffac9fd8)
NHSTUB(taskCreateHookAdd, 0xffad6ce0)
NHSTUB(taskDeleteHookAdd, 0xffad6c1c)
// Best match: 82%
NHSTUB(taskIdListGet, 0xffae12a4)
NHSTUB(taskLock, 0xffae1960)
NHSTUB(taskName, 0xffae119c)
NHSTUB(taskResume, 0xffae1580)
NHSTUB(taskSuspend, 0xffae13ac)
NHSTUB(taskUnlock, 0xffae1a08)
NHSTUB(time, 0xffacbb00)
// ALT: NHSTUB(time, 0xffacbb00) // 25/0
NHSTUB(tolower, 0xffac6624)
NHSTUB(toupper, 0xffac6634)
NHSTUB(utime, 0xffacc71c)
// ALT: NHSTUB(utime, 0xffacc71c) // 26/0
NHSTUB(vsprintf, 0xffacdee0)
NHSTUB(write, 0xffad06f0)
