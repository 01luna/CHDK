//-------------------------- BOOT.C ---------------------------------------------------------------
FILE boot.c

>>> file=../boot_hdr.c

//////////////////////////////////////////////////////////////
// boot
//////////////////////////////////////////////////////////////
FUNC start=0xFF00000C name=boot length=95
ASM
FW $-1
PATCHSUB ref=0
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// boot -> ref=0
//////////////////////////////////////////////////////////////
FUNC ref=0 length=27
>>>

    //http://chdk.setepontos.com/index.php/topic,4194.0.html
    *(int*)0x1938=(int)taskHook;
    *(int*)0x193C=(int)taskHook;

    // Replacement of sub_FF01E594 (sub_) for correct power-on.
    // (short press = playback mode, long press = record mode)
    // look at power-on switch 100d @ 0xff049bf0
    *(int*)(0x2580) = (*(int*)0xC022C30C)&1 ? 0x200000 : 0x100000;

<<<
ASM
FW $-1
PATCHSUB ref=0
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////
FUNC ref=0
ASM
FW 7
>>>

#if defined(OPT_CHDK_IN_EXMEM) // use original heap offset if CHDK is loaded in high memory
<<<
FW
>>>
#else
"    LDR     R0, =new_sa\n"   // otherwise use patched value
"    LDR     R0, [R0]\n"      //
#endif

<<<
FW $-6
PATCHSUB ref=0
->FW
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////
FUNC ref=0
ASM
FW $-1
PATCHSUB ref=0
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////
FUNC ref=0 length=5
ASM
FW 2
PATCHSUB name=taskcreate_Startup_my ref=0
FW $
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// taskcreate_Startup_my
//////////////////////////////////////////////////////////////
FUNC ref=0
ASM
FW 34
REM "See begin of sub_FF00038C_my. StartUp mode detection."
FW $-7
PATCHSUB name=task_Startup_my ref=0
->FW
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// task_Startup_my
//////////////////////////////////////////////////////////////
FUNC ref=0 length=23
ASM
FW 6
REM "start diskboot.bin"
FW 6
>>>
"    BL      CreateTask_spytask\n"  // added
<<<
PATCHSUB name=taskcreatePhySw_my ref=0
->FW
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// taskcreatePhySw_my
//////////////////////////////////////////////////////////////
FUNC ref=0 length=9
ASM
FW 7
PATCHSUB name=mykbd_task
PATCHVAL value=0x2000 comment="stack size for new task_PhySw"
->FW
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// init_file_modules_task
//////////////////////////////////////////////////////////////
FUNC sig=task_InitFileModules length=8 name=init_file_modules_task
ASM
FW $
>>>
"    BL      core_spytask_can_start\n"  // CHDK: Set "it's-safe-to-start" flag for spytask
<<<
->FW
ENDASM
ENDFUNC


ENDFILE

//-------------------------- CAPT_SEQ.C -----------------------------------------------------------

FILE capt_seq.c

>>> file=../capt_seq_hdr.c

//////////////////////////////////////////////////////////////
// capt_seq_task
//////////////////////////////////////////////////////////////
FUNC sig=task_CaptSeq name=capt_seq_task
ASM
FW 55
>>>
"    BL      shooting_expo_iso_override\n"      // added
<<<
FW
>>>
"    BL      shooting_expo_param_override\n"    // added
<<<
FW
>>>
"    MOV     R0, #0\n"                          // added
"    STR     R0, [R4,#0x28]\n"                  // added, fixes overrides behavior at short shutter press (from S95)
<<<
REM "above patch makes these three lines redundant"
REM
REM
FW 20
PATCHSUB ref=0
>>>
"    BL      capt_seq_hook_raw_here\n"      // added
<<<
FW $
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// capt_seq_task -> ref=0
//////////////////////////////////////////////////////////////
FUNC ref=0
ASM
FW 79
>>> prelabel
"    BL      wait_until_remote_button_is_released\n"    // added
"    BL      capt_seq_hook_set_nr\n"                    // added
<<<
FW $
ENDASM
ENDFUNC


//////////////////////////////////////////////////////////////
// exp_drv_task
//////////////////////////////////////////////////////////////
FUNC sig=task_ExpDrv name=exp_drv_task
ASM
FW 263
PATCHSUB ref=0
FW $
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// exp_drv_task -> ref=0
//////////////////////////////////////////////////////////////
FUNC ref=0 length=49
ASM
FW $-1
PATCHSUB ref=0
->FW
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// exp_drv_task -> ref=0 -> ref=0
//////////////////////////////////////////////////////////////
FUNC ref=0 length=17
ASM
FW $-1
PATCHSUB name=apex2us
->FW
ENDASM
ENDFUNC

ENDFILE

