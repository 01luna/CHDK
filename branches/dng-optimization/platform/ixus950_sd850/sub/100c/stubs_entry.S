// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Best match: 95%
//NHSTUB(AllocateMemory, 0xff811e34) -- stubs_entry_2.S = 0xff818664
// ALT: NHSTUB(AllocateMemory, 0xff811e34) // 23/1
NHSTUB(AllocateUncacheableMemory, 0xff81e5f4)
NHSTUB(Close, 0xffaa2fbc)
// Best match: 93%
NHSTUB(CreatePhysicalVram, 0xffa2dd78)
NHSTUB(CreateTask, 0xffb235ac)
NHSTUB(CreateTaskStrict, 0xffb2464c)
NHSTUB(DeleteFile_Fut, 0xffa9e578)
NHSTUB(DisableDispatch, 0xffb233d0)
// ERROR: DisplayImagePhysicalScreen is not found!
NHSTUB(DoAFLock, 0xffb09200)
NHSTUB(EnableDispatch, 0xffb2345c)
// Best match: 88%
//NHSTUB(EnterToCompensationEVF, 0xffb095a8) -- stubs_entry_2.S = 0x00000000
NHSTUB(ExecuteEventProcedure, 0xff814a58)
//NHSTUB(ExitFromCompensationEVF, 0xffb0962c) -- stubs_entry_2.S = 0x00000000
NHSTUB(ExitTask, 0xffb2396c)
NHSTUB(Fclose_Fut, 0xffa9e6ec)
NHSTUB(Feof_Fut, 0xffa9e8e8)
NHSTUB(Fflush_Fut, 0xffa9e924)
NHSTUB(Fgets_Fut, 0xffa9e850)
NHSTUB(Fopen_Fut, 0xffa9e6ac)
NHSTUB(Fread_Fut, 0xffa9e7a8)
// Best match: 95%
//NHSTUB(FreeMemory, 0xff811e40) -- stubs_entry_2.S = 0xff818650
// ALT: NHSTUB(FreeMemory, 0xff811e40) // 23/1
// Best match: 90%
NHSTUB(FreeUncacheableMemory, 0xff81e628)
NHSTUB(Fseek_Fut, 0xffa9e89c)
NHSTUB(Fwrite_Fut, 0xffa9e7fc)
// Best match: 53%
NHSTUB(GetBatteryTemperature, 0xffa3d408)
// Best match: 68%
NHSTUB(GetCCDTemperature, 0xffa3d3f4)
NHSTUB(GetCurrentAvValue, 0xffa58520)
// ALT: NHSTUB(GetCurrentAvValue, 0xffa5a900) // 13/0
NHSTUB(GetCurrentTargetDistance, 0xffa5a8a8)
// Best match: 72%
//NHSTUB(GetDrive_ClusterSize, 0xffaa27e4) -- stubs_entry_2.S = 0xffaa27ac
// ALT: NHSTUB(GetDrive_ClusterSize, 0xffaa27e4) // 18/7
// ALT: NHSTUB(GetDrive_ClusterSize, 0xffaa2820) // 18/7
// ALT: NHSTUB(GetDrive_ClusterSize, 0xffaa2820) // 18/7
// ALT: NHSTUB(GetDrive_ClusterSize, 0xffaa285c) // 18/7
// ALT: NHSTUB(GetDrive_ClusterSize, 0xffaa285c) // 18/7
// Best match: 80%
//NHSTUB(GetDrive_FreeClusters, 0xffaa27e4) -- stubs_entry_2.S = 0xffaa2820
// Best match: 76%
//NHSTUB(GetDrive_TotalClusters, 0xffaa285c) -- stubs_entry_2.S = 0xffaa27e8
// Best match: 83%
NHSTUB(GetFocusLensSubjectDistance, 0xffadc4e4)
// ALT: NHSTUB(GetFocusLensSubjectDistance, 0xffadc4e4) // 26/5
// Best match: 92%
NHSTUB(GetFocusLensSubjectDistanceFromLens, 0xffadc9e8)
// Best match: 86%
NHSTUB(GetOpticalTemperature, 0xffa3d3e0)
// Best match: 76%
NHSTUB(GetParameterData, 0xffb490f0)
// ALT: NHSTUB(GetParameterData, 0xffb490f0) // 23/7
// Best match: 89%
NHSTUB(GetPropertyCase, 0xff81bc98)
// Best match: 96%
NHSTUB(GetSystemTime, 0xff8136ec)
// ALT: NHSTUB(GetSystemTime, 0xff8136ec) // 26/1
// Best match: 68%
NHSTUB(GetZoomLensCurrentPoint, 0xffaee5c0)
// ALT: NHSTUB(GetZoomLensCurrentPoint, 0xffaee5c0) // 20/9
// Best match: 51%
NHSTUB(GetZoomLensCurrentPosition, 0xffaee5d4)
// ALT: NHSTUB(GetZoomLensCurrentPosition, 0xffaee5d4) // 15/14
NHSTUB(IsStrobeChargeCompleted, 0xff9b0cb8)
NHSTUB(LockMainPower, 0xffb45ff4)
// Best match: 79%
NHSTUB(MakeAFScan, 0xffb0ecb0)
// Best match: 61%
NHSTUB(MakeDirectory, 0xffaa32ec)
NHSTUB(MakeDirectory_Fut, 0xffa9e62c)
// Best match: 93%
NHSTUB(Mount_FileSystem, 0xffaa22e4)
// Best match: 73%
NHSTUB(MoveFocusLensToDistance, 0xffa5ab40)
NHSTUB(MoveZoomLensWithPoint, 0xffaee498)
// ALT: NHSTUB(MoveZoomLensWithPoint, 0xffaee498) // 25/0
// Best match: 66%
NHSTUB(Open, 0xffaa2f94)
NHSTUB(PT_PlaySound, 0xffb1a0a4)
// Best match: 93%
NHSTUB(PhySw_testgpio, 0xffa38ca0)
NHSTUB(PostLogicalEventForNotPowerType, 0xffb41780)
NHSTUB(PostLogicalEventToUI, 0xffb417fc)
// ALT: NHSTUB(PostLogicalEventToUI, 0xffb41884) // 21/0
NHSTUB(ProtectFile, 0xffa9dbd0)
// Best match: 92%
NHSTUB(PutInNdFilter, 0xffa58704)
// ALT: NHSTUB(PutInNdFilter, 0xffa58704) // 25/2
// Best match: 94%
NHSTUB(PutOutNdFilter, 0xffa5874c)
// ALT: NHSTUB(PutOutNdFilter, 0xffa5874c) // 16/1
NHSTUB(Read, 0xffaa3050)
// Best match: 58%
NHSTUB(RefreshPhysicalScreen, 0xff917458)
NHSTUB(Remove, 0xffaa2fdc)
NHSTUB(RenameFile_Fut, 0xffa9e4d0)
// Best match: 96%
NHSTUB(Restart, 0xff81b74c)
// Best match: 95%
NHSTUB(SetAE_ShutterSpeed, 0xffa5dc40)
NHSTUB(SetAutoShutdownTime, 0xffb45ef8)
NHSTUB(SetCurrentCaptureModeType, 0xff82ab20)
NHSTUB(SetFileAttributes, 0xffaa31a4)
NHSTUB(SetLogicalEventActive, 0xffb4399c)
// Best match: 66%
NHSTUB(SetParameterData, 0xffb490ec)
NHSTUB(SetPropertyCase, 0xff81bb60)
NHSTUB(SleepTask, 0xffb234c0)
// Best match: 61%
//NHSTUB(TakeSemaphore, 0xffb22f78) -- stubs_entry_2.S = 0xffb22f70
NHSTUB(TurnOffBackLight, 0xff84af38)
NHSTUB(TurnOnBackLight, 0xff84af08)
NHSTUB(UnlockAF, 0xffb09280)
NHSTUB(UnlockMainPower, 0xffb4608c)
NHSTUB(Unmount_FileSystem, 0xffaa238c)
// Best match: 89%
NHSTUB(UnsetZoomForMovie, 0xff83656c)
NHSTUB(UpdateMBROnFlash, 0xffaa24e0)
// Best match: 96%
NHSTUB(VbattGet, 0xffa34c08)
NHSTUB(Write, 0xffaa305c)
// Best match: 74%
NHSTUB(WriteSDCard, 0xffab536c)
NHSTUB(_log, 0xff91e5f4)
// ALT: NHSTUB(_log, 0xff91e5f4) // 27/0
NHSTUB(_log10, 0xff91b39c)
// ALT: NHSTUB(_log10, 0xff91b39c) // 27/0
NHSTUB(_pow, 0xff91b51c)
// ALT: NHSTUB(_pow, 0xff91b51c) // 25/0
NHSTUB(_sqrt, 0xff91d3dc)
// ALT: NHSTUB(_sqrt, 0xff91d3dc) // 24/0
// Best match: 96%
NHSTUB(add_ptp_handler, 0xff9ec59c)
NHSTUB(apex2us, 0xff93ce88)
NHSTUB(chdir, 0xff929080)
// ALT: NHSTUB(chdir, 0xff929080) // 27/0
NHSTUB(close, 0xff9289c0)
NHSTUB(closedir, 0xffb63614)
NHSTUB(errnoOfTaskGet, 0xff926614)
// Best match: 93%
NHSTUB(exmem_alloc, 0xff81e300)
// ERROR: free is not found!
NHSTUB(ints_disable, 0xffb21678)
NHSTUB(ints_enable, 0xffb21684)
NHSTUB(ioctl, 0xff928b00)
NHSTUB(iosDevAdd, 0xff929be0)
NHSTUB(iosDevDelete, 0xff929bb8)
NHSTUB(iosDevFind, 0xff929b6c)
NHSTUB(iosDrvInstall, 0xff929ea4)
NHSTUB(isalpha, 0xff91ff98)
NHSTUB(isdigit, 0xff91ffc8)
NHSTUB(islower, 0xff91fff8)
NHSTUB(ispunct, 0xff920028)
NHSTUB(isspace, 0xff920040)
NHSTUB(isupper, 0xff920058)
NHSTUB(isxdigit, 0xff920070)
NHSTUB(kbd_p1_f, 0xffa3711c)
NHSTUB(kbd_p1_f_cont, 0xffa37128)
// Best match: 56%
NHSTUB(kbd_p2_f, 0xffa3754c)
// Best match: 83%
//NHSTUB(kbd_pwr_off, 0xffa36434) -- stubs_entry_2.S = 0xffa38c14
// ALT: NHSTUB(kbd_pwr_off, 0xffa36450) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffa38c5c) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffa38c5c) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffa38c78) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffa38c78) // 5/1
// Best match: 55%
//NHSTUB(kbd_pwr_on, 0xffa2f5b4) -- stubs_entry_2.S = 0xffa38bd4
// ALT: NHSTUB(kbd_pwr_on, 0xffa2f5e0) // 5/4
NHSTUB(kbd_read_keys_r2, 0xffa386c8)
// Best match: 93%
NHSTUB(localtime, 0xff924818)
NHSTUB(lseek, 0xff928b04)
// Best match: 53%
NHSTUB(malloc, 0xff92ba00)
// ALT: NHSTUB(malloc, 0xff92ba00) // 15/13
NHSTUB(memPartInfoGet, 0xff92be20)
NHSTUB(memchr, 0xff923bc4)
NHSTUB(memcmp, 0xff923bf8)
// ALT: NHSTUB(memcmp, 0xff92fbc0) // 9/0
NHSTUB(memcpy, 0xff923c34)
NHSTUB(memset, 0xff923cac)
// Best match: 51%
NHSTUB(mkdir, 0xffaa3224)
// ALT: NHSTUB(mkdir, 0xffaa32f8) // 16/15
NHSTUB(mktime, 0xff9249e0)
NHSTUB(open, 0xff929004)
NHSTUB(opendir, 0xffb63648)
NHSTUB(qsort, 0xff923458)
NHSTUB(rand, 0xff92347c)
// ALT: NHSTUB(rand, 0xff92347c) // 8/0
NHSTUB(read, 0xff928a20)
NHSTUB(readdir, 0xffb635e0)
NHSTUB(rename, 0xff92900c)
// ALT: NHSTUB(rename, 0xff92900c) // 26/0
NHSTUB(rewinddir, 0xffb63608)
NHSTUB(srand, 0xff9234a0)
// ALT: NHSTUB(srand, 0xff9234a0) // 4/0
NHSTUB(stat, 0xffb636dc)
NHSTUB(strcat, 0xff923ccc)
NHSTUB(strchr, 0xff923cf8)
NHSTUB(strcmp, 0xff923d1c)
NHSTUB(strcpy, 0xff923eb0)
NHSTUB(strftime, 0xff925538)
NHSTUB(strlen, 0xff924014)
NHSTUB(strncmp, 0xff924078)
NHSTUB(strncpy, 0xff9240bc)
// ALT: NHSTUB(strncpy, 0xff9240bc) // 24/0
NHSTUB(strpbrk, 0xff924104)
NHSTUB(strrchr, 0xff924140)
// ALT: NHSTUB(strrchr, 0xff924140) // 8/0
NHSTUB(strtol, 0xff923894)
NHSTUB(strtoul, 0xff923a3c)
NHSTUB(taskCreateHookAdd, 0xff92e660)
NHSTUB(taskDeleteHookAdd, 0xff92e59c)
// Best match: 82%
NHSTUB(taskIdListGet, 0xff935b48)
NHSTUB(taskLock, 0xff936204)
NHSTUB(taskName, 0xff935a40)
NHSTUB(taskResume, 0xff935e24)
NHSTUB(taskSuspend, 0xff935c50)
NHSTUB(taskUnlock, 0xff9362ac)
NHSTUB(time, 0xff925564)
// ALT: NHSTUB(time, 0xff925564) // 25/0
NHSTUB(tolower, 0xff920088)
NHSTUB(toupper, 0xff920098)
// Best match: 57%
NHSTUB(utime, 0xffb63770)
// ALT: NHSTUB(utime, 0xffb63770) // 15/11
NHSTUB(vsprintf, 0xff927768)
NHSTUB(write, 0xff928a90)
