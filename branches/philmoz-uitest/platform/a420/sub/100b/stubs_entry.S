// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

NSTUB(AllocateMemory, 0xffc01ab4)
NSTUB(AllocateUncacheableMemory, 0xffc048f4)
NSTUB(Close, 0xffc5a42c)
NSTUB(CreatePhysicalVram, 0xffd092f0)
NSTUB(CreateTask, 0xffc11260)
NSTUB(CreateTaskStrict, 0xffc12300)
NSTUB(DeleteFile_Fut, 0xffc535c8)
NSTUB(DisableDispatch, 0xffc11084)
// Best match: 96%
NSTUB(DisplayImagePhysicalScreen, 0xffd0859c)
// Best match: 56%
NSTUB(DoAFLock, 0xffd22b98)
NSTUB(EnableDispatch, 0xffc11110)
// ERROR: EnterToCompensationEVF is not found!
NSTUB(ExecuteEventProcedure, 0xffc0680c)
// Best match: 76%
NSTUB(ExitFromCompensationEVF, 0xffd24a54)
NSTUB(ExitTask, 0xffc11620)
NSTUB(Fclose_Fut, 0xffc53708)
NSTUB(Feof_Fut, 0xffc5391c)
NSTUB(Fflush_Fut, 0xffc53954)
NSTUB(Fgets_Fut, 0xffc5388c)
NSTUB(Fopen_Fut, 0xffc536cc)
NSTUB(Fread_Fut, 0xffc537ec)
NSTUB(FreeMemory, 0xffc01ac0)
NSTUB(FreeUncacheableMemory, 0xffc04928)
NSTUB(Fseek_Fut, 0xffc538d4)
NSTUB(Fwrite_Fut, 0xffc5383c)
// Best match: 82%
NSTUB(GetBatteryTemperature, 0xffc1c044)
// Best match: 82%
NSTUB(GetCCDTemperature, 0xffc1c030)
NSTUB(GetCurrentAvValue, 0xffe5e0ac)
NSTUB(GetCurrentTargetDistance, 0xffe5e054)
// Best match: 80%
NSTUB(GetDrive_ClusterSize, 0xffc59c7c)
// Best match: 80%
NSTUB(GetDrive_FreeClusters, 0xffc59c7c)
// Best match: 80%
NSTUB(GetDrive_TotalClusters, 0xffc59c04)
// ALT: NSTUB(GetDrive_TotalClusters, 0xffc59c40) // 20/5
// Best match: 96%
NSTUB(GetFocusLensSubjectDistance, 0xffe5089c)
// Best match: 52%
NSTUB(GetFocusLensSubjectDistanceFromLens, 0xffe50e3c)
// Best match: 82%
NSTUB(GetOpticalTemperature, 0xffc1c01c)
// Best match: 86%
NSTUB(GetParameterData, 0xffd3d590)
NSTUB(GetPropertyCase, 0xffc14518)
// Best match: 96%
NSTUB(GetSystemTime, 0xffc04b2c)
// ALT: NSTUB(GetSystemTime, 0xffc04b2c) // 26/1
// Best match: 93%
NSTUB(GetZoomLensCurrentPoint, 0xffe41344)
// ALT: NSTUB(GetZoomLensCurrentPoint, 0xffe41344) // 27/2
// Best match: 93%
NSTUB(GetZoomLensCurrentPosition, 0xffe41358)
// ALT: NSTUB(GetZoomLensCurrentPosition, 0xffe41358) // 27/2
NSTUB(IsStrobeChargeCompleted, 0xffce4958)
NSTUB(LockMainPower, 0xffd38918)
// ERROR: MakeAFScan is not found!
NSTUB(MakeDirectory, 0xffc5a6d0)
NSTUB(MakeDirectory_Fut, 0xffc53654)
// Best match: 90%
NSTUB(Mount_FileSystem, 0xffc596cc)
// ALT: NSTUB(Mount_FileSystem, 0xffc596cc) // 27/3
// Best match: 96%
NSTUB(MoveFocusLensToDistance, 0xffe5e2f4)
NSTUB(MoveZoomLensWithPoint, 0xffe41224)
// ALT: NSTUB(MoveZoomLensWithPoint, 0xffe41224) // 25/0
NSTUB(Open, 0xffc5a404)
NSTUB(PT_PlaySound, 0xffd300ac)
// Best match: 96%
NSTUB(PhySw_testgpio, 0xffc17b68)
NSTUB(PostLogicalEventForNotPowerType, 0xffd34a10)
NSTUB(PostLogicalEventToUI, 0xffd34a8c)
// ALT: NSTUB(PostLogicalEventToUI, 0xffd34b14) // 21/0
NSTUB(ProtectFile, 0xffc52d34)
// Best match: 92%
NSTUB(PutInNdFilter, 0xffe5c0c8)
// ALT: NSTUB(PutInNdFilter, 0xffe5c0c8) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffe5dc58) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffe5dc58) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffe5dca0) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffe5dca0) // 25/2
// Best match: 94%
NSTUB(PutOutNdFilter, 0xffe5c110)
// ALT: NSTUB(PutOutNdFilter, 0xffe5c110) // 16/1
NSTUB(Read, 0xffc5a4c0)
NSTUB(RefreshPhysicalScreen, 0xffd4eae0)
NSTUB(Remove, 0xffc5a44c)
NSTUB(RenameFile_Fut, 0xffc53548)
NSTUB(Restart, 0xffc1277c)
// Best match: 95%
NSTUB(SetAE_ShutterSpeed, 0xffe617a8)
NSTUB(SetAutoShutdownTime, 0xffd38810)
NSTUB(SetCurrentCaptureModeType, 0xffd6750c)
NSTUB(SetFileAttributes, 0xffc5a5e4)
// Best match: 88%
NSTUB(SetLogicalEventActive, 0xffd367e8)
// Best match: 86%
NSTUB(SetParameterData, 0xffd3d4b0)
NSTUB(SetPropertyCase, 0xffc143ec)
NSTUB(SleepTask, 0xffc11174)
NSTUB(TakeSemaphore, 0xffc10c70)
NSTUB(TurnOffBackLight, 0xffd7e1f0)
NSTUB(TurnOnBackLight, 0xffd7e1c0)
// Best match: 78%
NSTUB(UnlockAF, 0xffcd89d0)
// ALT: NSTUB(UnlockAF, 0xffd22be8) // 11/3
NSTUB(UnlockMainPower, 0xffd389cc)
NSTUB(Unmount_FileSystem, 0xffc597e4)
// Best match: 89%
NSTUB(UnsetZoomForMovie, 0xffd72590)
NSTUB(UpdateMBROnFlash, 0xffc59938)
// ERROR: VbattGet is not found!
NSTUB(Write, 0xffc5a4cc)
// Best match: 64%
NSTUB(WriteSDCard, 0xffc68eb8)
NSTUB(_log, 0xffe9381c)
// ALT: NSTUB(_log, 0xffe9381c) // 27/0
NSTUB(_log10, 0xffe8fcf4)
// ALT: NSTUB(_log10, 0xffe8fcf4) // 27/0
NSTUB(_pow, 0xffe8fe7c)
// ALT: NSTUB(_pow, 0xffe8fe7c) // 25/0
NSTUB(_sqrt, 0xffe91c18)
// ALT: NSTUB(_sqrt, 0xffe91c18) // 24/0
// Best match: 96%
NSTUB(add_ptp_handler, 0xffe10fb4)
NSTUB(apex2us, 0xffc93b4c)
NSTUB(chdir, 0xffea00f0)
// ALT: NSTUB(chdir, 0xffea00f0) // 27/0
NSTUB(close, 0xffe9fa30)
NSTUB(closedir, 0xffe9ceb8)
NSTUB(errnoOfTaskGet, 0xffe9d684)
// Best match: 93%
NSTUB(exmem_alloc, 0xffc0281c)
// ERROR: free is not found!
NSTUB(ints_disable, 0xffc0d6e0)
NSTUB(ints_enable, 0xffc0d6ec)
NSTUB(ioctl, 0xffe9fb70)
NSTUB(iosDevAdd, 0xffea0c50)
NSTUB(iosDevDelete, 0xffea0c28)
NSTUB(iosDevFind, 0xffea0bdc)
NSTUB(iosDrvInstall, 0xffea0f14)
NSTUB(isalpha, 0xffe96f5c)
NSTUB(isdigit, 0xffe96f8c)
NSTUB(islower, 0xffe96fbc)
NSTUB(ispunct, 0xffe96fec)
NSTUB(isspace, 0xffe97004)
NSTUB(isupper, 0xffe9701c)
NSTUB(isxdigit, 0xffe97034)
NSTUB(kbd_p1_f, 0xffc16910)
NSTUB(kbd_p1_f_cont, 0xffc1691c)
NSTUB(kbd_p2_f, 0xffc16cec)
// Best match: 83%
NSTUB(kbd_pwr_off, 0xffc17ebc)
// ALT: NSTUB(kbd_pwr_off, 0xffc17ed8) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffc17fc4) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffc17fe0) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffc180b0) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffc180cc) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffc18214) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffc18230) // 5/1
// ERROR: kbd_pwr_on is not found!
NSTUB(kbd_read_keys_r2, 0xffc17618)
// Best match: 93%
NSTUB(localtime, 0xffe9b6ac)
NSTUB(lseek, 0xffe9fb74)
// Best match: 53%
NSTUB(malloc, 0xffea2a70)
// ALT: NSTUB(malloc, 0xffea2a70) // 15/13
NSTUB(memPartInfoGet, 0xffea2e90)
NSTUB(memchr, 0xffe9aa58)
NSTUB(memcmp, 0xffe9aa8c)
// ALT: NSTUB(memcmp, 0xffea6c30) // 9/0
NSTUB(memcpy, 0xffe9aac8)
NSTUB(memset, 0xffe9ab40)
NSTUB(mkdir, 0xffc5a614)
NSTUB(mktime, 0xffe9b874)
NSTUB(open, 0xffea0074)
NSTUB(opendir, 0xffe9ceec)
NSTUB(qsort, 0xffe9a2ec)
NSTUB(rand, 0xffe9a310)
// ALT: NSTUB(rand, 0xffe9a310) // 8/0
NSTUB(read, 0xffe9fa90)
NSTUB(readdir, 0xffe9ce84)
NSTUB(rename, 0xffea007c)
// ALT: NSTUB(rename, 0xffea007c) // 26/0
NSTUB(rewinddir, 0xffe9ceac)
NSTUB(srand, 0xffe9a334)
// ALT: NSTUB(srand, 0xffe9a334) // 4/0
NSTUB(stat, 0xffe9cf80)
NSTUB(strcat, 0xffe9ab60)
NSTUB(strchr, 0xffe9ab8c)
NSTUB(strcmp, 0xffe9abb0)
NSTUB(strcpy, 0xffe9ad44)
NSTUB(strftime, 0xffe9c3cc)
NSTUB(strlen, 0xffe9aea8)
NSTUB(strncmp, 0xffe9af0c)
NSTUB(strncpy, 0xffe9af50)
// ALT: NSTUB(strncpy, 0xffe9af50) // 24/0
NSTUB(strpbrk, 0xffe9af98)
NSTUB(strrchr, 0xffe9afd4)
// ALT: NSTUB(strrchr, 0xffe9afd4) // 8/0
NSTUB(strtol, 0xffe9a728)
NSTUB(strtoul, 0xffe9a8d0)
NSTUB(taskCreateHookAdd, 0xffea56d0)
NSTUB(taskDeleteHookAdd, 0xffea560c)
// Best match: 82%
NSTUB(taskIdListGet, 0xffeaf698)
// ALT: NSTUB(taskIdListGet, 0xffed347c) // 24/5
NSTUB(taskLock, 0xffeafd54)
// ALT: NSTUB(taskLock, 0xffed3b38) // 31/0
NSTUB(taskName, 0xffeaf590)
// ALT: NSTUB(taskName, 0xffed3374) // 25/0
NSTUB(taskResume, 0xffeaf974)
// ALT: NSTUB(taskResume, 0xffed3758) // 31/0
NSTUB(taskSuspend, 0xffeaf7a0)
// ALT: NSTUB(taskSuspend, 0xffed3584) // 31/0
NSTUB(taskUnlock, 0xffeafdfc)
// ALT: NSTUB(taskUnlock, 0xffed3be0) // 31/0
NSTUB(time, 0xffe9c3f8)
// ALT: NSTUB(time, 0xffe9c3f8) // 25/0
NSTUB(tolower, 0xffe9704c)
NSTUB(toupper, 0xffe9705c)
NSTUB(utime, 0xffe9d014)
// ALT: NSTUB(utime, 0xffe9d014) // 26/0
NSTUB(vsprintf, 0xffe9e7d8)
NSTUB(write, 0xffe9fb00)
