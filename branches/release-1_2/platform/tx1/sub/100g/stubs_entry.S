// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Best match: 95%
NHSTUB(AllocateMemory, 0xff811e38)
// ALT: NHSTUB(AllocateMemory, 0xff811e38) // 23/1
NHSTUB(AllocateUncacheableMemory, 0xff81e664)
NHSTUB(Close, 0xffaaec5c)
// Best match: 75%
NHSTUB(CreatePhysicalVram, 0xffa38628)
NHSTUB(CreateTask, 0xffb41ac8)
NHSTUB(CreateTaskStrict, 0xffb42b68)
NHSTUB(DeleteFile_Fut, 0xffaaa230)
NHSTUB(DisableDispatch, 0xffb418ec)
// ERROR: DisplayImagePhysicalScreen is not found!
NHSTUB(DoAFLock, 0xffb26510)
NHSTUB(EnableDispatch, 0xffb41978)
// Best match: 96%
NHSTUB(EnterToCompensationEVF, 0xffb268b8)
NHSTUB(ExecuteEventProcedure, 0xff814adc)
NHSTUB(ExitFromCompensationEVF, 0xffb2693c)
NHSTUB(ExitTask, 0xffb41e88)
NHSTUB(Fclose_Fut, 0xffaaa3a4)
NHSTUB(Feof_Fut, 0xffaaa5a0)
NHSTUB(Fflush_Fut, 0xffaaa5dc)
NHSTUB(Fgets_Fut, 0xffaaa508)
NHSTUB(Fopen_Fut, 0xffaaa364)
NHSTUB(Fread_Fut, 0xffaaa460)
// Best match: 95%
NHSTUB(FreeMemory, 0xff811e44)
// ALT: NHSTUB(FreeMemory, 0xff811e44) // 23/1
// Best match: 90%
NHSTUB(FreeUncacheableMemory, 0xff81e698)
NHSTUB(Fseek_Fut, 0xffaaa554)
NHSTUB(Fwrite_Fut, 0xffaaa4b4)
// Best match: 53%
NHSTUB(GetBatteryTemperature, 0xffa48d00)
// Best match: 68%
NHSTUB(GetCCDTemperature, 0xffa48cec)
NHSTUB(GetCurrentAvValue, 0xffa63518)
// ALT: NHSTUB(GetCurrentAvValue, 0xffa63610) // 13/0
// ALT: NHSTUB(GetCurrentAvValue, 0xffa6600c) // 13/0
NHSTUB(GetCurrentTargetDistance, 0xffa65fb4)
// Best match: 92%
NHSTUB(GetDrive_ClusterSize, 0xffaae448)
// Best match: 92%
NHSTUB(GetDrive_FreeClusters, 0xffaae4c0)
// Best match: 92%
NHSTUB(GetDrive_TotalClusters, 0xffaae484)
// Best match: 74%
//NHSTUB(GetFocusLensSubjectDistance, 0xffaea650) -- stubs_entry_2.S = 0xffaea654
// ALT: NHSTUB(GetFocusLensSubjectDistance, 0xffaea650) // 23/8
// ERROR: GetFocusLensSubjectDistanceFromLens is not found!
// Best match: 86%
//NHSTUB(GetOpticalTemperature, 0xffa48cd8) -- stubs_entry_2.S = 0xffa48cd8
// Best match: 86%
NHSTUB(GetParameterData, 0xffb66b94)
// Best match: 89%
NHSTUB(GetPropertyCase, 0xff81bd58)
// Best match: 96%
NHSTUB(GetSystemTime, 0xff813770)
// ALT: NHSTUB(GetSystemTime, 0xff813770) // 26/1
// Best match: 58%
//NHSTUB(GetZoomLensCurrentPoint, 0xffaec6ac) -- stubs_entry_2.S = 0xffaff734
// ALT: NHSTUB(GetZoomLensCurrentPoint, 0xffaec6ac) // 17/12
// ERROR: GetZoomLensCurrentPosition is not found!
NHSTUB(IsStrobeChargeCompleted, 0xff9b8f54)
NHSTUB(LockMainPower, 0xffb63880)
// Best match: 79%
NHSTUB(MakeAFScan, 0xffb2c7e4)
// Best match: 61%
NHSTUB(MakeDirectory, 0xffaaef8c)
NHSTUB(MakeDirectory_Fut, 0xffaaa2e4)
// Best match: 93%
NHSTUB(Mount_FileSystem, 0xffaadf80)
// Best match: 73%
NHSTUB(MoveFocusLensToDistance, 0xffa6624c)
// ERROR: MoveZoomLensWithPoint is not found!
// Best match: 66%
NHSTUB(Open, 0xffaaec34)
NHSTUB(PT_PlaySound, 0xffb38300)
// Best match: 93%
NHSTUB(PhySw_testgpio, 0xffa44c2c)
NHSTUB(PostLogicalEventForNotPowerType, 0xffb5f498)
NHSTUB(PostLogicalEventToUI, 0xffb5f514)
// ALT: NHSTUB(PostLogicalEventToUI, 0xffb5f59c) // 21/0
NHSTUB(ProtectFile, 0xffaa9888)
// Best match: 92%
NHSTUB(PutInNdFilter, 0xffa63994)
// ALT: NHSTUB(PutInNdFilter, 0xffa63994) // 25/2
// Best match: 94%
NHSTUB(PutOutNdFilter, 0xffa639dc)
// ALT: NHSTUB(PutOutNdFilter, 0xffa639dc) // 16/1
NHSTUB(Read, 0xffaaecf0)
// Best match: 58%
NHSTUB(RefreshPhysicalScreen, 0xff916bd8)
NHSTUB(Remove, 0xffaaec7c)
NHSTUB(RenameFile_Fut, 0xffaaa188)
// Best match: 96%
NHSTUB(Restart, 0xff81b80c)
// Best match: 95%
NHSTUB(SetAE_ShutterSpeed, 0xffa698f8)
NHSTUB(SetAutoShutdownTime, 0xffb63784)
NHSTUB(SetCurrentCaptureModeType, 0xff829c58)
NHSTUB(SetFileAttributes, 0xffaaee44)
NHSTUB(SetLogicalEventActive, 0xffb61390)
// Best match: 86%
NHSTUB(SetParameterData, 0xffb66ab4)
NHSTUB(SetPropertyCase, 0xff81bc20)
NHSTUB(SleepTask, 0xffb419dc)
// Best match: 61%
NHSTUB(TakeSemaphore, 0xffb41494)
NHSTUB(TurnOffBackLight, 0xff848a6c)
NHSTUB(TurnOnBackLight, 0xff848a3c)
NHSTUB(UnlockAF, 0xffb26590)
NHSTUB(UnlockMainPower, 0xffb63918)
NHSTUB(Unmount_FileSystem, 0xffaae028)
// ERROR: UnsetZoomForMovie is not found!
NHSTUB(UpdateMBROnFlash, 0xffaae17c)
// Best match: 82%
NHSTUB(VbattGet, 0xffa409cc)
NHSTUB(Write, 0xffaaecfc)
NHSTUB(WriteSDCard, 0xffac0ff8)
NHSTUB(_log, 0xff91e554)
// ALT: NHSTUB(_log, 0xff91e554) // 27/0
NHSTUB(_log10, 0xff91ac9c)
// ALT: NHSTUB(_log10, 0xff91ac9c) // 27/0
NHSTUB(_pow, 0xff91ae1c)
// ALT: NHSTUB(_pow, 0xff91ae1c) // 25/0
NHSTUB(_sqrt, 0xff91ccdc)
// ALT: NHSTUB(_sqrt, 0xff91ccdc) // 24/0
// Best match: 96%
NHSTUB(add_ptp_handler, 0xff9f6390)
NHSTUB(apex2us, 0xff93c8cc)
NHSTUB(chdir, 0xff928afc)
// ALT: NHSTUB(chdir, 0xff928afc) // 27/0
NHSTUB(close, 0xff92843c)
NHSTUB(closedir, 0xffb7cc28)
NHSTUB(errnoOfTaskGet, 0xff926090)
// Best match: 93%
NHSTUB(exmem_alloc, 0xff81e370)
// ERROR: free is not found!
NHSTUB(ints_disable, 0xffb3fb98)
NHSTUB(ints_enable, 0xffb3fba4)
NHSTUB(ioctl, 0xff92857c)
NHSTUB(iosDevAdd, 0xff92965c)
NHSTUB(iosDevDelete, 0xff929634)
NHSTUB(iosDevFind, 0xff9295e8)
NHSTUB(iosDrvInstall, 0xff929920)
NHSTUB(isalpha, 0xff91fa14)
NHSTUB(isdigit, 0xff91fa44)
NHSTUB(islower, 0xff91fa74)
NHSTUB(ispunct, 0xff91faa4)
NHSTUB(isspace, 0xff91fabc)
NHSTUB(isupper, 0xff91fad4)
NHSTUB(isxdigit, 0xff91faec)
NHSTUB(kbd_p1_f, 0xffa42f28)
NHSTUB(kbd_p1_f_cont, 0xffa42f34)
// Best match: 56%
NHSTUB(kbd_p2_f, 0xffa43350)
// Best match: 83%
NHSTUB(kbd_pwr_off, 0xffa421f0)
// ALT: NHSTUB(kbd_pwr_off, 0xffa4220c) // 5/1
// Best match: 55%
NHSTUB(kbd_pwr_on, 0xffa39b2c)
// ALT: NHSTUB(kbd_pwr_on, 0xffa39b58) // 5/4
// Best match: 76%
//NHSTUB(kbd_read_keys_r2, 0xffa445c4) -- stubs_entry_2.S = 0xffa444fc
// Best match: 93%
NHSTUB(localtime, 0xff924294)
NHSTUB(lseek, 0xff928580)
// Best match: 53%
NHSTUB(malloc, 0xff92b47c)
// ALT: NHSTUB(malloc, 0xff92b47c) // 15/13
NHSTUB(memPartInfoGet, 0xff92b89c)
NHSTUB(memchr, 0xff923640)
NHSTUB(memcmp, 0xff923674)
// ALT: NHSTUB(memcmp, 0xff92f63c) // 9/0
NHSTUB(memcpy, 0xff9236b0)
NHSTUB(memset, 0xff923728)
// Best match: 51%
NHSTUB(mkdir, 0xffaaeec4)
// ALT: NHSTUB(mkdir, 0xffaaef98) // 16/15
NHSTUB(mktime, 0xff92445c)
NHSTUB(open, 0xff928a80)
NHSTUB(opendir, 0xffb7cc5c)
NHSTUB(qsort, 0xff922ed4)
NHSTUB(rand, 0xff922ef8)
// ALT: NHSTUB(rand, 0xff922ef8) // 8/0
NHSTUB(read, 0xff92849c)
NHSTUB(readdir, 0xffb7cbf4)
NHSTUB(rename, 0xff928a88)
// ALT: NHSTUB(rename, 0xff928a88) // 26/0
NHSTUB(rewinddir, 0xffb7cc1c)
NHSTUB(srand, 0xff922f1c)
// ALT: NHSTUB(srand, 0xff922f1c) // 4/0
NHSTUB(stat, 0xffb7ccf0)
NHSTUB(strcat, 0xff923748)
NHSTUB(strchr, 0xff923774)
NHSTUB(strcmp, 0xff923798)
NHSTUB(strcpy, 0xff92392c)
NHSTUB(strftime, 0xff924fb4)
NHSTUB(strlen, 0xff923a90)
NHSTUB(strncmp, 0xff923af4)
NHSTUB(strncpy, 0xff923b38)
// ALT: NHSTUB(strncpy, 0xff923b38) // 24/0
NHSTUB(strpbrk, 0xff923b80)
NHSTUB(strrchr, 0xff923bbc)
// ALT: NHSTUB(strrchr, 0xff923bbc) // 8/0
NHSTUB(strtol, 0xff923310)
NHSTUB(strtoul, 0xff9234b8)
NHSTUB(taskCreateHookAdd, 0xff92e0dc)
NHSTUB(taskDeleteHookAdd, 0xff92e018)
// Best match: 82%
NHSTUB(taskIdListGet, 0xff9355c4)
NHSTUB(taskLock, 0xff935c80)
NHSTUB(taskName, 0xff9354bc)
NHSTUB(taskResume, 0xff9358a0)
NHSTUB(taskSuspend, 0xff9356cc)
NHSTUB(taskUnlock, 0xff935d28)
NHSTUB(time, 0xff924fe0)
// ALT: NHSTUB(time, 0xff924fe0) // 25/0
NHSTUB(tolower, 0xff91fb04)
NHSTUB(toupper, 0xff91fb14)
// Best match: 57%
NHSTUB(utime, 0xffb7cd84)
// ALT: NHSTUB(utime, 0xffb7cd84) // 15/11
NHSTUB(vsprintf, 0xff9271e4)
NHSTUB(write, 0xff92850c)
