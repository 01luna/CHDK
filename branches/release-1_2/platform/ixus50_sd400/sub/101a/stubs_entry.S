// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Best match: 79%
NHSTUB(AllocateMemory, 0xff811ba0)
NHSTUB(AllocateUncacheableMemory, 0xff8146a0)
// ERROR: Close is not found!
NHSTUB(CreatePhysicalVram, 0xff93d230)
NHSTUB(CreateTask, 0xff8221f4)
NHSTUB(CreateTaskStrict, 0xff8237bc)
NHSTUB(DeleteFile_Fut, 0xff86d8d0)
NHSTUB(DisableDispatch, 0xff821f64)
// ERROR: DisplayImagePhysicalScreen is not found!
// Best match: 52%
//NHSTUB(DoAFLock, 0xff959180) -- stubs_entry_2.S = 0xff958ef8
NHSTUB(EnableDispatch, 0xff821ff0)
// ERROR: EnterToCompensationEVF is not found!
NHSTUB(ExecuteEventProcedure, 0xff816944)
// Best match: 66%
//NHSTUB(ExitFromCompensationEVF, 0xff95baf4) -- stubs_entry_2.S = 0xff9590c8
// ALT: NHSTUB(ExitFromCompensationEVF, 0xff95bb28) // 20/10
// ALT: NHSTUB(ExitFromCompensationEVF, 0xff95bb5c) // 20/10
// ALT: NHSTUB(ExitFromCompensationEVF, 0xff95bb90) // 20/10
// ALT: NHSTUB(ExitFromCompensationEVF, 0xff95bbc4) // 20/10
NHSTUB(ExitTask, 0xff8225b4)
NHSTUB(Fclose_Fut, 0xff86da10)
NHSTUB(Feof_Fut, 0xff86dc24)
NHSTUB(Fflush_Fut, 0xff86dc5c)
NHSTUB(Fgets_Fut, 0xff86db94)
NHSTUB(Fopen_Fut, 0xff86d9d4)
NHSTUB(Fread_Fut, 0xff86daf4)
// Best match: 66%
NHSTUB(FreeMemory, 0xff811bac)
NHSTUB(FreeUncacheableMemory, 0xff8146d4)
NHSTUB(Fseek_Fut, 0xff86dbdc)
NHSTUB(Fwrite_Fut, 0xff86db44)
// ERROR: GetBatteryTemperature is not found!
// ERROR: GetCCDTemperature is not found!
//NHSTUB(GetCurrentAvValue, 0xffa72a08) -- stubs_entry_2.S = 0xffa5168c
NHSTUB(GetCurrentTargetDistance, 0xffa729b0)
// Best match: 84%
//NHSTUB(GetDrive_ClusterSize, 0xff874434) -- stubs_entry_2.S = 0xff8743bc
// Best match: 72%
//NHSTUB(GetDrive_FreeClusters, 0xff8743bc) -- stubs_entry_2.S = 0xff874434
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff8743bc) // 18/7
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff8743f8) // 18/7
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff8743f8) // 18/7
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff874434) // 18/7
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff874434) // 18/7
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff874470) // 18/7
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff874470) // 18/7
// Best match: 80%
//NHSTUB(GetDrive_TotalClusters, 0xff874470) -- stubs_entry_2.S = 0xff8743f8
// Best match: 51%
//NHSTUB(GetFocusLensSubjectDistance, 0xffa58340) -- stubs_entry_2.S = 0xffa66f2c
// ALT: NHSTUB(GetFocusLensSubjectDistance, 0xffa58340) // 16/15
// Best match: 88%
NHSTUB(GetFocusLensSubjectDistanceFromLens, 0xffa674ac)
// Best match: 55%
//NHSTUB(GetOpticalTemperature, 0xffa6820c) -- stubs_entry_2.S = 0xff82d72c
// Best match: 76%
NHSTUB(GetParameterData, 0xff975fe0)
// ALT: NHSTUB(GetParameterData, 0xff975fe0) // 23/7
// Best match: 71%
//NHSTUB(GetPropertyCase, 0xff825aa4) -- stubs_entry_2.S = 0xff825aa8
// Best match: 96%
NHSTUB(GetSystemTime, 0xff814a28)
// ALT: NHSTUB(GetSystemTime, 0xff814a28) // 26/1
// Best match: 72%
//NHSTUB(GetZoomLensCurrentPoint, 0xffa5ece0) -- stubs_entry_2.S = 0xffa59380
// ALT: NHSTUB(GetZoomLensCurrentPoint, 0xffa5ece0) // 21/8
// Best match: 55%
//NHSTUB(GetZoomLensCurrentPosition, 0xffa5ecf4) -- stubs_entry_2.S = 0xffa59394
// ALT: NHSTUB(GetZoomLensCurrentPosition, 0xffa5ecf4) // 16/13
NHSTUB(IsStrobeChargeCompleted, 0xff911ca8)
// Best match: 96%
NHSTUB(LockMainPower, 0xff9721b8)
// ERROR: MakeAFScan is not found!
// Best match: 70%
NHSTUB(MakeDirectory, 0xff874dd8)
NHSTUB(MakeDirectory_Fut, 0xff86d95c)
// ERROR: Mount_FileSystem is not found!
// Best match: 96%
NHSTUB(MoveFocusLensToDistance, 0xffa72c40)
NHSTUB(MoveZoomLensWithPoint, 0xffa591fc)
// ALT: NHSTUB(MoveZoomLensWithPoint, 0xffa591fc) // 25/0
// ERROR: Open is not found!
NHSTUB(PT_PlaySound, 0xff96ab04)
// ERROR: PhySw_testgpio is not found!
NHSTUB(PostLogicalEventForNotPowerType, 0xff96efa4)
NHSTUB(PostLogicalEventToUI, 0xff96f030)
// ALT: NHSTUB(PostLogicalEventToUI, 0xff96f0c8) // 25/0
NHSTUB(ProtectFile, 0xff86d03c)
// Best match: 92%
NHSTUB(PutInNdFilter, 0xffa70a7c)
// ALT: NHSTUB(PutInNdFilter, 0xffa70a7c) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa725b0) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa725b0) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa725f8) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa725f8) // 25/2
// Best match: 94%
NHSTUB(PutOutNdFilter, 0xffa70ac4)
// ALT: NHSTUB(PutOutNdFilter, 0xffa70ac4) // 16/1
// ERROR: Read is not found!
NHSTUB(RefreshPhysicalScreen, 0xff985fdc)
// Best match: 52%
//NHSTUB(Remove, 0xff8cf2f8) -- stubs_entry_2.S = 0xff874ba8
NHSTUB(RenameFile_Fut, 0xff86d850)
// Best match: 84%
//NHSTUB(Restart, 0xff823b8c) -- stubs_entry_2.S = 0xff823b90
// Best match: 95%
NHSTUB(SetAE_ShutterSpeed, 0xffa75b1c)
// Best match: 96%
NHSTUB(SetAutoShutdownTime, 0xff9720b0)
// Best match: 73%
NHSTUB(SetCurrentCaptureModeType, 0xff99ab34)
// Best match: 58%
NHSTUB(SetFileAttributes, 0xff874cf4)
// Best match: 87%
NHSTUB(SetLogicalEventActive, 0xff970658)
// Best match: 66%
NHSTUB(SetParameterData, 0xff975fdc)
// ERROR: SetPropertyCase is not found!
NHSTUB(SleepTask, 0xff822054)
// ALT: NHSTUB(SleepTask, 0xff822108) // 31/0
NHSTUB(TakeSemaphore, 0xff8219c4)
NHSTUB(TurnOffBackLight, 0xff9aeb2c)
NHSTUB(TurnOnBackLight, 0xff9aeb00)
// Best match: 71%
//NHSTUB(UnlockAF, 0xff9591c0) -- stubs_entry_2.S = 0xff958f70
// Best match: 96%
NHSTUB(UnlockMainPower, 0xff97226c)
NHSTUB(Unmount_FileSystem, 0xff873fa0)
// ERROR: UnsetZoomForMovie is not found!
// Best match: 96%
NHSTUB(UpdateMBROnFlash, 0xff8740f8)
// ERROR: VbattGet is not found!
// ERROR: Write is not found!
// ERROR: WriteSDCard is not found!
NHSTUB(_log, 0xffaa8120)
// ALT: NHSTUB(_log, 0xffaa8120) // 27/0
NHSTUB(_log10, 0xffaa87c8)
// ALT: NHSTUB(_log10, 0xffaa87c8) // 27/0
NHSTUB(_pow, 0xffaa8cb8)
// ALT: NHSTUB(_pow, 0xffaa8cb8) // 25/0
NHSTUB(_sqrt, 0xffaad004)
// ALT: NHSTUB(_sqrt, 0xffaad004) // 24/0
// Best match: 96%
NHSTUB(add_ptp_handler, 0xffa24f64)
NHSTUB(apex2us, 0xff8b85c4)
NHSTUB(chdir, 0xffabc260)
// ALT: NHSTUB(chdir, 0xffabc260) // 27/0
NHSTUB(close, 0xffabbba0)
NHSTUB(closedir, 0xffab7b40)
NHSTUB(errnoOfTaskGet, 0xffab830c)
// Best match: 92%
NHSTUB(exmem_alloc, 0xff812954)
// ERROR: free is not found!
NHSTUB(ints_disable, 0xff81e0ac)
NHSTUB(ints_enable, 0xff81e0b8)
NHSTUB(ioctl, 0xffabbce0)
NHSTUB(iosDevAdd, 0xffabcdc0)
NHSTUB(iosDevDelete, 0xffabcd98)
NHSTUB(iosDevFind, 0xffabcd4c)
NHSTUB(iosDrvInstall, 0xffabd084)
NHSTUB(isalpha, 0xffab1ab4)
NHSTUB(isdigit, 0xffab1ae4)
NHSTUB(islower, 0xffab1b14)
NHSTUB(ispunct, 0xffab1b44)
NHSTUB(isspace, 0xffab1b5c)
NHSTUB(isupper, 0xffab1b74)
NHSTUB(isxdigit, 0xffab1b8c)
// ERROR: kbd_p1_f is not found!
// ERROR: kbd_p1_f_cont is not found!
// ERROR: kbd_p2_f is not found!
// Best match: 83%
NHSTUB(kbd_pwr_off, 0xff82a120)
// ALT: NHSTUB(kbd_pwr_off, 0xff82a13c) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff82a20c) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff82a228) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff82a370) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff82a38c) // 5/1
// Best match: 55%
NHSTUB(kbd_pwr_on, 0xff93bd0c)
// ALT: NHSTUB(kbd_pwr_on, 0xff93bd38) // 5/4
// ALT: NHSTUB(kbd_pwr_on, 0xffa5e76c) // 5/4
// ALT: NHSTUB(kbd_pwr_on, 0xffa5e798) // 5/4
// ERROR: kbd_read_keys_r2 is not found!
// Best match: 93%
NHSTUB(localtime, 0xffab6334)
NHSTUB(lseek, 0xffabbce4)
// Best match: 53%
NHSTUB(malloc, 0xffabebe0)
// ALT: NHSTUB(malloc, 0xffabebe0) // 15/13
NHSTUB(memPartInfoGet, 0xffabf000)
NHSTUB(memchr, 0xffab56e0)
NHSTUB(memcmp, 0xffab5714)
// ALT: NHSTUB(memcmp, 0xffac3afc) // 9/0
NHSTUB(memcpy, 0xffab5750)
NHSTUB(memset, 0xffab57c8)
// Best match: 61%
NHSTUB(mkdir, 0xff874d24)
// ALT: NHSTUB(mkdir, 0xff874de4) // 19/12
NHSTUB(mktime, 0xffab64fc)
NHSTUB(open, 0xffabc1e4)
NHSTUB(opendir, 0xffab7b74)
NHSTUB(qsort, 0xffab4f74)
NHSTUB(rand, 0xffab4f98)
// ALT: NHSTUB(rand, 0xffab4f98) // 8/0
NHSTUB(read, 0xffabbc00)
NHSTUB(readdir, 0xffab7b0c)
NHSTUB(rename, 0xffabc1ec)
// ALT: NHSTUB(rename, 0xffabc1ec) // 26/0
NHSTUB(rewinddir, 0xffab7b34)
NHSTUB(srand, 0xffab4fbc)
// ALT: NHSTUB(srand, 0xffab4fbc) // 4/0
NHSTUB(stat, 0xffab7c08)
NHSTUB(strcat, 0xffab57e8)
NHSTUB(strchr, 0xffab5814)
NHSTUB(strcmp, 0xffab5838)
NHSTUB(strcpy, 0xffab59cc)
NHSTUB(strftime, 0xffab7054)
NHSTUB(strlen, 0xffab5b30)
NHSTUB(strncmp, 0xffab5b94)
NHSTUB(strncpy, 0xffab5bd8)
// ALT: NHSTUB(strncpy, 0xffab5bd8) // 24/0
NHSTUB(strpbrk, 0xffab5c20)
NHSTUB(strrchr, 0xffab5c5c)
// ALT: NHSTUB(strrchr, 0xffab5c5c) // 8/0
NHSTUB(strtol, 0xffab53b0)
NHSTUB(strtoul, 0xffab5558)
NHSTUB(taskCreateHookAdd, 0xffac2260)
NHSTUB(taskDeleteHookAdd, 0xffac219c)
// Best match: 82%
NHSTUB(taskIdListGet, 0xffac9d44)
NHSTUB(taskLock, 0xffaca400)
NHSTUB(taskName, 0xffac9c3c)
NHSTUB(taskResume, 0xffaca020)
NHSTUB(taskSuspend, 0xffac9e4c)
NHSTUB(taskUnlock, 0xffaca4a8)
NHSTUB(time, 0xffab7080)
// ALT: NHSTUB(time, 0xffab7080) // 25/0
NHSTUB(tolower, 0xffab1ba4)
NHSTUB(toupper, 0xffab1bb4)
NHSTUB(utime, 0xffab7c9c)
// ALT: NHSTUB(utime, 0xffab7c9c) // 26/0
NHSTUB(vsprintf, 0xffab9460)
NHSTUB(write, 0xffabbc70)
