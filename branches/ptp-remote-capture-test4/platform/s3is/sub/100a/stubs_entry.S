// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

NHSTUB(AllocateMemory, 0xff811ac4)
NHSTUB(AllocateUncacheableMemory, 0xff814cb0)
NHSTUB(Close, 0xff8713c4)
NHSTUB(CreatePhysicalVram, 0xff942824)
NHSTUB(CreateTask, 0xff821658)
NHSTUB(CreateTaskStrict, 0xff8226f8)
NHSTUB(DeleteFile_Fut, 0xff869fc4)
NHSTUB(DisableDispatch, 0xff82147c)
// Best match: 96%
NHSTUB(DisplayImagePhysicalScreen, 0xff941b58)
// Best match: 56%
//NHSTUB(DoAFLock, 0xff97660c) -- stubs_entry_2.S = 0xff9764ac
NHSTUB(EnableDispatch, 0xff821508)
// ERROR: EnterToCompensationEVF is not found!
NHSTUB(ExecuteEventProcedure, 0xff816bc8)
// Best match: 66%
//NHSTUB(ExitFromCompensationEVF, 0xff97a594) -- stubs_entry_2.S = 0xff978bd8
NHSTUB(ExitTask, 0xff821a18)
NHSTUB(Fclose_Fut, 0xff86a104)
NHSTUB(Feof_Fut, 0xff86a318)
NHSTUB(Fflush_Fut, 0xff86a350)
NHSTUB(Fgets_Fut, 0xff86a288)
NHSTUB(Fopen_Fut, 0xff86a0c8)
NHSTUB(Fread_Fut, 0xff86a1e8)
NHSTUB(FreeMemory, 0xff811ad0)
NHSTUB(FreeUncacheableMemory, 0xff814ce4)
NHSTUB(Fseek_Fut, 0xff86a2d0)
NHSTUB(Fwrite_Fut, 0xff86a238)
// Best match: 89%
NHSTUB(GetBatteryTemperature, 0xff82d37c)
// Best match: 89%
NHSTUB(GetCCDTemperature, 0xff82d368)
NHSTUB(GetCurrentAvValue, 0xffb0a538)
// ALT: NHSTUB(GetCurrentAvValue, 0xffb0c5dc) // 13/0
NHSTUB(GetCurrentTargetDistance, 0xffb0c584)
// Best match: 72%
//NHSTUB(GetDrive_ClusterSize, 0xff870804) -- stubs_entry_2.S = 0xff870710
// ALT: NHSTUB(GetDrive_ClusterSize, 0xff870804) // 18/7
// Best match: 76%
//NHSTUB(GetDrive_FreeClusters, 0xff870804) -- stubs_entry_2.S = 0xff8707a8
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff870804) // 19/6
// Best match: 72%
//NHSTUB(GetDrive_TotalClusters, 0xff870804) -- stubs_entry_2.S = 0xff87076c
// ALT: NHSTUB(GetDrive_TotalClusters, 0xff870804) // 18/7
// ALT: NHSTUB(GetDrive_TotalClusters, 0xff870804) // 18/7
// Best match: 83%
NHSTUB(GetFocusLensSubjectDistance, 0xffaf007c)
// ALT: NHSTUB(GetFocusLensSubjectDistance, 0xffaf007c) // 26/5
// Best match: 52%
NHSTUB(GetFocusLensSubjectDistanceFromLens, 0xffaf05f4)
// Best match: 89%
NHSTUB(GetOpticalTemperature, 0xff82d354)
// Best match: 86%
NHSTUB(GetParameterData, 0xff994b68)
NHSTUB(GetPropertyCase, 0xff82498c)
// Best match: 96%
NHSTUB(GetSystemTime, 0xff814ee8)
// ALT: NHSTUB(GetSystemTime, 0xff814ee8) // 26/1
// Best match: 68%
//NHSTUB(GetZoomLensCurrentPoint, 0xffae8474) -- stubs_entry_2.S = 0xffae8460
// ALT: NHSTUB(GetZoomLensCurrentPoint, 0xffae8474) // 20/9
// Best match: 51%
//NHSTUB(GetZoomLensCurrentPosition, 0xffae8488) -- stubs_entry_2.S = 0xffae8474
// ALT: NHSTUB(GetZoomLensCurrentPosition, 0xffae8488) // 15/14
NHSTUB(IsStrobeChargeCompleted, 0xff91d8c0)
NHSTUB(LockMainPower, 0xff98f118)
// ERROR: MakeAFScan is not found!
NHSTUB(MakeDirectory, 0xff871668)
NHSTUB(MakeDirectory_Fut, 0xff86a050)
// Best match: 73%
NHSTUB(Mount_FileSystem, 0xff870190)
// ALT: NHSTUB(Mount_FileSystem, 0xff870190) // 22/8
// Best match: 96%
NHSTUB(MoveFocusLensToDistance, 0xffb0c824)
// ERROR: MoveZoomLensWithPoint is not found!
NHSTUB(Open, 0xff87139c)
NHSTUB(PT_PlaySound, 0xff986518)
// Best match: 89%
NHSTUB(PhySw_testgpio, 0xff82835c)
NHSTUB(PostLogicalEventForNotPowerType, 0xff98b048)
NHSTUB(PostLogicalEventToUI, 0xff98b0c4)
// ALT: NHSTUB(PostLogicalEventToUI, 0xff98b14c) // 21/0
NHSTUB(ProtectFile, 0xff869730)
// Best match: 92%
NHSTUB(PutInNdFilter, 0xffb0a54c)
// ALT: NHSTUB(PutInNdFilter, 0xffb0a54c) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffb0a594) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffb0a594) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffb0a958) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffb0a958) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffb0c1cc) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffb0c1cc) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffb0c214) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffb0c214) // 25/2
// Best match: 94%
NHSTUB(PutOutNdFilter, 0xffb0a9a0)
// ALT: NHSTUB(PutOutNdFilter, 0xffb0a9a0) // 16/1
NHSTUB(Read, 0xff871458)
NHSTUB(RefreshPhysicalScreen, 0xff9a7b10)
NHSTUB(Remove, 0xff8713e4)
NHSTUB(RenameFile_Fut, 0xff869f44)
NHSTUB(Restart, 0xff822bd8)
// Best match: 95%
NHSTUB(SetAE_ShutterSpeed, 0xffb100cc)
NHSTUB(SetAutoShutdownTime, 0xff98f01c)
NHSTUB(SetCurrentCaptureModeType, 0xff9c3db8)
NHSTUB(SetFileAttributes, 0xff87157c)
// Best match: 88%
NHSTUB(SetLogicalEventActive, 0xff98ce10)
// Best match: 86%
NHSTUB(SetParameterData, 0xff994a88)
NHSTUB(SetPropertyCase, 0xff824870)
NHSTUB(SleepTask, 0xff82156c)
NHSTUB(TakeSemaphore, 0xff821068)
NHSTUB(TurnOffBackLight, 0xff9e6b2c)
NHSTUB(TurnOnBackLight, 0xff9e6afc)
// Best match: 78%
//NHSTUB(UnlockAF, 0xff910430) -- stubs_entry_2.S = 0xff976518
// ALT: NHSTUB(UnlockAF, 0xff97651c) // 11/3
// ALT: NHSTUB(UnlockAF, 0xff97664c) // 11/3
NHSTUB(UnlockMainPower, 0xff98f1b0)
NHSTUB(Unmount_FileSystem, 0xff870244)
// ERROR: UnsetZoomForMovie is not found!
NHSTUB(UpdateMBROnFlash, 0xff8703ec)
// ERROR: VbattGet is not found!
NHSTUB(Write, 0xff871464)
// Best match: 67%
//NHSTUB(WriteSDCard, 0xff87fe50) -- stubs_entry_2.S = 0xff87fff8
NHSTUB(_log, 0xffb496c0)
// ALT: NHSTUB(_log, 0xffb496c0) // 27/0
NHSTUB(_log10, 0xffb45a60)
// ALT: NHSTUB(_log10, 0xffb45a60) // 27/0
NHSTUB(_pow, 0xffb45be8)
// ALT: NHSTUB(_pow, 0xffb45be8) // 25/0
NHSTUB(_sqrt, 0xffb47abc)
// ALT: NHSTUB(_sqrt, 0xffb47abc) // 24/0
// Best match: 96%
NHSTUB(add_ptp_handler, 0xffab0098)
NHSTUB(apex2us, 0xff8b6348)
NHSTUB(chdir, 0xffb54858)
// ALT: NHSTUB(chdir, 0xffb54858) // 27/0
NHSTUB(close, 0xffb54198)
NHSTUB(closedir, 0xffb51620)
NHSTUB(errnoOfTaskGet, 0xffb51dec)
// Best match: 93%
NHSTUB(exmem_alloc, 0xff81282c)
// ERROR: free is not found!
NHSTUB(ints_disable, 0xff81dad8)
NHSTUB(ints_enable, 0xff81dae4)
NHSTUB(ioctl, 0xffb542d8)
NHSTUB(iosDevAdd, 0xffb553b8)
NHSTUB(iosDevDelete, 0xffb55390)
NHSTUB(iosDevFind, 0xffb55344)
NHSTUB(iosDrvInstall, 0xffb5567c)
NHSTUB(isalpha, 0xffb4b6c4)
NHSTUB(isdigit, 0xffb4b6f4)
NHSTUB(islower, 0xffb4b724)
NHSTUB(ispunct, 0xffb4b754)
NHSTUB(isspace, 0xffb4b76c)
NHSTUB(isupper, 0xffb4b784)
NHSTUB(isxdigit, 0xffb4b79c)
NHSTUB(kbd_p1_f, 0xff826d64)
NHSTUB(kbd_p1_f_cont, 0xff826d70)
NHSTUB(kbd_p2_f, 0xff827140)
// Best match: 83%
NHSTUB(kbd_pwr_off, 0xff829214)
// ALT: NHSTUB(kbd_pwr_off, 0xff829230) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff82931c) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829338) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829408) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829424) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff82956c) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829588) // 5/1
// Best match: 55%
NHSTUB(kbd_pwr_on, 0xff944170)
// ALT: NHSTUB(kbd_pwr_on, 0xff94419c) // 5/4
// Best match: 57%
//NHSTUB(kbd_read_keys_r2, 0xff827bf0) -- stubs_entry_2.S = 0xff827bc0
// Best match: 93%
NHSTUB(localtime, 0xffb4fe14)
NHSTUB(lseek, 0xffb542dc)
// Best match: 53%
NHSTUB(malloc, 0xffb571d8)
// ALT: NHSTUB(malloc, 0xffb571d8) // 15/13
NHSTUB(memPartInfoGet, 0xffb575f8)
NHSTUB(memchr, 0xffb4f1c0)
NHSTUB(memcmp, 0xffb4f1f4)
// ALT: NHSTUB(memcmp, 0xffb5bdb8) // 9/0
NHSTUB(memcpy, 0xffb4f230)
NHSTUB(memset, 0xffb4f2a8)
NHSTUB(mkdir, 0xff8715ac)
NHSTUB(mktime, 0xffb4ffdc)
NHSTUB(open, 0xffb547dc)
NHSTUB(opendir, 0xffb51654)
NHSTUB(qsort, 0xffb4ea54)
NHSTUB(rand, 0xffb4ea78)
// ALT: NHSTUB(rand, 0xffb4ea78) // 8/0
NHSTUB(read, 0xffb541f8)
NHSTUB(readdir, 0xffb515ec)
NHSTUB(rename, 0xffb547e4)
// ALT: NHSTUB(rename, 0xffb547e4) // 26/0
NHSTUB(rewinddir, 0xffb51614)
NHSTUB(srand, 0xffb4ea9c)
// ALT: NHSTUB(srand, 0xffb4ea9c) // 4/0
NHSTUB(stat, 0xffb516e8)
NHSTUB(strcat, 0xffb4f2c8)
NHSTUB(strchr, 0xffb4f2f4)
NHSTUB(strcmp, 0xffb4f318)
NHSTUB(strcpy, 0xffb4f4ac)
NHSTUB(strftime, 0xffb50b34)
NHSTUB(strlen, 0xffb4f610)
NHSTUB(strncmp, 0xffb4f674)
NHSTUB(strncpy, 0xffb4f6b8)
// ALT: NHSTUB(strncpy, 0xffb4f6b8) // 24/0
NHSTUB(strpbrk, 0xffb4f700)
NHSTUB(strrchr, 0xffb4f73c)
// ALT: NHSTUB(strrchr, 0xffb4f73c) // 8/0
NHSTUB(strtol, 0xffb4ee90)
NHSTUB(strtoul, 0xffb4f038)
NHSTUB(taskCreateHookAdd, 0xffb5a858)
NHSTUB(taskDeleteHookAdd, 0xffb5a794)
// Best match: 82%
NHSTUB(taskIdListGet, 0xffb64820)
NHSTUB(taskLock, 0xffb64edc)
NHSTUB(taskName, 0xffb64718)
NHSTUB(taskResume, 0xffb64afc)
NHSTUB(taskSuspend, 0xffb64928)
NHSTUB(taskUnlock, 0xffb64f84)
NHSTUB(time, 0xffb50b60)
// ALT: NHSTUB(time, 0xffb50b60) // 25/0
NHSTUB(tolower, 0xffb4b7b4)
NHSTUB(toupper, 0xffb4b7c4)
NHSTUB(utime, 0xffb5177c)
// ALT: NHSTUB(utime, 0xffb5177c) // 26/0
NHSTUB(vsprintf, 0xffb52f40)
NHSTUB(write, 0xffb54268)
