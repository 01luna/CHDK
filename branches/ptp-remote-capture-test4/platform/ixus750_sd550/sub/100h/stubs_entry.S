// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Best match: 79%
NHSTUB(AllocateMemory, 0xff811ba0)
NHSTUB(AllocateUncacheableMemory, 0xff814d2c)
NHSTUB(Close, 0xff86fb10)
NHSTUB(CreatePhysicalVram, 0xff924e44)
NHSTUB(CreateTask, 0xff822274)
NHSTUB(CreateTaskStrict, 0xff823678)
NHSTUB(DeleteFile_Fut, 0xff8689f4)
NHSTUB(DisableDispatch, 0xff821fe4)
NHSTUB(DisplayImagePhysicalScreen, 0xff92420c)
NHSTUB(DoAFLock, 0xff94ae54)
NHSTUB(EnableDispatch, 0xff822070)
// Best match: 64%
//NHSTUB(EnterToCompensationEVF, 0xff94ccb0) -- stubs_entry_2.S = 0x00000000
NHSTUB(ExecuteEventProcedure, 0xff816c44)
// Best match: 73%
//NHSTUB(ExitFromCompensationEVF, 0xff94cd7c) -- stubs_entry_2.S = 0x00000000
NHSTUB(ExitTask, 0xff822634)
NHSTUB(Fclose_Fut, 0xff868b34)
NHSTUB(Feof_Fut, 0xff868d48)
NHSTUB(Fflush_Fut, 0xff868d80)
NHSTUB(Fgets_Fut, 0xff868cb8)
NHSTUB(Fopen_Fut, 0xff868af8)
NHSTUB(Fread_Fut, 0xff868c18)
// Best match: 66%
NHSTUB(FreeMemory, 0xff811bac)
NHSTUB(FreeUncacheableMemory, 0xff814d60)
NHSTUB(Fseek_Fut, 0xff868d00)
NHSTUB(Fwrite_Fut, 0xff868c68)
// Best match: 89%
NHSTUB(GetBatteryTemperature, 0xff82d5ac)
// Best match: 89%
NHSTUB(GetCCDTemperature, 0xff82d598)
NHSTUB(GetCurrentAvValue, 0xffa8b154)
NHSTUB(GetCurrentTargetDistance, 0xffa8b0fc)
// Best match: 92%
NHSTUB(GetDrive_ClusterSize, 0xff86f2ec)
// Best match: 92%
NHSTUB(GetDrive_FreeClusters, 0xff86f364)
// Best match: 92%
NHSTUB(GetDrive_TotalClusters, 0xff86f328)
// Best match: 90%
NHSTUB(GetFocusLensSubjectDistance, 0xffa7e77c)
// ALT: NHSTUB(GetFocusLensSubjectDistance, 0xffa7e77c) // 28/3
// Best match: 52%
NHSTUB(GetFocusLensSubjectDistanceFromLens, 0xffa7ed1c)
// Best match: 89%
NHSTUB(GetOpticalTemperature, 0xff82d584)
NHSTUB(GetParameterData, 0xff965060)
NHSTUB(GetPropertyCase, 0xff825530)
// Best match: 96%
NHSTUB(GetSystemTime, 0xff814f64)
// ALT: NHSTUB(GetSystemTime, 0xff814f64) // 26/1
// Best match: 93%
NHSTUB(GetZoomLensCurrentPoint, 0xffa6f500)
// ALT: NHSTUB(GetZoomLensCurrentPoint, 0xffa6f500) // 27/2
// Best match: 93%
NHSTUB(GetZoomLensCurrentPosition, 0xffa6f514)
// ALT: NHSTUB(GetZoomLensCurrentPosition, 0xffa6f514) // 27/2
NHSTUB(IsStrobeChargeCompleted, 0xff8fe9b0)
// Best match: 96%
NHSTUB(LockMainPower, 0xff960534)
// Best match: 89%
NHSTUB(MakeAFScan, 0xff94f2b0)
NHSTUB(MakeDirectory, 0xff86fde8)
NHSTUB(MakeDirectory_Fut, 0xff868a80)
// Best match: 90%
NHSTUB(Mount_FileSystem, 0xff86edc4)
// ALT: NHSTUB(Mount_FileSystem, 0xff86edc4) // 27/3
// Best match: 96%
NHSTUB(MoveFocusLensToDistance, 0xffa8b38c)
NHSTUB(MoveZoomLensWithPoint, 0xffa6f3e0)
// ALT: NHSTUB(MoveZoomLensWithPoint, 0xffa6f3e0) // 25/0
NHSTUB(Open, 0xff86fae8)
NHSTUB(PT_PlaySound, 0xff957e18)
// Best match: 96%
NHSTUB(PhySw_testgpio, 0xff8288c0)
NHSTUB(PostLogicalEventForNotPowerType, 0xff95c57c)
NHSTUB(PostLogicalEventToUI, 0xff95c608)
// ALT: NHSTUB(PostLogicalEventToUI, 0xff95c6a0) // 25/0
NHSTUB(ProtectFile, 0xff868160)
// Best match: 92%
NHSTUB(PutInNdFilter, 0xffa89174)
// ALT: NHSTUB(PutInNdFilter, 0xffa89174) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa8ad00) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa8ad00) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa8ad48) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa8ad48) // 25/2
// Best match: 94%
NHSTUB(PutOutNdFilter, 0xffa891bc)
// ALT: NHSTUB(PutOutNdFilter, 0xffa891bc) // 16/1
NHSTUB(Read, 0xff86fba4)
NHSTUB(RefreshPhysicalScreen, 0xff975be8)
NHSTUB(Remove, 0xff86fb30)
NHSTUB(RenameFile_Fut, 0xff868974)
NHSTUB(Restart, 0xff823ac0)
// Best match: 95%
NHSTUB(SetAE_ShutterSpeed, 0xffa8e440)
// Best match: 96%
NHSTUB(SetAutoShutdownTime, 0xff96042c)
NHSTUB(SetCurrentCaptureModeType, 0xff98cdf8)
NHSTUB(SetFileAttributes, 0xff86fcfc)
// Best match: 87%
NHSTUB(SetLogicalEventActive, 0xff95e5d8)
NHSTUB(SetParameterData, 0xff964f80)
NHSTUB(SetPropertyCase, 0xff825414)
NHSTUB(SleepTask, 0xff8220d4)
// ALT: NHSTUB(SleepTask, 0xff822188) // 31/0
NHSTUB(TakeSemaphore, 0xff821a90)
NHSTUB(TurnOffBackLight, 0xff9a3114)
NHSTUB(TurnOnBackLight, 0xff9a30e8)
NHSTUB(UnlockAF, 0xff94ae94)
// Best match: 96%
NHSTUB(UnlockMainPower, 0xff9605e8)
NHSTUB(Unmount_FileSystem, 0xff86eecc)
NHSTUB(UnsetZoomForMovie, 0xff9979d4)
NHSTUB(UpdateMBROnFlash, 0xff86f024)
// ERROR: VbattGet is not found!
NHSTUB(Write, 0xff86fbb0)
// Best match: 93%
//NHSTUB(WriteSDCard, 0xff87eb7c) -- stubs_entry_2.S = 0xff87ed54
// ALT: NHSTUB(WriteSDCard, 0xff87ed54) // 29/2
NHSTUB(_log, 0xffabff3c)
// ALT: NHSTUB(_log, 0xffabff3c) // 27/0
NHSTUB(_log10, 0xffac05e4)
// ALT: NHSTUB(_log10, 0xffac05e4) // 27/0
NHSTUB(_pow, 0xffac0ad4)
// ALT: NHSTUB(_pow, 0xffac0ad4) // 25/0
NHSTUB(_sqrt, 0xffac4e20)
// ALT: NHSTUB(_sqrt, 0xffac4e20) // 24/0
// Best match: 96%
NHSTUB(add_ptp_handler, 0xffa3d504)
NHSTUB(apex2us, 0xff8acabc)
NHSTUB(chdir, 0xffad407c)
// ALT: NHSTUB(chdir, 0xffad407c) // 27/0
NHSTUB(close, 0xffad39bc)
NHSTUB(closedir, 0xffacf95c)
NHSTUB(errnoOfTaskGet, 0xffad0128)
NHSTUB(exmem_alloc, 0xff81295c)
// ERROR: free is not found!
NHSTUB(ints_disable, 0xff81e34c)
NHSTUB(ints_enable, 0xff81e358)
NHSTUB(ioctl, 0xffad3afc)
NHSTUB(iosDevAdd, 0xffad4bdc)
NHSTUB(iosDevDelete, 0xffad4bb4)
NHSTUB(iosDevFind, 0xffad4b68)
NHSTUB(iosDrvInstall, 0xffad4ea0)
NHSTUB(isalpha, 0xffac98d0)
NHSTUB(isdigit, 0xffac9900)
NHSTUB(islower, 0xffac9930)
NHSTUB(ispunct, 0xffac9960)
NHSTUB(isspace, 0xffac9978)
NHSTUB(isupper, 0xffac9990)
NHSTUB(isxdigit, 0xffac99a8)
NHSTUB(kbd_p1_f, 0xff82752c)
NHSTUB(kbd_p1_f_cont, 0xff827538)
NHSTUB(kbd_p2_f, 0xff827910)
NHSTUB(kbd_pwr_off, 0xff828888)
// ALT: NHSTUB(kbd_pwr_off, 0xff8288a4) // 6/0
// Best match: 55%
NHSTUB(kbd_pwr_on, 0xff82879c)
// ALT: NHSTUB(kbd_pwr_on, 0xff92332c) // 5/4
// ALT: NHSTUB(kbd_pwr_on, 0xff923358) // 5/4
// ALT: NHSTUB(kbd_pwr_on, 0xff923494) // 5/4
// ALT: NHSTUB(kbd_pwr_on, 0xffa74d64) // 5/4
// ALT: NHSTUB(kbd_pwr_on, 0xffa74d90) // 5/4
NHSTUB(kbd_read_keys_r2, 0xff828320)
// Best match: 93%
NHSTUB(localtime, 0xfface150)
NHSTUB(lseek, 0xffad3b00)
// Best match: 53%
NHSTUB(malloc, 0xffad69fc)
// ALT: NHSTUB(malloc, 0xffad69fc) // 15/13
NHSTUB(memPartInfoGet, 0xffad6e1c)
NHSTUB(memchr, 0xffacd4fc)
NHSTUB(memcmp, 0xffacd530)
// ALT: NHSTUB(memcmp, 0xffadb918) // 9/0
NHSTUB(memcpy, 0xffacd56c)
NHSTUB(memset, 0xffacd5e4)
NHSTUB(mkdir, 0xff86fd2c)
NHSTUB(mktime, 0xfface318)
NHSTUB(open, 0xffad4000)
NHSTUB(opendir, 0xffacf990)
NHSTUB(qsort, 0xffaccd90)
NHSTUB(rand, 0xffaccdb4)
// ALT: NHSTUB(rand, 0xffaccdb4) // 8/0
NHSTUB(read, 0xffad3a1c)
NHSTUB(readdir, 0xffacf928)
NHSTUB(rename, 0xffad4008)
// ALT: NHSTUB(rename, 0xffad4008) // 26/0
NHSTUB(rewinddir, 0xffacf950)
NHSTUB(srand, 0xffaccdd8)
// ALT: NHSTUB(srand, 0xffaccdd8) // 4/0
NHSTUB(stat, 0xffacfa24)
NHSTUB(strcat, 0xffacd604)
NHSTUB(strchr, 0xffacd630)
NHSTUB(strcmp, 0xffacd654)
NHSTUB(strcpy, 0xffacd7e8)
NHSTUB(strftime, 0xffacee70)
NHSTUB(strlen, 0xffacd94c)
NHSTUB(strncmp, 0xffacd9b0)
NHSTUB(strncpy, 0xffacd9f4)
// ALT: NHSTUB(strncpy, 0xffacd9f4) // 24/0
NHSTUB(strpbrk, 0xffacda3c)
NHSTUB(strrchr, 0xffacda78)
// ALT: NHSTUB(strrchr, 0xffacda78) // 8/0
NHSTUB(strtol, 0xffacd1cc)
NHSTUB(strtoul, 0xffacd374)
NHSTUB(taskCreateHookAdd, 0xffada07c)
NHSTUB(taskDeleteHookAdd, 0xffad9fb8)
// Best match: 82%
NHSTUB(taskIdListGet, 0xffae4640)
NHSTUB(taskLock, 0xffae4cfc)
NHSTUB(taskName, 0xffae4538)
NHSTUB(taskResume, 0xffae491c)
NHSTUB(taskSuspend, 0xffae4748)
NHSTUB(taskUnlock, 0xffae4da4)
NHSTUB(time, 0xffacee9c)
// ALT: NHSTUB(time, 0xffacee9c) // 25/0
NHSTUB(tolower, 0xffac99c0)
NHSTUB(toupper, 0xffac99d0)
NHSTUB(utime, 0xffacfab8)
// ALT: NHSTUB(utime, 0xffacfab8) // 26/0
NHSTUB(vsprintf, 0xffad127c)
NHSTUB(write, 0xffad3a8c)
