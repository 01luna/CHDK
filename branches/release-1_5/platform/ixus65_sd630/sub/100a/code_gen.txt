//-------------------------- CAPT_SEQ.C -----------------------------------------------------------
FILE capt_seq.c

>>> file=../capt_seq_hdr.c

//////////////////////////////////////////////////////////////
// capt_seq_task
//////////////////////////////////////////////////////////////
FUNC sig=task_CaptSeq name=capt_seq_task
ASM
FW 32
>>>
"    BL      shooting_expo_param_override\n"   // +
<<<
FW 2
>>>
"    MOV     R2, #0\n"                          // added
"    STR     R2, [R3,#0x24]\n"                  // added, fixes overrides behavior at short shutter press (from S95)
<<<
REM "above patch makes these three lines redundant"
REM
REM
REM
FW 1
PATCHSUB ref=0
FW $
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// capt_seq_task -> ref=0
//////////////////////////////////////////////////////////////
FUNC ref=0 length=49
ASM
FW 37
PATCHSUB ref=0
>>>
"    BL      capt_seq_hook_raw_here\n"   // +
<<<
FW $
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// capt_seq_task -> ref=0 -> ref=0
//////////////////////////////////////////////////////////////
FUNC ref=0
ASM
FW 12
>>>
"    BL      wait_until_remote_button_is_released\n"
"    BL      capt_seq_hook_set_nr\n"
<<<
->FW
ENDASM
ENDFUNC


//////////////////////////////////////////////////////////////
// exp_drv_task
//////////////////////////////////////////////////////////////
FUNC sig=task_ExpDrv name=exp_drv_task
ASM
FW 187
PATCHSUB ref=0
FW $
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// exp_drv_task -> ref=0
//////////////////////////////////////////////////////////////
FUNC ref=0
ASM
FW 30
PATCHSUB ref=0
FW $
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// exp_drv_task -> ref=0 -> ref=0
//////////////////////////////////////////////////////////////
FUNC ref=0
ASM
FW 23
PATCHSUB name=apex2us
->FW
ENDASM
ENDFUNC

ENDFILE


//-------------------------- FILEWRITE.C ----------------------------------------------------------
FILE filewrite.c

>>> file=../filewrite_hdr.c

//////////////////////////////////////////////////////////////
// filewritetask
//////////////////////////////////////////////////////////////
FUNC sig=task_FileWrite name=filewritetask
ASM
FW 12
PATCHSUB ref=0
FW $
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// filewritetask -> ref=0
//////////////////////////////////////////////////////////////
FUNC ref=0
ASM
FW 12
PATCHSUB ref=0
FW $-1
>>>
"    BL      fwt_after_close\n" //+
<<<
FW $
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// filewritetask -> ref=0 -> ref=0
//////////////////////////////////////////////////////////////
FUNC ref=0
ASM
FW 15
>>>
//place hook here
//the task's data block is at [r4] at this point, filename starts at [r4+0x1c]
//the block can be captured here for a (new) camera with unknown data block structure
//for ptp remote capture, pass '/null' as filename
//if writing does not need to be prevented, just continue
"    STMFD   SP!, {R1-R12,LR}\n"
"    MOV     R0, R4\n"
"    BL      filewrite_main_hook\n"
"    BL      filewrite_file_complete\n"
"    CMP     R0, #0\n"
"    LDRNE   R0, =loc_mynull\n" // /null as file name (works only on VxWorks)
"    LDMFD   SP!, {R1-R12,LR}\n"
"    MOVEQ   R0, R5\n" //canon file name
//hook end
<<<
REM "- file name"
FW $
>>>
//mod start
"loc_mynull:\n"
".asciz     \"/null\" \n"
//mod end
<<<
ENDASM
ENDFUNC


ENDFILE

