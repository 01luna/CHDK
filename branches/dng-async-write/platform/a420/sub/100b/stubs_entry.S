// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

NHSTUB(AllocateMemory, 0xffc01ab4)
NHSTUB(AllocateUncacheableMemory, 0xffc048f4)
NHSTUB(Close, 0xffc5a42c)
NHSTUB(CreatePhysicalVram, 0xffd092f0)
NHSTUB(CreateTask, 0xffc11260)
NHSTUB(CreateTaskStrict, 0xffc12300)
NHSTUB(DeleteFile_Fut, 0xffc535c8)
NHSTUB(DisableDispatch, 0xffc11084)
// Best match: 96%
NHSTUB(DisplayImagePhysicalScreen, 0xffd0859c)
// Best match: 56%
//NHSTUB(DoAFLock, 0xffd22b98) -- stubs_entry_2.S = 0xffd22ba0
NHSTUB(EnableDispatch, 0xffc11110)
// ERROR: EnterToCompensationEVF is not found!
NHSTUB(ExecuteEventProcedure, 0xffc0680c)
// Best match: 76%
//NHSTUB(ExitFromCompensationEVF, 0xffd24a54) -- stubs_entry_2.S = 0xffd249ec
NHSTUB(ExitTask, 0xffc11620)
NHSTUB(Fclose_Fut, 0xffc53708)
NHSTUB(Feof_Fut, 0xffc5391c)
NHSTUB(Fflush_Fut, 0xffc53954)
NHSTUB(Fgets_Fut, 0xffc5388c)
NHSTUB(Fopen_Fut, 0xffc536cc)
NHSTUB(Fread_Fut, 0xffc537ec)
NHSTUB(FreeMemory, 0xffc01ac0)
NHSTUB(FreeUncacheableMemory, 0xffc04928)
NHSTUB(Fseek_Fut, 0xffc538d4)
NHSTUB(Fwrite_Fut, 0xffc5383c)
// Best match: 82%
NHSTUB(GetBatteryTemperature, 0xffc1c044)
// Best match: 82%
NHSTUB(GetCCDTemperature, 0xffc1c030)
NHSTUB(GetCurrentAvValue, 0xffe5e0ac)
NHSTUB(GetCurrentTargetDistance, 0xffe5e054)
// Best match: 80%
//NHSTUB(GetDrive_ClusterSize, 0xffc59c7c) -- stubs_entry_2.S = 0xffc59c04
// Best match: 80%
NHSTUB(GetDrive_FreeClusters, 0xffc59c7c)
// Best match: 80%
//NHSTUB(GetDrive_TotalClusters, 0xffc59c04) -- stubs_entry_2.S = 0xffc59c40
// ALT: NHSTUB(GetDrive_TotalClusters, 0xffc59c40) // 20/5
// Best match: 96%
NHSTUB(GetFocusLensSubjectDistance, 0xffe5089c)
// Best match: 52%
NHSTUB(GetFocusLensSubjectDistanceFromLens, 0xffe50e3c)
// Best match: 82%
NHSTUB(GetOpticalTemperature, 0xffc1c01c)
// Best match: 86%
NHSTUB(GetParameterData, 0xffd3d590)
NHSTUB(GetPropertyCase, 0xffc14518)
// Best match: 96%
NHSTUB(GetSystemTime, 0xffc04b2c)
// ALT: NHSTUB(GetSystemTime, 0xffc04b2c) // 26/1
// Best match: 93%
NHSTUB(GetZoomLensCurrentPoint, 0xffe41344)
// ALT: NHSTUB(GetZoomLensCurrentPoint, 0xffe41344) // 27/2
// Best match: 93%
NHSTUB(GetZoomLensCurrentPosition, 0xffe41358)
// ALT: NHSTUB(GetZoomLensCurrentPosition, 0xffe41358) // 27/2
NHSTUB(IsStrobeChargeCompleted, 0xffce4958)
NHSTUB(LockMainPower, 0xffd38918)
// ERROR: MakeAFScan is not found!
NHSTUB(MakeDirectory, 0xffc5a6d0)
NHSTUB(MakeDirectory_Fut, 0xffc53654)
// Best match: 90%
NHSTUB(Mount_FileSystem, 0xffc596cc)
// ALT: NHSTUB(Mount_FileSystem, 0xffc596cc) // 27/3
// Best match: 96%
NHSTUB(MoveFocusLensToDistance, 0xffe5e2f4)
NHSTUB(MoveZoomLensWithPoint, 0xffe41224)
// ALT: NHSTUB(MoveZoomLensWithPoint, 0xffe41224) // 25/0
NHSTUB(Open, 0xffc5a404)
NHSTUB(PT_PlaySound, 0xffd300ac)
// Best match: 96%
NHSTUB(PhySw_testgpio, 0xffc17b68)
NHSTUB(PostLogicalEventForNotPowerType, 0xffd34a10)
NHSTUB(PostLogicalEventToUI, 0xffd34a8c)
// ALT: NHSTUB(PostLogicalEventToUI, 0xffd34b14) // 21/0
NHSTUB(ProtectFile, 0xffc52d34)
// Best match: 92%
NHSTUB(PutInNdFilter, 0xffe5c0c8)
// ALT: NHSTUB(PutInNdFilter, 0xffe5c0c8) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffe5dc58) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffe5dc58) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffe5dca0) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffe5dca0) // 25/2
// Best match: 94%
NHSTUB(PutOutNdFilter, 0xffe5c110)
// ALT: NHSTUB(PutOutNdFilter, 0xffe5c110) // 16/1
NHSTUB(Read, 0xffc5a4c0)
NHSTUB(RefreshPhysicalScreen, 0xffd4eae0)
NHSTUB(Remove, 0xffc5a44c)
NHSTUB(RenameFile_Fut, 0xffc53548)
NHSTUB(Restart, 0xffc1277c)
// Best match: 95%
NHSTUB(SetAE_ShutterSpeed, 0xffe617a8)
NHSTUB(SetAutoShutdownTime, 0xffd38810)
NHSTUB(SetCurrentCaptureModeType, 0xffd6750c)
NHSTUB(SetFileAttributes, 0xffc5a5e4)
// Best match: 88%
NHSTUB(SetLogicalEventActive, 0xffd367e8)
// Best match: 86%
NHSTUB(SetParameterData, 0xffd3d4b0)
NHSTUB(SetPropertyCase, 0xffc143ec)
NHSTUB(SleepTask, 0xffc11174)
NHSTUB(TakeSemaphore, 0xffc10c70)
NHSTUB(TurnOffBackLight, 0xffd7e1f0)
NHSTUB(TurnOnBackLight, 0xffd7e1c0)
// Best match: 78%
//NHSTUB(UnlockAF, 0xffcd89d0) -- stubs_entry_2.S = 0xffd22be4
// ALT: NHSTUB(UnlockAF, 0xffd22be8) // 11/3
NHSTUB(UnlockMainPower, 0xffd389cc)
NHSTUB(Unmount_FileSystem, 0xffc597e4)
// Best match: 89%
NHSTUB(UnsetZoomForMovie, 0xffd72590)
NHSTUB(UpdateMBROnFlash, 0xffc59938)
// ERROR: VbattGet is not found!
NHSTUB(Write, 0xffc5a4cc)
// Best match: 64%
//NHSTUB(WriteSDCard, 0xffc68eb8) -- stubs_entry_2.S = 0xffc69060
NHSTUB(_log, 0xffe9381c)
// ALT: NHSTUB(_log, 0xffe9381c) // 27/0
NHSTUB(_log10, 0xffe8fcf4)
// ALT: NHSTUB(_log10, 0xffe8fcf4) // 27/0
NHSTUB(_pow, 0xffe8fe7c)
// ALT: NHSTUB(_pow, 0xffe8fe7c) // 25/0
NHSTUB(_sqrt, 0xffe91c18)
// ALT: NHSTUB(_sqrt, 0xffe91c18) // 24/0
// Best match: 96%
NHSTUB(add_ptp_handler, 0xffe10fb4)
NHSTUB(apex2us, 0xffc93b4c)
NHSTUB(chdir, 0xffea00f0)
// ALT: NHSTUB(chdir, 0xffea00f0) // 27/0
NHSTUB(close, 0xffe9fa30)
NHSTUB(closedir, 0xffe9ceb8)
NHSTUB(errnoOfTaskGet, 0xffe9d684)
// Best match: 93%
NHSTUB(exmem_alloc, 0xffc0281c)
// ERROR: free is not found!
NHSTUB(ints_disable, 0xffc0d6e0)
NHSTUB(ints_enable, 0xffc0d6ec)
NHSTUB(ioctl, 0xffe9fb70)
NHSTUB(iosDevAdd, 0xffea0c50)
NHSTUB(iosDevDelete, 0xffea0c28)
NHSTUB(iosDevFind, 0xffea0bdc)
NHSTUB(iosDrvInstall, 0xffea0f14)
NHSTUB(isalpha, 0xffe96f5c)
NHSTUB(isdigit, 0xffe96f8c)
NHSTUB(islower, 0xffe96fbc)
NHSTUB(ispunct, 0xffe96fec)
NHSTUB(isspace, 0xffe97004)
NHSTUB(isupper, 0xffe9701c)
NHSTUB(isxdigit, 0xffe97034)
NHSTUB(kbd_p1_f, 0xffc16910)
NHSTUB(kbd_p1_f_cont, 0xffc1691c)
NHSTUB(kbd_p2_f, 0xffc16cec)
// Best match: 83%
//NHSTUB(kbd_pwr_off, 0xffc17ebc) -- stubs_entry_2.S = 0x00000000
// ALT: NHSTUB(kbd_pwr_off, 0xffc17ed8) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffc17fc4) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffc17fe0) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffc180b0) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffc180cc) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffc18214) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffc18230) // 5/1
// ERROR: kbd_pwr_on is not found!
NHSTUB(kbd_read_keys_r2, 0xffc17618)
// Best match: 93%
NHSTUB(localtime, 0xffe9b6ac)
NHSTUB(lseek, 0xffe9fb74)
// Best match: 53%
NHSTUB(malloc, 0xffea2a70)
// ALT: NHSTUB(malloc, 0xffea2a70) // 15/13
NHSTUB(memPartInfoGet, 0xffea2e90)
NHSTUB(memchr, 0xffe9aa58)
NHSTUB(memcmp, 0xffe9aa8c)
// ALT: NHSTUB(memcmp, 0xffea6c30) // 9/0
NHSTUB(memcpy, 0xffe9aac8)
NHSTUB(memset, 0xffe9ab40)
NHSTUB(mkdir, 0xffc5a614)
NHSTUB(mktime, 0xffe9b874)
NHSTUB(open, 0xffea0074)
NHSTUB(opendir, 0xffe9ceec)
NHSTUB(qsort, 0xffe9a2ec)
NHSTUB(rand, 0xffe9a310)
// ALT: NHSTUB(rand, 0xffe9a310) // 8/0
NHSTUB(read, 0xffe9fa90)
NHSTUB(readdir, 0xffe9ce84)
NHSTUB(rename, 0xffea007c)
// ALT: NHSTUB(rename, 0xffea007c) // 26/0
NHSTUB(rewinddir, 0xffe9ceac)
NHSTUB(srand, 0xffe9a334)
// ALT: NHSTUB(srand, 0xffe9a334) // 4/0
NHSTUB(stat, 0xffe9cf80)
NHSTUB(strcat, 0xffe9ab60)
NHSTUB(strchr, 0xffe9ab8c)
NHSTUB(strcmp, 0xffe9abb0)
NHSTUB(strcpy, 0xffe9ad44)
NHSTUB(strftime, 0xffe9c3cc)
NHSTUB(strlen, 0xffe9aea8)
NHSTUB(strncmp, 0xffe9af0c)
NHSTUB(strncpy, 0xffe9af50)
// ALT: NHSTUB(strncpy, 0xffe9af50) // 24/0
NHSTUB(strpbrk, 0xffe9af98)
NHSTUB(strrchr, 0xffe9afd4)
// ALT: NHSTUB(strrchr, 0xffe9afd4) // 8/0
NHSTUB(strtol, 0xffe9a728)
NHSTUB(strtoul, 0xffe9a8d0)
NHSTUB(taskCreateHookAdd, 0xffea56d0)
NHSTUB(taskDeleteHookAdd, 0xffea560c)
// Best match: 82%
NHSTUB(taskIdListGet, 0xffeaf698)
// ALT: NHSTUB(taskIdListGet, 0xffed347c) // 24/5
NHSTUB(taskLock, 0xffeafd54)
// ALT: NHSTUB(taskLock, 0xffed3b38) // 31/0
NHSTUB(taskName, 0xffeaf590)
// ALT: NHSTUB(taskName, 0xffed3374) // 25/0
NHSTUB(taskResume, 0xffeaf974)
// ALT: NHSTUB(taskResume, 0xffed3758) // 31/0
NHSTUB(taskSuspend, 0xffeaf7a0)
// ALT: NHSTUB(taskSuspend, 0xffed3584) // 31/0
NHSTUB(taskUnlock, 0xffeafdfc)
// ALT: NHSTUB(taskUnlock, 0xffed3be0) // 31/0
NHSTUB(time, 0xffe9c3f8)
// ALT: NHSTUB(time, 0xffe9c3f8) // 25/0
NHSTUB(tolower, 0xffe9704c)
NHSTUB(toupper, 0xffe9705c)
NHSTUB(utime, 0xffe9d014)
// ALT: NHSTUB(utime, 0xffe9d014) // 26/0
NHSTUB(vsprintf, 0xffe9e7d8)
NHSTUB(write, 0xffe9fb00)
