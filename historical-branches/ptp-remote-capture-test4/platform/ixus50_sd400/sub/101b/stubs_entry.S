// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Best match: 79%
NHSTUB(AllocateMemory, 0xff811ba0)
NHSTUB(AllocateUncacheableMemory, 0xff8146a0)
// ERROR: Close is not found!
NHSTUB(CreatePhysicalVram, 0xff93d230)
NHSTUB(CreateTask, 0xff8221f4)
NHSTUB(CreateTaskStrict, 0xff8237bc)
NHSTUB(DeleteFile_Fut, 0xff86d8d0)
NHSTUB(DisableDispatch, 0xff821f64)
// ERROR: DisplayImagePhysicalScreen is not found!
// Best match: 52%
//NHSTUB(DoAFLock, 0xff9591d4) -- stubs_entry_2.S = 0xff958f4c
NHSTUB(EnableDispatch, 0xff821ff0)
// ERROR: EnterToCompensationEVF is not found!
NHSTUB(ExecuteEventProcedure, 0xff816944)
// Best match: 66%
//NHSTUB(ExitFromCompensationEVF, 0xff95bb48) -- stubs_entry_2.S = 0xff95911c
// ALT: NHSTUB(ExitFromCompensationEVF, 0xff95bb7c) // 20/10
// ALT: NHSTUB(ExitFromCompensationEVF, 0xff95bbb0) // 20/10
// ALT: NHSTUB(ExitFromCompensationEVF, 0xff95bbe4) // 20/10
// ALT: NHSTUB(ExitFromCompensationEVF, 0xff95bc18) // 20/10
NHSTUB(ExitTask, 0xff8225b4)
NHSTUB(Fclose_Fut, 0xff86da10)
NHSTUB(Feof_Fut, 0xff86dc24)
NHSTUB(Fflush_Fut, 0xff86dc5c)
NHSTUB(Fgets_Fut, 0xff86db94)
NHSTUB(Fopen_Fut, 0xff86d9d4)
NHSTUB(Fread_Fut, 0xff86daf4)
// Best match: 66%
NHSTUB(FreeMemory, 0xff811bac)
NHSTUB(FreeUncacheableMemory, 0xff8146d4)
NHSTUB(Fseek_Fut, 0xff86dbdc)
NHSTUB(Fwrite_Fut, 0xff86db44)
// ERROR: GetBatteryTemperature is not found!
// ERROR: GetCCDTemperature is not found!
//NHSTUB(GetCurrentAvValue, 0xffa72a5c) -- stubs_entry_2.S = 0xffa516e0
NHSTUB(GetCurrentTargetDistance, 0xffa72a04)
// Best match: 84%
//NHSTUB(GetDrive_ClusterSize, 0xff874434) -- stubs_entry_2.S = 0xff8743bc
// Best match: 72%
//NHSTUB(GetDrive_FreeClusters, 0xff8743bc) -- stubs_entry_2.S = 0xff874434
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff8743bc) // 18/7
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff8743f8) // 18/7
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff8743f8) // 18/7
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff874434) // 18/7
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff874434) // 18/7
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff874470) // 18/7
// ALT: NHSTUB(GetDrive_FreeClusters, 0xff874470) // 18/7
// Best match: 80%
//NHSTUB(GetDrive_TotalClusters, 0xff874470) -- stubs_entry_2.S = 0xff8743f8
// Best match: 51%
//NHSTUB(GetFocusLensSubjectDistance, 0xffa58394) -- stubs_entry_2.S = 0xffa66f80
// ALT: NHSTUB(GetFocusLensSubjectDistance, 0xffa58394) // 16/15
// Best match: 88%
NHSTUB(GetFocusLensSubjectDistanceFromLens, 0xffa67500)
// Best match: 55%
//NHSTUB(GetOpticalTemperature, 0xffa68260) -- stubs_entry_2.S = 0xff82d72c
// Best match: 76%
NHSTUB(GetParameterData, 0xff976034)
// ALT: NHSTUB(GetParameterData, 0xff976034) // 23/7
// Best match: 71%
//NHSTUB(GetPropertyCase, 0xff825aa4) -- stubs_entry_2.S = 0xff825aa8
// Best match: 96%
NHSTUB(GetSystemTime, 0xff814a28)
// ALT: NHSTUB(GetSystemTime, 0xff814a28) // 26/1
// Best match: 72%
//NHSTUB(GetZoomLensCurrentPoint, 0xffa5ed34) -- stubs_entry_2.S = 0xffa593d4
// ALT: NHSTUB(GetZoomLensCurrentPoint, 0xffa5ed34) // 21/8
// Best match: 55%
//NHSTUB(GetZoomLensCurrentPosition, 0xffa5ed48) -- stubs_entry_2.S = 0xffa593e8
// ALT: NHSTUB(GetZoomLensCurrentPosition, 0xffa5ed48) // 16/13
NHSTUB(IsStrobeChargeCompleted, 0xff911ca8)
// Best match: 96%
NHSTUB(LockMainPower, 0xff97220c)
// ERROR: MakeAFScan is not found!
// Best match: 70%
NHSTUB(MakeDirectory, 0xff874dd8)
NHSTUB(MakeDirectory_Fut, 0xff86d95c)
// ERROR: Mount_FileSystem is not found!
// Best match: 96%
NHSTUB(MoveFocusLensToDistance, 0xffa72c94)
NHSTUB(MoveZoomLensWithPoint, 0xffa59250)
// ALT: NHSTUB(MoveZoomLensWithPoint, 0xffa59250) // 25/0
// ERROR: Open is not found!
NHSTUB(PT_PlaySound, 0xff96ab58)
// ERROR: PhySw_testgpio is not found!
NHSTUB(PostLogicalEventForNotPowerType, 0xff96eff8)
NHSTUB(PostLogicalEventToUI, 0xff96f084)
// ALT: NHSTUB(PostLogicalEventToUI, 0xff96f11c) // 25/0
NHSTUB(ProtectFile, 0xff86d03c)
// Best match: 92%
NHSTUB(PutInNdFilter, 0xffa70ad0)
// ALT: NHSTUB(PutInNdFilter, 0xffa70ad0) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa72604) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa72604) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa7264c) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa7264c) // 25/2
// Best match: 94%
NHSTUB(PutOutNdFilter, 0xffa70b18)
// ALT: NHSTUB(PutOutNdFilter, 0xffa70b18) // 16/1
// ERROR: Read is not found!
NHSTUB(RefreshPhysicalScreen, 0xff986030)
// Best match: 52%
//NHSTUB(Remove, 0xff8cf2f8) -- stubs_entry_2.S = 0xff874ba8
NHSTUB(RenameFile_Fut, 0xff86d850)
// Best match: 84%
//NHSTUB(Restart, 0xff823b8c) -- stubs_entry_2.S = 0xff823b90
// Best match: 95%
NHSTUB(SetAE_ShutterSpeed, 0xffa75b70)
// Best match: 96%
NHSTUB(SetAutoShutdownTime, 0xff972104)
// Best match: 73%
NHSTUB(SetCurrentCaptureModeType, 0xff99ab88)
// Best match: 58%
NHSTUB(SetFileAttributes, 0xff874cf4)
// Best match: 87%
NHSTUB(SetLogicalEventActive, 0xff9706ac)
// Best match: 66%
NHSTUB(SetParameterData, 0xff976030)
// ERROR: SetPropertyCase is not found!
NHSTUB(SleepTask, 0xff822054)
// ALT: NHSTUB(SleepTask, 0xff822108) // 31/0
NHSTUB(TakeSemaphore, 0xff8219c4)
NHSTUB(TurnOffBackLight, 0xff9aeb80)
NHSTUB(TurnOnBackLight, 0xff9aeb54)
// Best match: 71%
//NHSTUB(UnlockAF, 0xff959214) -- stubs_entry_2.S = 0xff958fc4
// Best match: 96%
NHSTUB(UnlockMainPower, 0xff9722c0)
NHSTUB(Unmount_FileSystem, 0xff873fa0)
// ERROR: UnsetZoomForMovie is not found!
// Best match: 96%
NHSTUB(UpdateMBROnFlash, 0xff8740f8)
// ERROR: VbattGet is not found!
// ERROR: Write is not found!
// ERROR: WriteSDCard is not found!
NHSTUB(_log, 0xffaa8174)
// ALT: NHSTUB(_log, 0xffaa8174) // 27/0
NHSTUB(_log10, 0xffaa881c)
// ALT: NHSTUB(_log10, 0xffaa881c) // 27/0
NHSTUB(_pow, 0xffaa8d0c)
// ALT: NHSTUB(_pow, 0xffaa8d0c) // 25/0
NHSTUB(_sqrt, 0xffaad058)
// ALT: NHSTUB(_sqrt, 0xffaad058) // 24/0
// Best match: 96%
NHSTUB(add_ptp_handler, 0xffa24fb8)
NHSTUB(apex2us, 0xff8b85c4)
NHSTUB(chdir, 0xffabc2b4)
// ALT: NHSTUB(chdir, 0xffabc2b4) // 27/0
NHSTUB(close, 0xffabbbf4)
NHSTUB(closedir, 0xffab7b94)
NHSTUB(errnoOfTaskGet, 0xffab8360)
// Best match: 92%
NHSTUB(exmem_alloc, 0xff812954)
// ERROR: free is not found!
NHSTUB(ints_disable, 0xff81e0ac)
NHSTUB(ints_enable, 0xff81e0b8)
NHSTUB(ioctl, 0xffabbd34)
NHSTUB(iosDevAdd, 0xffabce14)
NHSTUB(iosDevDelete, 0xffabcdec)
NHSTUB(iosDevFind, 0xffabcda0)
NHSTUB(iosDrvInstall, 0xffabd0d8)
NHSTUB(isalpha, 0xffab1b08)
NHSTUB(isdigit, 0xffab1b38)
NHSTUB(islower, 0xffab1b68)
NHSTUB(ispunct, 0xffab1b98)
NHSTUB(isspace, 0xffab1bb0)
NHSTUB(isupper, 0xffab1bc8)
NHSTUB(isxdigit, 0xffab1be0)
// ERROR: kbd_p1_f is not found!
// ERROR: kbd_p1_f_cont is not found!
// ERROR: kbd_p2_f is not found!
// Best match: 83%
NHSTUB(kbd_pwr_off, 0xff82a120)
// ALT: NHSTUB(kbd_pwr_off, 0xff82a13c) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff82a20c) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff82a228) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff82a370) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff82a38c) // 5/1
// Best match: 55%
NHSTUB(kbd_pwr_on, 0xff93bd0c)
// ALT: NHSTUB(kbd_pwr_on, 0xff93bd38) // 5/4
// ALT: NHSTUB(kbd_pwr_on, 0xffa5e7c0) // 5/4
// ALT: NHSTUB(kbd_pwr_on, 0xffa5e7ec) // 5/4
// ERROR: kbd_read_keys_r2 is not found!
// Best match: 93%
NHSTUB(localtime, 0xffab6388)
NHSTUB(lseek, 0xffabbd38)
// Best match: 53%
NHSTUB(malloc, 0xffabec34)
// ALT: NHSTUB(malloc, 0xffabec34) // 15/13
NHSTUB(memPartInfoGet, 0xffabf054)
NHSTUB(memchr, 0xffab5734)
NHSTUB(memcmp, 0xffab5768)
// ALT: NHSTUB(memcmp, 0xffac3b50) // 9/0
NHSTUB(memcpy, 0xffab57a4)
NHSTUB(memset, 0xffab581c)
// Best match: 61%
NHSTUB(mkdir, 0xff874d24)
// ALT: NHSTUB(mkdir, 0xff874de4) // 19/12
NHSTUB(mktime, 0xffab6550)
NHSTUB(open, 0xffabc238)
NHSTUB(opendir, 0xffab7bc8)
NHSTUB(qsort, 0xffab4fc8)
NHSTUB(rand, 0xffab4fec)
// ALT: NHSTUB(rand, 0xffab4fec) // 8/0
NHSTUB(read, 0xffabbc54)
NHSTUB(readdir, 0xffab7b60)
NHSTUB(rename, 0xffabc240)
// ALT: NHSTUB(rename, 0xffabc240) // 26/0
NHSTUB(rewinddir, 0xffab7b88)
NHSTUB(srand, 0xffab5010)
// ALT: NHSTUB(srand, 0xffab5010) // 4/0
NHSTUB(stat, 0xffab7c5c)
NHSTUB(strcat, 0xffab583c)
NHSTUB(strchr, 0xffab5868)
NHSTUB(strcmp, 0xffab588c)
NHSTUB(strcpy, 0xffab5a20)
NHSTUB(strftime, 0xffab70a8)
NHSTUB(strlen, 0xffab5b84)
NHSTUB(strncmp, 0xffab5be8)
NHSTUB(strncpy, 0xffab5c2c)
// ALT: NHSTUB(strncpy, 0xffab5c2c) // 24/0
NHSTUB(strpbrk, 0xffab5c74)
NHSTUB(strrchr, 0xffab5cb0)
// ALT: NHSTUB(strrchr, 0xffab5cb0) // 8/0
NHSTUB(strtol, 0xffab5404)
NHSTUB(strtoul, 0xffab55ac)
NHSTUB(taskCreateHookAdd, 0xffac22b4)
NHSTUB(taskDeleteHookAdd, 0xffac21f0)
// Best match: 82%
NHSTUB(taskIdListGet, 0xffac9d98)
NHSTUB(taskLock, 0xffaca454)
NHSTUB(taskName, 0xffac9c90)
NHSTUB(taskResume, 0xffaca074)
NHSTUB(taskSuspend, 0xffac9ea0)
NHSTUB(taskUnlock, 0xffaca4fc)
NHSTUB(time, 0xffab70d4)
// ALT: NHSTUB(time, 0xffab70d4) // 25/0
NHSTUB(tolower, 0xffab1bf8)
NHSTUB(toupper, 0xffab1c08)
NHSTUB(utime, 0xffab7cf0)
// ALT: NHSTUB(utime, 0xffab7cf0) // 26/0
NHSTUB(vsprintf, 0xffab94b4)
NHSTUB(write, 0xffabbcc4)
