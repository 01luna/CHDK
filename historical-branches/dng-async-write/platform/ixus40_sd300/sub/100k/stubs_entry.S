// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// ERROR: AllocateMemory is not found!
// Best match: 65%
NHSTUB(AllocateUncacheableMemory, 0xff815288)
// ERROR: Close is not found!
// ERROR: CreatePhysicalVram is not found!
NHSTUB(CreateTask, 0xff823784)
// ALT: NHSTUB(CreateTask, 0xfff142f0) // 31/0
// Best match: 53%
NHSTUB(CreateTaskStrict, 0xff8eaf8c)
// ALT: NHSTUB(CreateTaskStrict, 0xff8eafcc) // 7/6
// ALT: NHSTUB(CreateTaskStrict, 0xff8eb00c) // 7/6
// ALT: NHSTUB(CreateTaskStrict, 0xff8eb04c) // 7/6
NHSTUB(DeleteFile_Fut, 0xff8699b4)
// ALT: NHSTUB(DeleteFile_Fut, 0xfff17058) // 10/0
NHSTUB(DisableDispatch, 0xff8234f4)
// ALT: NHSTUB(DisableDispatch, 0xfff14060) // 19/0
// ERROR: DisplayImagePhysicalScreen is not found!
// Best match: 52%
//NHSTUB(DoAFLock, 0xff93e2c4) -- stubs_entry_2.S = 0xff93e07c
NHSTUB(EnableDispatch, 0xff823580)
// ALT: NHSTUB(EnableDispatch, 0xfff140ec) // 22/0
// ERROR: EnterToCompensationEVF is not found!
// ERROR: ExecuteEventProcedure is not found!
// ERROR: ExitFromCompensationEVF is not found!
NHSTUB(ExitTask, 0xff823b44)
// ALT: NHSTUB(ExitTask, 0xfff146b0) // 31/0
NHSTUB(Fclose_Fut, 0xff869af4)
// Best match: 72%
//NHSTUB(Feof_Fut, 0xfff17328) -- stubs_entry_2.S = 0xff869d08
NHSTUB(Fflush_Fut, 0xff869d40)
NHSTUB(Fgets_Fut, 0xff869c78)
// ALT: NHSTUB(Fgets_Fut, 0xfff1729c) // 15/0
NHSTUB(Fopen_Fut, 0xff869ab8)
NHSTUB(Fread_Fut, 0xff869bd8)
// ALT: NHSTUB(Fread_Fut, 0xfff171fc) // 25/0
// ERROR: FreeMemory is not found!
// ERROR: FreeUncacheableMemory is not found!
NHSTUB(Fseek_Fut, 0xff869cc0)
// ALT: NHSTUB(Fseek_Fut, 0xfff172e4) // 24/0
NHSTUB(Fwrite_Fut, 0xff869c28)
// ALT: NHSTUB(Fwrite_Fut, 0xfff1724c) // 26/0
// ERROR: GetBatteryTemperature is not found!
// ERROR: GetCCDTemperature is not found!
NHSTUB(GetCurrentAvValue, 0xffa6aeb4)
NHSTUB(GetCurrentTargetDistance, 0xffa6ae5c)
// ERROR: GetDrive_ClusterSize is not found!
// ERROR: GetDrive_FreeClusters is not found!
// ERROR: GetDrive_TotalClusters is not found!
// ERROR: GetFocusLensSubjectDistance is not found!
// ERROR: GetFocusLensSubjectDistanceFromLens is not found!
// Best match: 51%
NHSTUB(GetOpticalTemperature, 0xffa488d8)
// ALT: NHSTUB(GetOpticalTemperature, 0xffa518ec) // 15/14
// ALT: NHSTUB(GetOpticalTemperature, 0xffa57c7c) // 15/14
// ALT: NHSTUB(GetOpticalTemperature, 0xffa57c90) // 15/14
// ALT: NHSTUB(GetOpticalTemperature, 0xffa57ca4) // 15/14
// ALT: NHSTUB(GetOpticalTemperature, 0xffa57cb8) // 15/14
// ALT: NHSTUB(GetOpticalTemperature, 0xffa57ccc) // 15/14
// ALT: NHSTUB(GetOpticalTemperature, 0xffa60dec) // 15/14
// ERROR: GetParameterData is not found!
// ERROR: GetPropertyCase is not found!
// Best match: 96%
NHSTUB(GetSystemTime, 0xff815638)
// ALT: NHSTUB(GetSystemTime, 0xff815638) // 26/1
// ALT: NHSTUB(GetSystemTime, 0xfff05c38) // 26/1
// ALT: NHSTUB(GetSystemTime, 0xfff05c38) // 26/1
// Best match: 68%
//NHSTUB(GetZoomLensCurrentPoint, 0xffa57ccc) -- stubs_entry_2.S = 0xffa51244
// ALT: NHSTUB(GetZoomLensCurrentPoint, 0xffa57ccc) // 20/9
// Best match: 51%
//NHSTUB(GetZoomLensCurrentPosition, 0xffa57ce0) -- stubs_entry_2.S = 0xffa52180
// ALT: NHSTUB(GetZoomLensCurrentPosition, 0xffa57ce0) // 15/14
// ERROR: IsStrobeChargeCompleted is not found!
// Best match: 61%
//NHSTUB(LockMainPower, 0xff9561a0) -- stubs_entry_2.S = 0xff95619c
// ERROR: MakeAFScan is not found!
// Best match: 70%
NHSTUB(MakeDirectory, 0xff8718c4)
// ALT: NHSTUB(MakeDirectory, 0xfff1bd30) // 22/9
NHSTUB(MakeDirectory_Fut, 0xff869a40)
// ALT: NHSTUB(MakeDirectory_Fut, 0xfff170e4) // 25/0
// ERROR: Mount_FileSystem is not found!
// Best match: 96%
NHSTUB(MoveFocusLensToDistance, 0xffa6b0ec)
// Best match: 52%
NHSTUB(MoveZoomLensWithPoint, 0xffa52078)
// ALT: NHSTUB(MoveZoomLensWithPoint, 0xffa52078) // 13/12
// ERROR: Open is not found!
// ERROR: PT_PlaySound is not found!
// ERROR: PhySw_testgpio is not found!
// Best match: 95%
NHSTUB(PostLogicalEventForNotPowerType, 0xff953a4c)
NHSTUB(PostLogicalEventToUI, 0xff953ad8)
// ALT: NHSTUB(PostLogicalEventToUI, 0xff953b70) // 25/0
NHSTUB(ProtectFile, 0xff8691bc)
// ALT: NHSTUB(ProtectFile, 0xfff16900) // 23/0
// Best match: 92%
NHSTUB(PutInNdFilter, 0xffa693e0)
// ALT: NHSTUB(PutInNdFilter, 0xffa693e0) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa6aa90) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa6aa90) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa6aad8) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa6aad8) // 25/2
// Best match: 94%
NHSTUB(PutOutNdFilter, 0xffa69428)
// ALT: NHSTUB(PutOutNdFilter, 0xffa69428) // 16/1
// ERROR: Read is not found!
// Best match: 74%
NHSTUB(RefreshPhysicalScreen, 0xff96c550)
// Best match: 52%
//NHSTUB(Remove, 0xff8c0700) -- stubs_entry_2.S = 0xff871694
NHSTUB(RenameFile_Fut, 0xff869934)
// ALT: NHSTUB(RenameFile_Fut, 0xfff16fd8) // 27/0
// Best match: 80%
//NHSTUB(Restart, 0xff824f50) -- stubs_entry_2.S = 0xff824f58
// Best match: 95%
NHSTUB(SetAE_ShutterSpeed, 0xffa6d470)
// ERROR: SetAutoShutdownTime is not found!
// ERROR: SetCurrentCaptureModeType is not found!
// Best match: 58%
NHSTUB(SetFileAttributes, 0xff8717e0)
// ALT: NHSTUB(SetFileAttributes, 0xfff1bc4c) // 17/12
// Best match: 62%
//NHSTUB(SetLogicalEventActive, 0xff955bbc) -- stubs_entry_2.S = 0x00000000
// ERROR: SetParameterData is not found!
// ERROR: SetPropertyCase is not found!
NHSTUB(SleepTask, 0xff8235e4)
// ALT: NHSTUB(SleepTask, 0xff823698) // 31/0
// ALT: NHSTUB(SleepTask, 0xfff14150) // 31/0
// ALT: NHSTUB(SleepTask, 0xfff14204) // 31/0
NHSTUB(TakeSemaphore, 0xff822f5c)
// ALT: NHSTUB(TakeSemaphore, 0xfff13ac8) // 31/0
NHSTUB(TurnOffBackLight, 0xff99e594)
NHSTUB(TurnOnBackLight, 0xff99e568)
// Best match: 71%
//NHSTUB(UnlockAF, 0xff93e304) -- stubs_entry_2.S = 0xff93e0dc
// Best match: 65%
//NHSTUB(UnlockMainPower, 0xff95625c) -- stubs_entry_2.S = 0xff956258
NHSTUB(Unmount_FileSystem, 0xff870344)
// ALT: NHSTUB(Unmount_FileSystem, 0xfff1aab4) // 18/0
// ERROR: UnsetZoomForMovie is not found!
// Best match: 96%
NHSTUB(UpdateMBROnFlash, 0xff8704d0)
// ERROR: VbattGet is not found!
// ERROR: Write is not found!
// ERROR: WriteSDCard is not found!
NHSTUB(_log, 0xffaaec08)
// ALT: NHSTUB(_log, 0xffaaec08) // 27/0
// ALT: NHSTUB(_log, 0xfff404cc) // 27/0
// ALT: NHSTUB(_log, 0xfff404cc) // 27/0
NHSTUB(_log10, 0xffaaf2b0)
// ALT: NHSTUB(_log10, 0xffaaf2b0) // 27/0
// ALT: NHSTUB(_log10, 0xfff40b74) // 27/0
// ALT: NHSTUB(_log10, 0xfff40b74) // 27/0
NHSTUB(_pow, 0xffaaf7a0)
// ALT: NHSTUB(_pow, 0xffaaf7a0) // 25/0
// ALT: NHSTUB(_pow, 0xfff41064) // 25/0
// ALT: NHSTUB(_pow, 0xfff41064) // 25/0
NHSTUB(_sqrt, 0xffab3aec)
// ALT: NHSTUB(_sqrt, 0xffab3aec) // 24/0
// ALT: NHSTUB(_sqrt, 0xfff45834) // 24/0
// ALT: NHSTUB(_sqrt, 0xfff45834) // 24/0
// Best match: 96%
NHSTUB(add_ptp_handler, 0xffa13b10)
NHSTUB(apex2us, 0xff8aa1c4)
NHSTUB(chdir, 0xffac2f74)
// ALT: NHSTUB(chdir, 0xffac2f74) // 27/0
// ALT: NHSTUB(chdir, 0xfff56ffc) // 27/0
// ALT: NHSTUB(chdir, 0xfff56ffc) // 27/0
NHSTUB(close, 0xffac28b4)
// ALT: NHSTUB(close, 0xfff5693c) // 29/0
NHSTUB(closedir, 0xffabe6e8)
// ALT: NHSTUB(closedir, 0xfff52770) // 26/0
NHSTUB(errnoOfTaskGet, 0xffabeeb4)
// ALT: NHSTUB(errnoOfTaskGet, 0xfff52f3c) // 15/0
// Best match: 92%
NHSTUB(exmem_alloc, 0xff813a1c)
// ALT: NHSTUB(exmem_alloc, 0xfff164cc) // 23/2
// ERROR: free is not found!
NHSTUB(ints_disable, 0xff81f438)
// ALT: NHSTUB(ints_disable, 0xfff0f3a4) // 15/0
NHSTUB(ints_enable, 0xff81f444)
// ALT: NHSTUB(ints_enable, 0xfff0f3b0) // 12/0
NHSTUB(ioctl, 0xffac29f4)
// ALT: NHSTUB(ioctl, 0xfff56a7c) // 28/0
NHSTUB(iosDevAdd, 0xffac3ad4)
// ALT: NHSTUB(iosDevAdd, 0xfff57b5c) // 28/0
NHSTUB(iosDevDelete, 0xffac3aac)
// ALT: NHSTUB(iosDevDelete, 0xfff57b34) // 28/0
NHSTUB(iosDevFind, 0xffac3a60)
// ALT: NHSTUB(iosDevFind, 0xfff57ae8) // 27/0
NHSTUB(iosDrvInstall, 0xffac3d98)
// ALT: NHSTUB(iosDrvInstall, 0xfff57e20) // 30/0
NHSTUB(isalpha, 0xffab859c)
// ALT: NHSTUB(isalpha, 0xfff4c624) // 4/0
NHSTUB(isdigit, 0xffab85cc)
// ALT: NHSTUB(isdigit, 0xfff4c654) // 4/0
NHSTUB(islower, 0xffab85fc)
// ALT: NHSTUB(islower, 0xfff4c684) // 4/0
NHSTUB(ispunct, 0xffab862c)
// ALT: NHSTUB(ispunct, 0xfff4c6b4) // 4/0
NHSTUB(isspace, 0xffab8644)
// ALT: NHSTUB(isspace, 0xfff4c6cc) // 4/0
NHSTUB(isupper, 0xffab865c)
// ALT: NHSTUB(isupper, 0xfff4c6e4) // 4/0
NHSTUB(isxdigit, 0xffab8674)
// ALT: NHSTUB(isxdigit, 0xfff4c6fc) // 4/0
// ERROR: kbd_p1_f is not found!
// ERROR: kbd_p1_f_cont is not found!
// ERROR: kbd_p2_f is not found!
// WARNING: too many matches for kbd_pwr_off!
// WARNING: too many matches for kbd_pwr_off!
// Best match: 83%
NHSTUB(kbd_pwr_off, 0xffa417b0)
// ALT: NHSTUB(kbd_pwr_off, 0xffa41bf0) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffa41c0c) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xfff30af0) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xfff30b0c) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xfff30ff8) // 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xfff31014) // 5/1
// Best match: 55%
NHSTUB(kbd_pwr_on, 0xffa575d0)
// ALT: NHSTUB(kbd_pwr_on, 0xffa575fc) // 5/4
// ERROR: kbd_read_keys_r2 is not found!
// Best match: 93%
NHSTUB(localtime, 0xffabcedc)
// ALT: NHSTUB(localtime, 0xfff50f64) // 27/2
NHSTUB(lseek, 0xffac29f8)
// ALT: NHSTUB(lseek, 0xfff56a80) // 28/0
// Best match: 53%
NHSTUB(malloc, 0xffac58f4)
// ALT: NHSTUB(malloc, 0xffac58f4) // 15/13
// ALT: NHSTUB(malloc, 0xfff5997c) // 15/13
// ALT: NHSTUB(malloc, 0xfff5997c) // 15/13
// ERROR: memPartInfoGet is not found!
NHSTUB(memchr, 0xffabc288)
// ALT: NHSTUB(memchr, 0xfff50310) // 19/0
NHSTUB(memcmp, 0xffabc2bc)
// ALT: NHSTUB(memcmp, 0xffaca864) // 9/0
// ALT: NHSTUB(memcmp, 0xfff50344) // 9/0
// ALT: NHSTUB(memcmp, 0xfff674cc) // 9/0
NHSTUB(memcpy, 0xffabc2f8)
// ALT: NHSTUB(memcpy, 0xfff50380) // 23/0
NHSTUB(memset, 0xffabc370)
// ALT: NHSTUB(memset, 0xfff503f8) // 14/0
// Best match: 61%
NHSTUB(mkdir, 0xff871810)
// ALT: NHSTUB(mkdir, 0xff8718d0) // 19/12
// ALT: NHSTUB(mkdir, 0xfff1bc7c) // 19/12
// ALT: NHSTUB(mkdir, 0xfff1bd3c) // 19/12
NHSTUB(mktime, 0xffabd0a4)
// ALT: NHSTUB(mktime, 0xfff5112c) // 28/0
NHSTUB(open, 0xffac2ef8)
// ALT: NHSTUB(open, 0xfff56f80) // 26/0
NHSTUB(opendir, 0xffabe71c)
// ALT: NHSTUB(opendir, 0xfff527a4) // 29/0
NHSTUB(qsort, 0xffabbb1c)
// ALT: NHSTUB(qsort, 0xfff4fba4) // 13/0
NHSTUB(rand, 0xffabbb40)
// ALT: NHSTUB(rand, 0xffabbb40) // 8/0
// ALT: NHSTUB(rand, 0xfff4fbc8) // 8/0
// ALT: NHSTUB(rand, 0xfff4fbc8) // 8/0
NHSTUB(read, 0xffac2914)
// ALT: NHSTUB(read, 0xfff5699c) // 29/0
NHSTUB(readdir, 0xffabe6b4)
// ALT: NHSTUB(readdir, 0xfff5273c) // 11/0
NHSTUB(rename, 0xffac2f00)
// ALT: NHSTUB(rename, 0xffac2f00) // 26/0
// ALT: NHSTUB(rename, 0xfff56f88) // 26/0
// ALT: NHSTUB(rename, 0xfff56f88) // 26/0
NHSTUB(rewinddir, 0xffabe6dc)
// ALT: NHSTUB(rewinddir, 0xfff52764) // 3/0
NHSTUB(srand, 0xffabbb64)
// ALT: NHSTUB(srand, 0xffabbb64) // 4/0
// ALT: NHSTUB(srand, 0xfff4fbec) // 4/0
// ALT: NHSTUB(srand, 0xfff4fbec) // 4/0
NHSTUB(stat, 0xffabe7b0)
// ALT: NHSTUB(stat, 0xfff52838) // 24/0
NHSTUB(strcat, 0xffabc390)
// ALT: NHSTUB(strcat, 0xfff50418) // 8/0
NHSTUB(strchr, 0xffabc3bc)
// ALT: NHSTUB(strchr, 0xfff50444) // 7/0
NHSTUB(strcmp, 0xffabc3e0)
// ALT: NHSTUB(strcmp, 0xfff50468) // 6/0
NHSTUB(strcpy, 0xffabc574)
// ALT: NHSTUB(strcpy, 0xfff505fc) // 5/0
NHSTUB(strftime, 0xffabdbfc)
// ALT: NHSTUB(strftime, 0xfff51c84) // 6/0
NHSTUB(strlen, 0xffabc6d8)
// ALT: NHSTUB(strlen, 0xfff50760) // 5/0
NHSTUB(strncmp, 0xffabc73c)
// ALT: NHSTUB(strncmp, 0xfff507c4) // 11/0
NHSTUB(strncpy, 0xffabc780)
// ALT: NHSTUB(strncpy, 0xffabc780) // 24/0
// ALT: NHSTUB(strncpy, 0xfff50808) // 24/0
// ALT: NHSTUB(strncpy, 0xfff50808) // 24/0
NHSTUB(strpbrk, 0xffabc7c8)
// ALT: NHSTUB(strpbrk, 0xfff50850) // 19/0
NHSTUB(strrchr, 0xffabc804)
// ALT: NHSTUB(strrchr, 0xffabc804) // 8/0
// ALT: NHSTUB(strrchr, 0xfff5088c) // 8/0
// ALT: NHSTUB(strrchr, 0xfff5088c) // 8/0
NHSTUB(strtol, 0xffabbf58)
// ALT: NHSTUB(strtol, 0xfff4ffe0) // 26/0
NHSTUB(strtoul, 0xffabc100)
// ALT: NHSTUB(strtoul, 0xfff50188) // 26/0
NHSTUB(taskCreateHookAdd, 0xffac8a40)
// ALT: NHSTUB(taskCreateHookAdd, 0xfff5df1c) // 29/0
NHSTUB(taskDeleteHookAdd, 0xffac897c)
// ALT: NHSTUB(taskDeleteHookAdd, 0xfff5de58) // 28/0
// Best match: 82%
NHSTUB(taskIdListGet, 0xffad0ba0)
// ALT: NHSTUB(taskIdListGet, 0xfff73b14) // 24/5
NHSTUB(taskLock, 0xffad125c)
// ALT: NHSTUB(taskLock, 0xfff741d0) // 31/0
NHSTUB(taskName, 0xffad0a98)
// ALT: NHSTUB(taskName, 0xfff73a0c) // 25/0
NHSTUB(taskResume, 0xffad0e7c)
// ALT: NHSTUB(taskResume, 0xfff73df0) // 31/0
NHSTUB(taskSuspend, 0xffad0ca8)
// ALT: NHSTUB(taskSuspend, 0xfff73c1c) // 31/0
NHSTUB(taskUnlock, 0xffad1304)
// ALT: NHSTUB(taskUnlock, 0xfff74278) // 31/0
//NHSTUB(time, 0xffabdc28) -- stubs_entry_2.S = 0x00000000
// ALT: NHSTUB(time, 0xffabdc28) // 25/0
// ALT: NHSTUB(time, 0xfff51cb0) // 25/0
// ALT: NHSTUB(time, 0xfff51cb0) // 25/0
NHSTUB(tolower, 0xffab868c)
// ALT: NHSTUB(tolower, 0xfff4c714) // 4/0
NHSTUB(toupper, 0xffab869c)
// ALT: NHSTUB(toupper, 0xfff4c724) // 4/0
NHSTUB(utime, 0xffabe844)
// ALT: NHSTUB(utime, 0xffabe844) // 26/0
// ALT: NHSTUB(utime, 0xfff528cc) // 26/0
// ALT: NHSTUB(utime, 0xfff528cc) // 26/0
NHSTUB(vsprintf, 0xffac0008)
// ALT: NHSTUB(vsprintf, 0xfff54090) // 13/0
NHSTUB(write, 0xffac2984)
// ALT: NHSTUB(write, 0xfff56a0c) // 29/0
