// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Best match: 79%
NHSTUB(AllocateMemory, 0xff811ba0)
NHSTUB(AllocateUncacheableMemory, 0xff814d2c)
NHSTUB(Close, 0xff86f788)
NHSTUB(CreatePhysicalVram, 0xff924abc)
NHSTUB(CreateTask, 0xff822274)
NHSTUB(CreateTaskStrict, 0xff823678)
NHSTUB(DeleteFile_Fut, 0xff86866c)
NHSTUB(DisableDispatch, 0xff821fe4)
NHSTUB(DisplayImagePhysicalScreen, 0xff923e84)
NHSTUB(DoAFLock, 0xff94aacc)
NHSTUB(EnableDispatch, 0xff822070)
// Best match: 64%
//NHSTUB(EnterToCompensationEVF, 0xff94c928) -- stubs_entry_2.S = 0x00000000
NHSTUB(ExecuteEventProcedure, 0xff816c44)
// Best match: 73%
//NHSTUB(ExitFromCompensationEVF, 0xff94c9f4) -- stubs_entry_2.S = 0x00000000
NHSTUB(ExitTask, 0xff822634)
NHSTUB(Fclose_Fut, 0xff8687ac)
NHSTUB(Feof_Fut, 0xff8689c0)
NHSTUB(Fflush_Fut, 0xff8689f8)
NHSTUB(Fgets_Fut, 0xff868930)
NHSTUB(Fopen_Fut, 0xff868770)
NHSTUB(Fread_Fut, 0xff868890)
// Best match: 66%
NHSTUB(FreeMemory, 0xff811bac)
NHSTUB(FreeUncacheableMemory, 0xff814d60)
NHSTUB(Fseek_Fut, 0xff868978)
NHSTUB(Fwrite_Fut, 0xff8688e0)
// Best match: 89%
NHSTUB(GetBatteryTemperature, 0xff82d5ac)
// Best match: 89%
NHSTUB(GetCCDTemperature, 0xff82d598)
NHSTUB(GetCurrentAvValue, 0xffa8adcc)
NHSTUB(GetCurrentTargetDistance, 0xffa8ad74)
// Best match: 92%
NHSTUB(GetDrive_ClusterSize, 0xff86ef64)
// Best match: 92%
NHSTUB(GetDrive_FreeClusters, 0xff86efdc)
// Best match: 92%
NHSTUB(GetDrive_TotalClusters, 0xff86efa0)
// Best match: 90%
NHSTUB(GetFocusLensSubjectDistance, 0xffa7e3f4)
// ALT: NHSTUB(GetFocusLensSubjectDistance, 0xffa7e3f4) // 28/3
// Best match: 52%
NHSTUB(GetFocusLensSubjectDistanceFromLens, 0xffa7e994)
// Best match: 89%
NHSTUB(GetOpticalTemperature, 0xff82d584)
NHSTUB(GetParameterData, 0xff964cd8)
NHSTUB(GetPropertyCase, 0xff825530)
// Best match: 96%
NHSTUB(GetSystemTime, 0xff814f64)
// ALT: NHSTUB(GetSystemTime, 0xff814f64) // 26/1
// Best match: 93%
NHSTUB(GetZoomLensCurrentPoint, 0xffa6f178)
// ALT: NHSTUB(GetZoomLensCurrentPoint, 0xffa6f178) // 27/2
// Best match: 93%
NHSTUB(GetZoomLensCurrentPosition, 0xffa6f18c)
// ALT: NHSTUB(GetZoomLensCurrentPosition, 0xffa6f18c) // 27/2
NHSTUB(IsStrobeChargeCompleted, 0xff8fe628)
// Best match: 96%
NHSTUB(LockMainPower, 0xff9601ac)
// Best match: 89%
NHSTUB(MakeAFScan, 0xff94ef28)
NHSTUB(MakeDirectory, 0xff86fa60)
NHSTUB(MakeDirectory_Fut, 0xff8686f8)
// Best match: 90%
NHSTUB(Mount_FileSystem, 0xff86ea3c)
// ALT: NHSTUB(Mount_FileSystem, 0xff86ea3c) // 27/3
// Best match: 96%
NHSTUB(MoveFocusLensToDistance, 0xffa8b004)
NHSTUB(MoveZoomLensWithPoint, 0xffa6f058)
// ALT: NHSTUB(MoveZoomLensWithPoint, 0xffa6f058) // 25/0
NHSTUB(Open, 0xff86f760)
NHSTUB(PT_PlaySound, 0xff957a90)
// Best match: 96%
NHSTUB(PhySw_testgpio, 0xff8288c0)
NHSTUB(PostLogicalEventForNotPowerType, 0xff95c1f4)
NHSTUB(PostLogicalEventToUI, 0xff95c280)
// ALT: NHSTUB(PostLogicalEventToUI, 0xff95c318) // 25/0
NHSTUB(ProtectFile, 0xff867dd8)
// Best match: 92%
NHSTUB(PutInNdFilter, 0xffa88dec)
// ALT: NHSTUB(PutInNdFilter, 0xffa88dec) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa8a978) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa8a978) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa8a9c0) // 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffa8a9c0) // 25/2
// Best match: 94%
NHSTUB(PutOutNdFilter, 0xffa88e34)
// ALT: NHSTUB(PutOutNdFilter, 0xffa88e34) // 16/1
NHSTUB(Read, 0xff86f81c)
NHSTUB(RefreshPhysicalScreen, 0xff975860)
NHSTUB(Remove, 0xff86f7a8)
NHSTUB(RenameFile_Fut, 0xff8685ec)
NHSTUB(Restart, 0xff823ac0)
// Best match: 95%
NHSTUB(SetAE_ShutterSpeed, 0xffa8e0b8)
// Best match: 96%
NHSTUB(SetAutoShutdownTime, 0xff9600a4)
NHSTUB(SetCurrentCaptureModeType, 0xff98ca70)
NHSTUB(SetFileAttributes, 0xff86f974)
// Best match: 87%
NHSTUB(SetLogicalEventActive, 0xff95e250)
NHSTUB(SetParameterData, 0xff964bf8)
NHSTUB(SetPropertyCase, 0xff825414)
NHSTUB(SleepTask, 0xff8220d4)
// ALT: NHSTUB(SleepTask, 0xff822188) // 31/0
NHSTUB(TakeSemaphore, 0xff821a90)
NHSTUB(TurnOffBackLight, 0xff9a2d8c)
NHSTUB(TurnOnBackLight, 0xff9a2d60)
NHSTUB(UnlockAF, 0xff94ab0c)
// Best match: 96%
NHSTUB(UnlockMainPower, 0xff960260)
NHSTUB(Unmount_FileSystem, 0xff86eb44)
NHSTUB(UnsetZoomForMovie, 0xff99764c)
NHSTUB(UpdateMBROnFlash, 0xff86ec9c)
// ERROR: VbattGet is not found!
NHSTUB(Write, 0xff86f828)
// Best match: 93%
//NHSTUB(WriteSDCard, 0xff87e7f4) -- stubs_entry_2.S = 0xff87e9cc
// ALT: NHSTUB(WriteSDCard, 0xff87e9cc) // 29/2
NHSTUB(_log, 0xffabfbb4)
// ALT: NHSTUB(_log, 0xffabfbb4) // 27/0
NHSTUB(_log10, 0xffac025c)
// ALT: NHSTUB(_log10, 0xffac025c) // 27/0
NHSTUB(_pow, 0xffac074c)
// ALT: NHSTUB(_pow, 0xffac074c) // 25/0
NHSTUB(_sqrt, 0xffac4a98)
// ALT: NHSTUB(_sqrt, 0xffac4a98) // 24/0
// Best match: 96%
NHSTUB(add_ptp_handler, 0xffa3d17c)
NHSTUB(apex2us, 0xff8ac734)
NHSTUB(chdir, 0xffad3cf4)
// ALT: NHSTUB(chdir, 0xffad3cf4) // 27/0
NHSTUB(close, 0xffad3634)
NHSTUB(closedir, 0xffacf5d4)
NHSTUB(errnoOfTaskGet, 0xffacfda0)
NHSTUB(exmem_alloc, 0xff81295c)
// ERROR: free is not found!
NHSTUB(ints_disable, 0xff81e34c)
NHSTUB(ints_enable, 0xff81e358)
NHSTUB(ioctl, 0xffad3774)
NHSTUB(iosDevAdd, 0xffad4854)
NHSTUB(iosDevDelete, 0xffad482c)
NHSTUB(iosDevFind, 0xffad47e0)
NHSTUB(iosDrvInstall, 0xffad4b18)
NHSTUB(isalpha, 0xffac9548)
NHSTUB(isdigit, 0xffac9578)
NHSTUB(islower, 0xffac95a8)
NHSTUB(ispunct, 0xffac95d8)
NHSTUB(isspace, 0xffac95f0)
NHSTUB(isupper, 0xffac9608)
NHSTUB(isxdigit, 0xffac9620)
NHSTUB(kbd_p1_f, 0xff82752c)
NHSTUB(kbd_p1_f_cont, 0xff827538)
NHSTUB(kbd_p2_f, 0xff827910)
NHSTUB(kbd_pwr_off, 0xff828888)
// ALT: NHSTUB(kbd_pwr_off, 0xff8288a4) // 6/0
// Best match: 55%
NHSTUB(kbd_pwr_on, 0xff82879c)
// ALT: NHSTUB(kbd_pwr_on, 0xff922fa4) // 5/4
// ALT: NHSTUB(kbd_pwr_on, 0xff922fd0) // 5/4
// ALT: NHSTUB(kbd_pwr_on, 0xff92310c) // 5/4
// ALT: NHSTUB(kbd_pwr_on, 0xffa749dc) // 5/4
// ALT: NHSTUB(kbd_pwr_on, 0xffa74a08) // 5/4
NHSTUB(kbd_read_keys_r2, 0xff828320)
// Best match: 93%
NHSTUB(localtime, 0xffacddc8)
NHSTUB(lseek, 0xffad3778)
// Best match: 53%
NHSTUB(malloc, 0xffad6674)
// ALT: NHSTUB(malloc, 0xffad6674) // 15/13
NHSTUB(memPartInfoGet, 0xffad6a94)
NHSTUB(memchr, 0xffacd174)
NHSTUB(memcmp, 0xffacd1a8)
// ALT: NHSTUB(memcmp, 0xffadb590) // 9/0
NHSTUB(memcpy, 0xffacd1e4)
NHSTUB(memset, 0xffacd25c)
NHSTUB(mkdir, 0xff86f9a4)
NHSTUB(mktime, 0xffacdf90)
NHSTUB(open, 0xffad3c78)
NHSTUB(opendir, 0xffacf608)
NHSTUB(qsort, 0xffacca08)
NHSTUB(rand, 0xffacca2c)
// ALT: NHSTUB(rand, 0xffacca2c) // 8/0
NHSTUB(read, 0xffad3694)
NHSTUB(readdir, 0xffacf5a0)
NHSTUB(rename, 0xffad3c80)
// ALT: NHSTUB(rename, 0xffad3c80) // 26/0
NHSTUB(rewinddir, 0xffacf5c8)
NHSTUB(srand, 0xffacca50)
// ALT: NHSTUB(srand, 0xffacca50) // 4/0
NHSTUB(stat, 0xffacf69c)
NHSTUB(strcat, 0xffacd27c)
NHSTUB(strchr, 0xffacd2a8)
NHSTUB(strcmp, 0xffacd2cc)
NHSTUB(strcpy, 0xffacd460)
NHSTUB(strftime, 0xffaceae8)
NHSTUB(strlen, 0xffacd5c4)
NHSTUB(strncmp, 0xffacd628)
NHSTUB(strncpy, 0xffacd66c)
// ALT: NHSTUB(strncpy, 0xffacd66c) // 24/0
NHSTUB(strpbrk, 0xffacd6b4)
NHSTUB(strrchr, 0xffacd6f0)
// ALT: NHSTUB(strrchr, 0xffacd6f0) // 8/0
NHSTUB(strtol, 0xffacce44)
NHSTUB(strtoul, 0xffaccfec)
NHSTUB(taskCreateHookAdd, 0xffad9cf4)
NHSTUB(taskDeleteHookAdd, 0xffad9c30)
// Best match: 82%
NHSTUB(taskIdListGet, 0xffae42b8)
NHSTUB(taskLock, 0xffae4974)
NHSTUB(taskName, 0xffae41b0)
NHSTUB(taskResume, 0xffae4594)
NHSTUB(taskSuspend, 0xffae43c0)
NHSTUB(taskUnlock, 0xffae4a1c)
NHSTUB(time, 0xffaceb14)
// ALT: NHSTUB(time, 0xffaceb14) // 25/0
NHSTUB(tolower, 0xffac9638)
NHSTUB(toupper, 0xffac9648)
NHSTUB(utime, 0xffacf730)
// ALT: NHSTUB(utime, 0xffacf730) // 26/0
NHSTUB(vsprintf, 0xffad0ef4)
NHSTUB(write, 0xffad3704)
