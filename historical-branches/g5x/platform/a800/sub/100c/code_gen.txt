//-------------------------- BOOT.C ---------------------------------------------------------------

FILE boot.c

>>> file=../boot_hdr.c

//////////////////////////////////////////////////////////////
// boot
//////////////////////////////////////////////////////////////
FUNC start=0xFFC0000C name=boot length=86
ASM
FW $-1
PATCHSUB ref=0
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// boot -> ref=0
//////////////////////////////////////////////////////////////
FUNC ref=0 length=27
>>>

    //http://chdk.setepontos.com/index.php/topic,4194.0.html
    *(int*)0x1938=(int)taskHook;
    *(int*)0x193C=(int)taskHook;

    // Replacement of sub_FFC4383C for correct power-on.
	// A800 ffc4383c <= ffc2396c(Next to NotifyMask) <= ffc10730. Associated Modification in taskcreate_Startup_my
    // (short press = playback mode, long press = record mode)
	*(int*)(0x20FC)= (*(int*)0xC022005C) & 1 ? 0x200000 : 0x100000; 

<<<
ASM
FW $-1
PATCHSUB ref=0
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// boot -> ref=0 -> ref=0
//////////////////////////////////////////////////////////////
FUNC ref=0
ASM
FW 7
>>>

#if defined(CHDK_NOT_IN_CANON_HEAP) // use original heap offset if CHDK is loaded in high memory
<<<
FW
>>>
#else
"    LDR     R0, =new_sa\n"   // otherwise use patched value
"    LDR     R0, [R0]\n"      //
#endif

<<<
FW 30
PATCHSUB ref=0
FW $
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// boot -> ref=0 -> ref=0 -> ref=0
//////////////////////////////////////////////////////////////
FUNC ref=0
ASM
FW $-1
PATCHSUB ref=0 name=taskcreate_Startup_my
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// taskcreate_Startup_my
//////////////////////////////////////////////////////////////
FUNC ref=0
ASM
FW 32
REM  "StartUp mode detection. We must remove this for power-on mode handling to work"
FW 8
PATCHSUB ref=0 name=task_Startup_my
FW $
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// task_Startup_my
//////////////////////////////////////////////////////////////
FUNC ref=0 length=23
ASM
FW 6
REM "start diskboot.bin"
FW 4
>>>
"    BL      CreateTask_spytask\n"  // added
<<<
PATCHSUB name=taskcreatePhySw_my ref=0
->FW
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// taskcreatePhySw_my
//////////////////////////////////////////////////////////////
FUNC ref=0 length=9
ASM
FW 7
PATCHSUB name=mykbd_task
PATCHVAL value=0x2000 comment="stack size for new task_PhySw"
->FW
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// init_file_modules_task
//////////////////////////////////////////////////////////////
FUNC sig=task_InitFileModules length=8 name=init_file_modules_task
ASM
FW $
>>>
"    BL      core_spytask_can_start\n"  // CHDK: Set "it's-safe-to-start" flag for spytask
<<<
->FW
ENDASM
ENDFUNC

ENDFILE


//-------------------------- CAPT_SEQ.C -----------------------------------------------------------
FILE capt_seq.c

>>> file=../capt_seq_hdr.c

//////////////////////////////////////////////////////////////
// capt_seq_task
//////////////////////////////////////////////////////////////
FUNC sig=task_CaptSeq name=capt_seq_task
ASM
FW 50
>>>
"    BL      shooting_expo_param_override\n"    // added
<<<
FW 1
>>>
"    BL      wait_until_remote_button_is_released\n" // added as in ixus310
"    BL      capt_seq_hook_set_nr\n"                 // added as in ixus310
<<<
FW 3
>>>
"    BL      capt_seq_hook_raw_here\n"          // added as in ixus310
<<<
FW $
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// exp_drv_task
//////////////////////////////////////////////////////////////
FUNC sig=task_ExpDrv name=exp_drv_task
ASM
FW L141
>>>
//SKIP DATA
<<<
REM
REM
REM
REM
>>>
//END SKIP DATA
<<<

FW L289
PATCHSUB ref=0
FW $
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// exp_drv_task -> ref=0
//////////////////////////////////////////////////////////////
FUNC ref=0
ASM
FW 50
PATCHSUB ref=0
->FW
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// exp_drv_task -> ref=0 -> ref=0
//////////////////////////////////////////////////////////////
FUNC ref=0
ASM
FW 16
PATCHSUB name=apex2us
->FW
ENDASM
ENDFUNC
ENDFILE

//-------------------------- MOVIE_REC.C ----------------------------------------------------------
FILE movie_rec.c

>>> file=../movie_rec_hdr.c

//////////////////////////////////////////////////////////////
// movie_record_task
//////////////////////////////////////////////////////////////
FUNC sig=task_MovieRecord name=movie_record_task
ASM
FW 39
>>>
"    BL      unlock_optical_zoom\n" // added
<<<
FW 2
PATCHSUB ref=0
FW $
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// movie_record_task -> ref=0
//////////////////////////////////////////////////////////////
FUNC ref=0 length=128
ASM
FW 105
PATCHSUB ref=0
FW $
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// movie_record_task -> ref=0 -> ref=0
//////////////////////////////////////////////////////////////
FUNC ref=0 length=57
ASM
FW 13
REM
>>>
"    LDR     R7, =table\n"
<<<
FW 17
PATCHVAL value=0x1A
PATCHVAL value=0x19
FW 18
REM "Replaced by next instruction"
>>>
"    LDR     R2, =CompressionRateTable\n"
<<<
FW 2
>>>

"    LDR     R3, =video_mode\n"         // +
"    LDR     R3, [R3]\n"                // +
"    LDR     R3, [R3]\n"                // +
"    CMP     R3, #1\n"                  // +
"    LDREQ   R3, =video_quality\n"      // +
"    LDREQ   R3, [R3]\n"                // +
"    LDREQ   R2, [R3]\n"                // +

<<<
FW 2
>>>
"    BL      mute_on_zoom\n"            // +
<<<
FW $
ENDASM
ENDFUNC

ENDFILE

//-------------------------- FILEWRITE.C ----------------------------------------------------------
FILE filewrite.c

>>> file=../filewrite_hdr.c

//////////////////////////////////////////////////////////////
// filewritetask
//////////////////////////////////////////////////////////////
FUNC sig=task_FileWrite name=filewritetask
ASM
FW 42
PATCHSUB name=fwt_close
FW 8
PATCHSUB ref=0 comment="Open stage"
FW 1
PATCHSUB ref=1 comment="Write stage"
FW 1
PATCHSUB ref=2 comment="Close stage"
FW $
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// open stage
//////////////////////////////////////////////////////////////
FUNC ref=0
ASM
FW 16
>>>
//hook start
"    MOV R0, R4\n"
"    BL filewrite_main_hook\n"
//hook end
<<<
FW 5
PATCHSUB name=fwt_open
->FW
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// write stage
//////////////////////////////////////////////////////////////
FUNC ref=1 length=67
ASM
FW 32
PATCHSUB name=fwt_write
FW $
ENDASM
ENDFUNC

//////////////////////////////////////////////////////////////
// close stage
//////////////////////////////////////////////////////////////
FUNC ref=2
ASM
FW 11
>>>
//mod start
"    LDR R3, =current_write_ignored\n"
"    LDR R3, [R3]\n"
"    CMP R3, #0\n"
"    BNE loc_D\n" // jump over the next block
//mod end
<<<
FW 2
>>>
"loc_D:\n"
<<<
PATCHSUB name=fwt_close
->FW
ENDASM
ENDFUNC

ENDFILE
